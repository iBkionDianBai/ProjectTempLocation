{
  "version": 3,
  "sources": ["../../classnames/index.js", "../../mousetrap/mousetrap.js", "../../preact/src/constants.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/diff/props.js", "../../preact/src/create-context.js", "../../preact/src/diff/children.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../mobx/lib/mobx.module.js", "../../mobx-preact/lib/index.module.js", "../../preact/hooks/src/index.js", "../../preact/compat/src/util.js", "../../preact/compat/src/PureComponent.js", "../../preact/compat/src/memo.js", "../../preact/compat/src/forwardRef.js", "../../preact/compat/src/Children.js", "../../preact/compat/src/suspense.js", "../../preact/compat/src/suspense-list.js", "../../preact/src/constants.js", "../../preact/compat/src/portals.js", "../../preact/compat/src/render.js", "../../preact/compat/src/index.js", "../../preact/jsx-runtime/src/utils.js", "../../preact/src/constants.js", "../../preact/jsx-runtime/src/index.js", "../../@logicflow/core/src/options.ts", "../../@logicflow/core/src/util/index.ts", "../../@logicflow/core/src/util/animation.ts", "../../@logicflow/core/src/util/browser.ts", "../../@logicflow/core/src/util/compatible.ts", "../../@logicflow/core/src/constant/index.ts", "../../@logicflow/core/src/util/drag.ts", "../../@logicflow/core/src/algorithm/index.ts", "../../@logicflow/core/src/algorithm/edge.ts", "../../@logicflow/core/src/util/edge.ts", "../../@logicflow/core/src/util/geometry.ts", "../../@logicflow/core/src/util/graph.ts", "../../@logicflow/core/src/util/vector.ts", "../../@logicflow/core/src/util/matrix.ts", "../../@logicflow/core/src/util/mobx.ts", "../../@logicflow/core/src/util/node.ts", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../@logicflow/core/src/util/uuid.ts", "../../@logicflow/core/src/util/raf.ts", "../../@logicflow/core/src/util/sampling.ts", "../../@logicflow/core/src/util/theme.ts", "../../@logicflow/core/src/util/zIndex.ts", "../../@logicflow/core/src/model/edge/BaseEdgeModel.ts", "../../@logicflow/core/src/model/edge/BezierEdgeModel.ts", "../../@logicflow/core/src/model/edge/LineEdgeModel.ts", "../../@logicflow/core/src/model/edge/PolylineEdgeModel.ts", "../../@logicflow/core/src/model/node/BaseNodeModel.ts", "../../@logicflow/core/src/model/node/CircleNodeModel.ts", "../../@logicflow/core/src/model/node/DiamondNodeModel.ts", "../../@logicflow/core/src/model/node/EllipseNodeModel.ts", "../../@logicflow/core/src/model/node/PolygonNodeModel.ts", "../../@logicflow/core/src/model/node/RectNodeModel.ts", "../../@logicflow/core/src/model/node/TextNodeModel.ts", "../../@logicflow/core/src/model/node/HtmlNodeModel.ts", "../../@logicflow/core/src/model/EditConfigModel.ts", "../../@logicflow/core/src/event/eventEmitter.ts", "../../@logicflow/core/src/model/GraphModel.ts", "../../@logicflow/core/src/model/SnaplineModel.ts", "../../@logicflow/core/src/model/TransformModel.ts", "../../@logicflow/core/src/view/overlay/CanvasOverlay.tsx", "../../@logicflow/core/src/view/shape/Text.tsx", "../../@logicflow/core/src/view/shape/Line.tsx", "../../@logicflow/core/src/view/shape/Rect.tsx", "../../@logicflow/core/src/view/shape/Path.tsx", "../../@logicflow/core/src/view/shape/Circle.tsx", "../../@logicflow/core/src/view/shape/Ellipse.tsx", "../../@logicflow/core/src/view/shape/Polygon.tsx", "../../@logicflow/core/src/view/shape/Polyline.tsx", "../../@logicflow/core/src/view/overlay/BezierAdjustOverlay.tsx", "../../@logicflow/core/src/view/overlay/BackgroundOverlay.tsx", "../../@logicflow/core/src/view/overlay/Grid.tsx", "../../@logicflow/core/src/view/overlay/ModificationOverlay.tsx", "../../@logicflow/core/src/view/overlay/OutlineOverlay.tsx", "../../@logicflow/core/src/view/overlay/SnaplineOverlay.tsx", "../../@logicflow/core/src/view/overlay/ToolOverlay.tsx", "../../@logicflow/core/src/view/Graph.tsx", "../../@logicflow/core/src/view/Anchor.tsx", "../../@logicflow/core/src/view/Rotate.tsx", "../../@logicflow/core/src/view/text/BaseText.tsx", "../../@logicflow/core/src/view/text/LineText.tsx", "../../@logicflow/core/src/view/Control.tsx", "../../@logicflow/core/src/view/node/BaseNode.tsx", "../../@logicflow/core/src/view/node/RectNode.tsx", "../../@logicflow/core/src/view/node/CircleNode.tsx", "../../@logicflow/core/src/view/node/PolygonNode.tsx", "../../@logicflow/core/src/view/node/DiamondNode.tsx", "../../@logicflow/core/src/view/node/EllipseNode.tsx", "../../@logicflow/core/src/view/node/TextNode.tsx", "../../@logicflow/core/src/view/node/HtmlNode.tsx", "../../@logicflow/core/src/view/edge/AdjustPoint.tsx", "../../@logicflow/core/src/view/edge/Arrow.tsx", "../../@logicflow/core/src/view/edge/BaseEdge.tsx", "../../@logicflow/core/src/view/edge/BezierEdge.tsx", "../../@logicflow/core/src/view/edge/LineEdge.tsx", "../../@logicflow/core/src/view/edge/PolylineEdge.tsx", "../../@logicflow/core/src/view/behavior/dnd.ts", "../../@logicflow/core/src/tool/TextEditTool.tsx", "../../@logicflow/core/src/algorithm/outline.ts", "../../@logicflow/core/src/tool/MultipleSelectTool.tsx", "../../@logicflow/core/src/tool/tool.ts", "../../@logicflow/core/src/tool/snapline.ts", "../../@logicflow/core/src/keyboard/index.ts", "../../mobx-utils/mobx-utils.module.js", "../../@logicflow/core/src/history/index.ts", "../../@logicflow/core/src/keyboard/shortcut.ts", "../../@logicflow/core/src/LogicFlow.tsx", "../../@logicflow/core/src/index.ts"],
  "sourcesContent": ["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == 'http://www.w3.org/2000/svg') {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[] | null} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\t\tsubs = null;\n\t\t\t\t};\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tif (subs) {\n\t\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\t// Our matched DOM-node is further in the list of children than\n\t\t\t\t// where it's at now.\n\n\t\t\t\t// When the remaining old children is bigger than the new-children\n\t\t\t\t// minus our skewed index we know we are dealing with a shrinking list\n\t\t\t\t// we have to increase our skew with the matchedIndex - the skewed index\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// If we have matched all the children just decrease the skew\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - skew) {\n\t\t\t\t\tskew -= matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// When our new position is in front of our old position than we increase the skew\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\n\t\t\t\twhile (oldDom && oldDom.nodeType === 8 && oldDom.nextSibling) {\n\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t}\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType === 'svg') namespace = 'http://www.w3.org/2000/svg';\n\telse if (nodeType === 'math')\n\t\tnamespace = 'http://www.w3.org/1998/Math/MathML';\n\telse if (!namespace) namespace = 'http://www.w3.org/1999/xhtml';\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType === 'foreignObject'\n\t\t\t\t\t? 'http://www.w3.org/1999/xhtml'\n\t\t\t\t\t: namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != null) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._component = vnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "/** MobX - (c) Michel Weststrate 2015 - 2020 - MIT Licensed */\nvar OBFUSCATED_ERROR = \"An invariant failed, however the error is obfuscated because this is a production build.\";\nvar EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nvar EMPTY_OBJECT = {};\nObject.freeze(EMPTY_OBJECT);\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction fail(message) {\n    invariant(false, message);\n    throw \"X\"; // unreachable\n}\nfunction invariant(check, message) {\n    if (!check)\n        throw new Error(\"[mobx] \" + (message || OBFUSCATED_ERROR));\n}\n/**\n * Prints a deprecation message, but only one time.\n * Returns false if the deprecated message was already printed before\n */\nvar deprecatedMessages = [];\nfunction deprecated(msg, thing) {\n    if (process.env.NODE_ENV === \"production\")\n        return false;\n    if (thing) {\n        return deprecated(\"'\" + msg + \"', use '\" + thing + \"' instead.\");\n    }\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return false;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n    return true;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nfunction once(func) {\n    var invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nvar noop = function () { };\nfunction unique(list) {\n    var res = [];\n    list.forEach(function (item) {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction isObject(value) {\n    return value !== null && typeof value === \"object\";\n}\nfunction isPlainObject(value) {\n    if (value === null || typeof value !== \"object\")\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    return proto === Object.prototype || proto === null;\n}\nfunction convertToMap(dataStructure) {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure;\n    }\n    else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure);\n    }\n    else if (isPlainObject(dataStructure)) {\n        var map = new Map();\n        for (var key in dataStructure) {\n            map.set(key, dataStructure[key]);\n        }\n        return map;\n    }\n    else {\n        return fail(\"Cannot convert to map from '\" + dataStructure + \"'\");\n    }\n}\nfunction addHiddenProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value: value\n    });\n}\nfunction addHiddenFinalProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: value\n    });\n}\nfunction isPropertyConfigurable(object, prop) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    if (process.env.NODE_ENV !== \"production\" && !isPropertyConfigurable(object, prop))\n        fail(\"Cannot make property '\" + prop.toString() + \"' observable, it is not configurable and writable in the target object\");\n}\nfunction createInstanceofPredicate(name, clazz) {\n    var propName = \"isMobX\" + name;\n    clazz.prototype[propName] = true;\n    return function (x) {\n        return isObject(x) && x[propName] === true;\n    };\n}\n/**\n * Returns whether the argument is an array, disregarding observability.\n */\nfunction isArrayLike(x) {\n    return Array.isArray(x) || isObservableArray(x);\n}\nfunction isES6Map(thing) {\n    return thing instanceof Map;\n}\nfunction isES6Set(thing) {\n    return thing instanceof Set;\n}\n/**\n * Returns the following: own keys, prototype keys & own symbol keys, if they are enumerable.\n */\nfunction getPlainObjectKeys(object) {\n    var enumerables = new Set();\n    for (var key in object)\n        enumerables.add(key); // *all* enumerables\n    Object.getOwnPropertySymbols(object).forEach(function (k) {\n        if (Object.getOwnPropertyDescriptor(object, k).enumerable)\n            enumerables.add(k);\n    }); // *own* symbols\n    // Note: this implementation is missing enumerable, inherited, symbolic property names! That would however pretty expensive to add,\n    // as there is no efficient iterator that returns *all* properties\n    return Array.from(enumerables);\n}\nfunction stringifyKey(key) {\n    if (key && key.toString)\n        return key.toString();\n    else\n        return new String(key).toString();\n}\nfunction toPrimitive(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\nvar ownKeys = typeof Reflect !== \"undefined\" && Reflect.ownKeys\n    ? Reflect.ownKeys\n    : Object.getOwnPropertySymbols\n        ? function (obj) { return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj)); }\n        : /* istanbul ignore next */ Object.getOwnPropertyNames;\n\nvar $mobx = Symbol(\"mobx administration\");\nvar Atom = /** @class */ (function () {\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    function Atom(name) {\n        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n        this.name = name;\n        this.isPendingUnobservation = false; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n        this.isBeingObserved = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.NOT_TRACKING;\n    }\n    Atom.prototype.onBecomeObserved = function () {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    Atom.prototype.onBecomeUnobserved = function () {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    Atom.prototype.reportObserved = function () {\n        return reportObserved(this);\n    };\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    Atom.prototype.reportChanged = function () {\n        startBatch();\n        propagateChanged(this);\n        endBatch();\n    };\n    Atom.prototype.toString = function () {\n        return this.name;\n    };\n    return Atom;\n}());\nvar isAtom = createInstanceofPredicate(\"Atom\", Atom);\nfunction createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {\n    if (onBecomeObservedHandler === void 0) { onBecomeObservedHandler = noop; }\n    if (onBecomeUnobservedHandler === void 0) { onBecomeUnobservedHandler = noop; }\n    var atom = new Atom(name);\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler);\n    }\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler);\n    }\n    return atom;\n}\n\nfunction identityComparer(a, b) {\n    return a === b;\n}\nfunction structuralComparer(a, b) {\n    return deepEqual(a, b);\n}\nfunction shallowComparer(a, b) {\n    return deepEqual(a, b, 1);\n}\nfunction defaultComparer(a, b) {\n    return Object.is(a, b);\n}\nvar comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar mobxDidRunLazyInitializersSymbol = Symbol(\"mobx did run lazy initializers\");\nvar mobxPendingDecorators = Symbol(\"mobx pending decorators\");\nvar enumerableDescriptorCache = {};\nvar nonEnumerableDescriptorCache = {};\nfunction createPropertyInitializerDescriptor(prop, enumerable) {\n    var cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;\n    return (cache[prop] ||\n        (cache[prop] = {\n            configurable: true,\n            enumerable: enumerable,\n            get: function () {\n                initializeInstance(this);\n                return this[prop];\n            },\n            set: function (value) {\n                initializeInstance(this);\n                this[prop] = value;\n            }\n        }));\n}\nfunction initializeInstance(target) {\n    var e_1, _a;\n    if (target[mobxDidRunLazyInitializersSymbol] === true)\n        return;\n    var decorators = target[mobxPendingDecorators];\n    if (decorators) {\n        addHiddenProp(target, mobxDidRunLazyInitializersSymbol, true);\n        // Build property key array from both strings and symbols\n        var keys = __spread(Object.getOwnPropertySymbols(decorators), Object.keys(decorators));\n        try {\n            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                var d = decorators[key];\n                d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n}\nfunction createPropDecorator(propertyInitiallyEnumerable, propertyCreator) {\n    return function decoratorFactory() {\n        var decoratorArguments;\n        var decorator = function decorate(target, prop, descriptor, applyImmediately\n        // This is a special parameter to signal the direct application of a decorator, allow extendObservable to skip the entire type decoration part,\n        // as the instance to apply the decorator to equals the target\n        ) {\n            if (applyImmediately === true) {\n                propertyCreator(target, prop, descriptor, target, decoratorArguments);\n                return null;\n            }\n            if (process.env.NODE_ENV !== \"production\" && !quacksLikeADecorator(arguments))\n                fail(\"This function is a decorator, but it wasn't invoked like a decorator\");\n            if (!Object.prototype.hasOwnProperty.call(target, mobxPendingDecorators)) {\n                var inheritedDecorators = target[mobxPendingDecorators];\n                addHiddenProp(target, mobxPendingDecorators, __assign({}, inheritedDecorators));\n            }\n            target[mobxPendingDecorators][prop] = {\n                prop: prop,\n                propertyCreator: propertyCreator,\n                descriptor: descriptor,\n                decoratorTarget: target,\n                decoratorArguments: decoratorArguments\n            };\n            return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);\n        };\n        if (quacksLikeADecorator(arguments)) {\n            // @decorator\n            decoratorArguments = EMPTY_ARRAY;\n            return decorator.apply(null, arguments);\n        }\n        else {\n            // @decorator(args)\n            decoratorArguments = Array.prototype.slice.call(arguments);\n            return decorator;\n        }\n    };\n}\nfunction quacksLikeADecorator(args) {\n    return (((args.length === 2 || args.length === 3) &&\n        (typeof args[1] === \"string\" || typeof args[1] === \"symbol\")) ||\n        (args.length === 4 && args[3] === true));\n}\n\nfunction deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return observable.array(v, { name: name });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name: name });\n    if (isES6Map(v))\n        return observable.map(v, { name: name });\n    if (isES6Set(v))\n        return observable.set(v, { name: name });\n    return v;\n}\nfunction shallowEnhancer(v, _, name) {\n    if (v === undefined || v === null)\n        return v;\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v))\n        return v;\n    if (Array.isArray(v))\n        return observable.array(v, { name: name, deep: false });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name: name, deep: false });\n    if (isES6Map(v))\n        return observable.map(v, { name: name, deep: false });\n    if (isES6Set(v))\n        return observable.set(v, { name: name, deep: false });\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\n}\nfunction referenceEnhancer(newValue) {\n    // never turn into an observable\n    return newValue;\n}\nfunction refStructEnhancer(v, oldValue, name) {\n    if (process.env.NODE_ENV !== \"production\" && isObservable(v))\n        throw \"observable.struct should not be used with observable values\";\n    if (deepEqual(v, oldValue))\n        return oldValue;\n    return v;\n}\n\nfunction createDecoratorForEnhancer(enhancer) {\n    invariant(enhancer);\n    var decorator = createPropDecorator(true, function (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(!descriptor || !descriptor.get, \"@observable cannot be used on getter (property \\\"\" + stringifyKey(propertyName) + \"\\\"), use @computed instead.\");\n        }\n        var initialValue = descriptor\n            ? descriptor.initializer\n                ? descriptor.initializer.call(target)\n                : descriptor.value\n            : undefined;\n        asObservableObject(target).addObservableProp(propertyName, initialValue, enhancer);\n    });\n    var res = \n    // Extra process checks, as this happens during module initialization\n    typeof process !== \"undefined\" && process.env && process.env.NODE_ENV !== \"production\"\n        ? function observableDecorator() {\n            // This wrapper function is just to detect illegal decorator invocations, deprecate in a next version\n            // and simply return the created prop decorator\n            if (arguments.length < 2)\n                return fail(\"Incorrect decorator invocation. @observable decorator doesn't expect any arguments\");\n            return decorator.apply(null, arguments);\n        }\n        : decorator;\n    res.enhancer = enhancer;\n    return res;\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nvar defaultCreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n};\nObject.freeze(defaultCreateObservableOptions);\nfunction assertValidOption(key) {\n    if (!/^(deep|name|equals|defaultDecorator|proxy)$/.test(key))\n        fail(\"invalid option for (extend)observable: \" + key);\n}\nfunction asCreateObservableOptions(thing) {\n    if (thing === null || thing === undefined)\n        return defaultCreateObservableOptions;\n    if (typeof thing === \"string\")\n        return { name: thing, deep: true, proxy: true };\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof thing !== \"object\")\n            return fail(\"expected options object\");\n        Object.keys(thing).forEach(assertValidOption);\n    }\n    return thing;\n}\nvar deepDecorator = createDecoratorForEnhancer(deepEnhancer);\nvar shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);\nvar refDecorator = createDecoratorForEnhancer(referenceEnhancer);\nvar refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);\nfunction getEnhancerFromOptions(options) {\n    return options.defaultDecorator\n        ? options.defaultDecorator.enhancer\n        : options.deep === false\n            ? referenceEnhancer\n            : deepEnhancer;\n}\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v, arg2, arg3) {\n    // @observable someProp;\n    if (typeof arguments[1] === \"string\" || typeof arguments[1] === \"symbol\") {\n        return deepDecorator.apply(null, arguments);\n    }\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    var res = isPlainObject(v)\n        ? observable.object(v, arg2, arg3)\n        : Array.isArray(v)\n            ? observable.array(v, arg2)\n            : isES6Map(v)\n                ? observable.map(v, arg2)\n                : isES6Set(v)\n                    ? observable.set(v, arg2)\n                    : v;\n    // this value could be converted to a new observable data structure, return it\n    if (res !== v)\n        return res;\n    // otherwise, just box it\n    fail(process.env.NODE_ENV !== \"production\" &&\n        \"The provided value could not be converted into an observable. If you want just create an observable reference to the object use 'observable.box(value)'\");\n}\nvar observableFactories = {\n    box: function (value, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"box\");\n        var o = asCreateObservableOptions(options);\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);\n    },\n    array: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"array\");\n        var o = asCreateObservableOptions(options);\n        return createObservableArray(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    map: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"map\");\n        var o = asCreateObservableOptions(options);\n        return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    set: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"set\");\n        var o = asCreateObservableOptions(options);\n        return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    object: function (props, decorators, options) {\n        if (typeof arguments[1] === \"string\")\n            incorrectlyUsedAsDecorator(\"object\");\n        var o = asCreateObservableOptions(options);\n        if (o.proxy === false) {\n            return extendObservable({}, props, decorators, o);\n        }\n        else {\n            var defaultDecorator = getDefaultDecoratorFromObjectOptions(o);\n            var base = extendObservable({}, undefined, undefined, o);\n            var proxy = createDynamicObservableObject(base);\n            extendObservableObjectWithProperties(proxy, props, decorators, defaultDecorator);\n            return proxy;\n        }\n    },\n    ref: refDecorator,\n    shallow: shallowDecorator,\n    deep: deepDecorator,\n    struct: refStructDecorator\n};\nvar observable = createObservable;\n// weird trick to keep our typings nicely with our funcs, and still extend the observable function\nObject.keys(observableFactories).forEach(function (name) { return (observable[name] = observableFactories[name]); });\nfunction incorrectlyUsedAsDecorator(methodName) {\n    fail(\n    // process.env.NODE_ENV !== \"production\" &&\n    \"Expected one or two arguments to observable.\" + methodName + \". Did you accidentally try to use observable.\" + methodName + \" as decorator?\");\n}\n\nvar computedDecorator = createPropDecorator(false, function (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(descriptor && descriptor.get, \"Trying to declare a computed value for unspecified getter '\" + stringifyKey(propertyName) + \"'\");\n    }\n    var get = descriptor.get, set = descriptor.set; // initialValue is the descriptor for get / set props\n    // Optimization: faster on decorator target or instance? Assuming target\n    // Optimization: find out if declaring on instance isn't just faster. (also makes the property descriptor simpler). But, more memory usage..\n    // Forcing instance now, fixes hot reloadig issues on React Native:\n    var options = decoratorArgs[0] || {};\n    asObservableObject(instance).addComputedProp(instance, propertyName, __assign({ get: get,\n        set: set, context: instance }, options));\n});\nvar computedStructDecorator = computedDecorator({ equals: comparer.structural });\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nvar computed = function computed(arg1, arg2, arg3) {\n    if (typeof arg2 === \"string\") {\n        // @computed\n        return computedDecorator.apply(null, arguments);\n    }\n    if (arg1 !== null && typeof arg1 === \"object\" && arguments.length === 1) {\n        // @computed({ options })\n        return computedDecorator.apply(null, arguments);\n    }\n    // computed(expr, options?)\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof arg1 === \"function\", \"First argument to `computed` should be an expression.\");\n        invariant(arguments.length < 3, \"Computed takes one or two arguments if used as function\");\n    }\n    var opts = typeof arg2 === \"object\" ? arg2 : {};\n    opts.get = arg1;\n    opts.set = typeof arg2 === \"function\" ? arg2 : opts.set;\n    opts.name = opts.name || arg1.name || \"\"; /* for generated name */\n    return new ComputedValue(opts);\n};\ncomputed.struct = computedStructDecorator;\n\nvar IDerivationState;\n(function (IDerivationState) {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    IDerivationState[IDerivationState[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    IDerivationState[IDerivationState[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    IDerivationState[IDerivationState[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    IDerivationState[IDerivationState[\"STALE\"] = 2] = \"STALE\";\n})(IDerivationState || (IDerivationState = {}));\nvar TraceMode;\n(function (TraceMode) {\n    TraceMode[TraceMode[\"NONE\"] = 0] = \"NONE\";\n    TraceMode[TraceMode[\"LOG\"] = 1] = \"LOG\";\n    TraceMode[TraceMode[\"BREAK\"] = 2] = \"BREAK\";\n})(TraceMode || (TraceMode = {}));\nvar CaughtException = /** @class */ (function () {\n    function CaughtException(cause) {\n        this.cause = cause;\n        // Empty\n    }\n    return CaughtException;\n}());\nfunction isCaughtException(e) {\n    return e instanceof CaughtException;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nfunction shouldCompute(derivation) {\n    switch (derivation.dependenciesState) {\n        case IDerivationState.UP_TO_DATE:\n            return false;\n        case IDerivationState.NOT_TRACKING:\n        case IDerivationState.STALE:\n            return true;\n        case IDerivationState.POSSIBLY_STALE: {\n            // state propagation can occur outside of action/reactive context #2195\n            var prevAllowStateReads = allowStateReadsStart(true);\n            var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            var obs = derivation.observing, l = obs.length;\n            for (var i = 0; i < l; i++) {\n                var obj = obs[i];\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get();\n                    }\n                    else {\n                        try {\n                            obj.get();\n                        }\n                        catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked);\n                            allowStateReadsEnd(prevAllowStateReads);\n                            return true;\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if (derivation.dependenciesState === IDerivationState.STALE) {\n                        untrackedEnd(prevUntracked);\n                        allowStateReadsEnd(prevAllowStateReads);\n                        return true;\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation);\n            untrackedEnd(prevUntracked);\n            allowStateReadsEnd(prevAllowStateReads);\n            return false;\n        }\n    }\n}\n// function invariantShouldCompute(derivation: IDerivation) {\n//     const newDepState = (derivation as any).dependenciesState\n//     if (\n//         process.env.NODE_ENV === \"production\" &&\n//         (newDepState === IDerivationState.POSSIBLY_STALE ||\n//             newDepState === IDerivationState.NOT_TRACKING)\n//     )\n//         fail(\"Illegal dependency state\")\n// }\nfunction isComputingDerivation() {\n    return globalState.trackingDerivation !== null; // filter out actions inside computations\n}\nfunction checkIfStateModificationsAreAllowed(atom) {\n    var hasObservers = atom.observers.size > 0;\n    // Should never be possible to change an observed observable from inside computed, see #798\n    if (globalState.computationDepth > 0 && hasObservers)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            \"Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: \" + atom.name);\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === \"strict\"))\n        fail(process.env.NODE_ENV !== \"production\" &&\n            (globalState.enforceActions\n                ? \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \"\n                : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \") +\n                atom.name);\n}\nfunction checkIfStateReadsAreAllowed(observable) {\n    if (process.env.NODE_ENV !== \"production\" &&\n        !globalState.allowStateReads &&\n        globalState.observableRequiresReaction) {\n        console.warn(\"[mobx] Observable \" + observable.name + \" being read outside a reactive context\");\n    }\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nfunction trackDerivedFunction(derivation, f, context) {\n    var prevAllowStateReads = allowStateReadsStart(true);\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation);\n    derivation.newObserving = new Array(derivation.observing.length + 100);\n    derivation.unboundDepsCount = 0;\n    derivation.runId = ++globalState.runId;\n    var prevTracking = globalState.trackingDerivation;\n    globalState.trackingDerivation = derivation;\n    var result;\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context);\n    }\n    else {\n        try {\n            result = f.call(context);\n        }\n        catch (e) {\n            result = new CaughtException(e);\n        }\n    }\n    globalState.trackingDerivation = prevTracking;\n    bindDependencies(derivation);\n    warnAboutDerivationWithoutDependencies(derivation);\n    allowStateReadsEnd(prevAllowStateReads);\n    return result;\n}\nfunction warnAboutDerivationWithoutDependencies(derivation) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (derivation.observing.length !== 0)\n        return;\n    if (globalState.reactionRequiresObservable || derivation.requiresObservable) {\n        console.warn(\"[mobx] Derivation \" + derivation.name + \" is created/updated without reading any observable value\");\n    }\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    var prevObserving = derivation.observing;\n    var observing = (derivation.observing = derivation.newObserving);\n    var lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE;\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    var i0 = 0, l = derivation.unboundDepsCount;\n    for (var i = 0; i < l; i++) {\n        var dep = observing[i];\n        if (dep.diffValue === 0) {\n            dep.diffValue = 1;\n            if (i0 !== i)\n                observing[i0] = dep;\n            i0++;\n        }\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = dep.dependenciesState;\n        }\n    }\n    observing.length = i0;\n    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length;\n    while (l--) {\n        var dep = prevObserving[l];\n        if (dep.diffValue === 0) {\n            removeObserver(dep, derivation);\n        }\n        dep.diffValue = 0;\n    }\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        var dep = observing[i0];\n        if (dep.diffValue === 1) {\n            dep.diffValue = 0;\n            addObserver(dep, derivation);\n        }\n    }\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {\n        derivation.dependenciesState = lowestNewObservingDerivationState;\n        derivation.onBecomeStale();\n    }\n}\nfunction clearObserving(derivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    var obs = derivation.observing;\n    derivation.observing = [];\n    var i = obs.length;\n    while (i--)\n        removeObserver(obs[i], derivation);\n    derivation.dependenciesState = IDerivationState.NOT_TRACKING;\n}\nfunction untracked(action) {\n    var prev = untrackedStart();\n    try {\n        return action();\n    }\n    finally {\n        untrackedEnd(prev);\n    }\n}\nfunction untrackedStart() {\n    var prev = globalState.trackingDerivation;\n    globalState.trackingDerivation = null;\n    return prev;\n}\nfunction untrackedEnd(prev) {\n    globalState.trackingDerivation = prev;\n}\nfunction allowStateReadsStart(allowStateReads) {\n    var prev = globalState.allowStateReads;\n    globalState.allowStateReads = allowStateReads;\n    return prev;\n}\nfunction allowStateReadsEnd(prev) {\n    globalState.allowStateReads = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nfunction changeDependenciesStateTo0(derivation) {\n    if (derivation.dependenciesState === IDerivationState.UP_TO_DATE)\n        return;\n    derivation.dependenciesState = IDerivationState.UP_TO_DATE;\n    var obs = derivation.observing;\n    var i = obs.length;\n    while (i--)\n        obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;\n}\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nvar currentActionId = 0;\nvar nextActionId = 1;\nvar functionNameDescriptor = Object.getOwnPropertyDescriptor(function () { }, \"name\");\nvar isFunctionNameConfigurable = functionNameDescriptor && functionNameDescriptor.configurable;\nfunction createAction(actionName, fn, ref) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\", \"`action` can only be invoked on functions\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n    var res = function () {\n        return executeAction(actionName, fn, ref || this, arguments);\n    };\n    res.isMobxAction = true;\n    if (process.env.NODE_ENV !== \"production\") {\n        if (isFunctionNameConfigurable) {\n            Object.defineProperty(res, \"name\", { value: actionName });\n        }\n    }\n    return res;\n}\nfunction executeAction(actionName, fn, scope, args) {\n    var runInfo = _startAction(actionName, scope, args);\n    try {\n        return fn.apply(scope, args);\n    }\n    catch (err) {\n        runInfo.error = err;\n        throw err;\n    }\n    finally {\n        _endAction(runInfo);\n    }\n}\nfunction _startAction(actionName, scope, args) {\n    var notifySpy = isSpyEnabled() && !!actionName;\n    var startTime = 0;\n    if (notifySpy && process.env.NODE_ENV !== \"production\") {\n        startTime = Date.now();\n        var l = (args && args.length) || 0;\n        var flattendArgs = new Array(l);\n        if (l > 0)\n            for (var i = 0; i < l; i++)\n                flattendArgs[i] = args[i];\n        spyReportStart({\n            type: \"action\",\n            name: actionName,\n            object: scope,\n            arguments: flattendArgs\n        });\n    }\n    var prevDerivation = untrackedStart();\n    startBatch();\n    var prevAllowStateChanges = allowStateChangesStart(true);\n    var prevAllowStateReads = allowStateReadsStart(true);\n    var runInfo = {\n        prevDerivation: prevDerivation,\n        prevAllowStateChanges: prevAllowStateChanges,\n        prevAllowStateReads: prevAllowStateReads,\n        notifySpy: notifySpy,\n        startTime: startTime,\n        actionId: nextActionId++,\n        parentActionId: currentActionId\n    };\n    currentActionId = runInfo.actionId;\n    return runInfo;\n}\nfunction _endAction(runInfo) {\n    if (currentActionId !== runInfo.actionId) {\n        fail(\"invalid action stack. did you forget to finish an action?\");\n    }\n    currentActionId = runInfo.parentActionId;\n    if (runInfo.error !== undefined) {\n        globalState.suppressReactionErrors = true;\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges);\n    allowStateReadsEnd(runInfo.prevAllowStateReads);\n    endBatch();\n    untrackedEnd(runInfo.prevDerivation);\n    if (runInfo.notifySpy && process.env.NODE_ENV !== \"production\") {\n        spyReportEnd({ time: Date.now() - runInfo.startTime });\n    }\n    globalState.suppressReactionErrors = false;\n}\nfunction allowStateChanges(allowStateChanges, func) {\n    var prev = allowStateChangesStart(allowStateChanges);\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        allowStateChangesEnd(prev);\n    }\n    return res;\n}\nfunction allowStateChangesStart(allowStateChanges) {\n    var prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    globalState.allowStateChanges = prev;\n}\nfunction allowStateChangesInsideComputed(func) {\n    var prev = globalState.computationDepth;\n    globalState.computationDepth = 0;\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        globalState.computationDepth = prev;\n    }\n    return res;\n}\n\nvar ObservableValue = /** @class */ (function (_super) {\n    __extends(ObservableValue, _super);\n    function ObservableValue(value, enhancer, name, notifySpy, equals) {\n        if (name === void 0) { name = \"ObservableValue@\" + getNextId(); }\n        if (notifySpy === void 0) { notifySpy = true; }\n        if (equals === void 0) { equals = comparer.default; }\n        var _this = _super.call(this, name) || this;\n        _this.enhancer = enhancer;\n        _this.name = name;\n        _this.equals = equals;\n        _this.hasUnreportedChange = false;\n        _this.value = enhancer(value, undefined, name);\n        if (notifySpy && isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            // only notify spy if this is a stand-alone observable\n            spyReport({ type: \"create\", name: _this.name, newValue: \"\" + _this.value });\n        }\n        return _this;\n    }\n    ObservableValue.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableValue.prototype.set = function (newValue) {\n        var oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            if (notifySpy && process.env.NODE_ENV !== \"production\") {\n                spyReportStart({\n                    type: \"update\",\n                    name: this.name,\n                    newValue: newValue,\n                    oldValue: oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    };\n    ObservableValue.prototype.prepareNewValue = function (newValue) {\n        checkIfStateModificationsAreAllowed(this);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this,\n                type: \"update\",\n                newValue: newValue\n            });\n            if (!change)\n                return globalState.UNCHANGED;\n            newValue = change.newValue;\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value, this.name);\n        return this.equals(this.value, newValue) ? globalState.UNCHANGED : newValue;\n    };\n    ObservableValue.prototype.setNewValue = function (newValue) {\n        var oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: \"update\",\n                object: this,\n                newValue: newValue,\n                oldValue: oldValue\n            });\n        }\n    };\n    ObservableValue.prototype.get = function () {\n        this.reportObserved();\n        return this.dehanceValue(this.value);\n    };\n    ObservableValue.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately)\n            listener({\n                object: this,\n                type: \"update\",\n                newValue: this.value,\n                oldValue: undefined\n            });\n        return registerListener(this, listener);\n    };\n    ObservableValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ObservableValue.prototype.toString = function () {\n        return this.name + \"[\" + this.value + \"]\";\n    };\n    ObservableValue.prototype.valueOf = function () {\n        return toPrimitive(this.get());\n    };\n    ObservableValue.prototype[Symbol.toPrimitive] = function () {\n        return this.valueOf();\n    };\n    return ObservableValue;\n}(Atom));\nvar isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nvar ComputedValue = /** @class */ (function () {\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    function ComputedValue(options) {\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = null; // during tracking it's an array with new observed observers\n        this.isBeingObserved = false;\n        this.isPendingUnobservation = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.runId = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.UP_TO_DATE;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.value = new CaughtException(null);\n        this.isComputing = false; // to check for cycles\n        this.isRunningSetter = false;\n        this.isTracing = TraceMode.NONE;\n        invariant(options.get, \"missing option for computed: get\");\n        this.derivation = options.get;\n        this.name = options.name || \"ComputedValue@\" + getNextId();\n        if (options.set)\n            this.setter = createAction(this.name + \"-setter\", options.set);\n        this.equals =\n            options.equals ||\n                (options.compareStructural || options.struct\n                    ? comparer.structural\n                    : comparer.default);\n        this.scope = options.context;\n        this.requiresReaction = !!options.requiresReaction;\n        this.keepAlive = !!options.keepAlive;\n    }\n    ComputedValue.prototype.onBecomeStale = function () {\n        propagateMaybeChanged(this);\n    };\n    ComputedValue.prototype.onBecomeObserved = function () {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    ComputedValue.prototype.onBecomeUnobserved = function () {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    ComputedValue.prototype.get = function () {\n        if (this.isComputing)\n            fail(\"Cycle detected in computation \" + this.name + \": \" + this.derivation);\n        if (globalState.inBatch === 0 && this.observers.size === 0 && !this.keepAlive) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead();\n                startBatch(); // See perf test 'computed memoization'\n                this.value = this.computeValue(false);\n                endBatch();\n            }\n        }\n        else {\n            reportObserved(this);\n            if (shouldCompute(this))\n                if (this.trackAndCompute())\n                    propagateChangeConfirmed(this);\n        }\n        var result = this.value;\n        if (isCaughtException(result))\n            throw result.cause;\n        return result;\n    };\n    ComputedValue.prototype.peek = function () {\n        var res = this.computeValue(false);\n        if (isCaughtException(res))\n            throw res.cause;\n        return res;\n    };\n    ComputedValue.prototype.set = function (value) {\n        if (this.setter) {\n            invariant(!this.isRunningSetter, \"The setter of computed value '\" + this.name + \"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?\");\n            this.isRunningSetter = true;\n            try {\n                this.setter.call(this.scope, value);\n            }\n            finally {\n                this.isRunningSetter = false;\n            }\n        }\n        else\n            invariant(false, process.env.NODE_ENV !== \"production\" &&\n                \"[ComputedValue '\" + this.name + \"'] It is not possible to assign a new value to a computed value.\");\n    };\n    ComputedValue.prototype.trackAndCompute = function () {\n        if (isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            spyReport({\n                object: this.scope,\n                type: \"compute\",\n                name: this.name\n            });\n        }\n        var oldValue = this.value;\n        var wasSuspended = \n        /* see #1208 */ this.dependenciesState === IDerivationState.NOT_TRACKING;\n        var newValue = this.computeValue(true);\n        var changed = wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals(oldValue, newValue);\n        if (changed) {\n            this.value = newValue;\n        }\n        return changed;\n    };\n    ComputedValue.prototype.computeValue = function (track) {\n        this.isComputing = true;\n        globalState.computationDepth++;\n        var res;\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope);\n        }\n        else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope);\n            }\n            else {\n                try {\n                    res = this.derivation.call(this.scope);\n                }\n                catch (e) {\n                    res = new CaughtException(e);\n                }\n            }\n        }\n        globalState.computationDepth--;\n        this.isComputing = false;\n        return res;\n    };\n    ComputedValue.prototype.suspend = function () {\n        if (!this.keepAlive) {\n            clearObserving(this);\n            this.value = undefined; // don't hold on to computed value!\n        }\n    };\n    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n        var _this = this;\n        var firstTime = true;\n        var prevValue = undefined;\n        return autorun(function () {\n            var newValue = _this.get();\n            if (!firstTime || fireImmediately) {\n                var prevU = untrackedStart();\n                listener({\n                    type: \"update\",\n                    object: _this,\n                    newValue: newValue,\n                    oldValue: prevValue\n                });\n                untrackedEnd(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    };\n    ComputedValue.prototype.warnAboutUntrackedRead = function () {\n        if (process.env.NODE_ENV === \"production\")\n            return;\n        if (this.requiresReaction === true) {\n            fail(\"[mobx] Computed value \" + this.name + \" is read outside a reactive context\");\n        }\n        if (this.isTracing !== TraceMode.NONE) {\n            console.log(\"[mobx.trace] '\" + this.name + \"' is being read outside a reactive context. Doing a full recompute\");\n        }\n        if (globalState.computedRequiresReaction) {\n            console.warn(\"[mobx] Computed value \" + this.name + \" is being read outside a reactive context. Doing a full recompute\");\n        }\n    };\n    ComputedValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ComputedValue.prototype.toString = function () {\n        return this.name + \"[\" + this.derivation.toString() + \"]\";\n    };\n    ComputedValue.prototype.valueOf = function () {\n        return toPrimitive(this.get());\n    };\n    ComputedValue.prototype[Symbol.toPrimitive] = function () {\n        return this.valueOf();\n    };\n    return ComputedValue;\n}());\nvar isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue);\n\n/**\n * These values will persist if global state is reset\n */\nvar persistentKeys = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\"\n];\nvar MobXGlobals = /** @class */ (function () {\n    function MobXGlobals() {\n        /**\n         * MobXGlobals version.\n         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n         * It indicates that the global state still stores similar information\n         *\n         * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n         * internal state storage of MobX, and can be the same across many different package versions\n         */\n        this.version = 5;\n        /**\n         * globally unique token to signal unchanged\n         */\n        this.UNCHANGED = {};\n        /**\n         * Currently running derivation\n         */\n        this.trackingDerivation = null;\n        /**\n         * Are we running a computation currently? (not a reaction)\n         */\n        this.computationDepth = 0;\n        /**\n         * Each time a derivation is tracked, it is assigned a unique run-id\n         */\n        this.runId = 0;\n        /**\n         * 'guid' for general purpose. Will be persisted amongst resets.\n         */\n        this.mobxGuid = 0;\n        /**\n         * Are we in a batch block? (and how many of them)\n         */\n        this.inBatch = 0;\n        /**\n         * Observables that don't have observers anymore, and are about to be\n         * suspended, unless somebody else accesses it in the same batch\n         *\n         * @type {IObservable[]}\n         */\n        this.pendingUnobservations = [];\n        /**\n         * List of scheduled, not yet executed, reactions.\n         */\n        this.pendingReactions = [];\n        /**\n         * Are we currently processing reactions?\n         */\n        this.isRunningReactions = false;\n        /**\n         * Is it allowed to change observables at this point?\n         * In general, MobX doesn't allow that when running computations and React.render.\n         * To ensure that those functions stay pure.\n         */\n        this.allowStateChanges = true;\n        /**\n         * Is it allowed to read observables at this point?\n         * Used to hold the state needed for `observableRequiresReaction`\n         */\n        this.allowStateReads = true;\n        /**\n         * If strict mode is enabled, state changes are by default not allowed\n         */\n        this.enforceActions = false;\n        /**\n         * Spy callbacks\n         */\n        this.spyListeners = [];\n        /**\n         * Globally attached error handlers that react specifically to errors in reactions\n         */\n        this.globalReactionErrorHandlers = [];\n        /**\n         * Warn if computed values are accessed outside a reactive context\n         */\n        this.computedRequiresReaction = false;\n        /**\n         * (Experimental)\n         * Warn if you try to create to derivation / reactive context without accessing any observable.\n         */\n        this.reactionRequiresObservable = false;\n        /**\n         * (Experimental)\n         * Warn if observables are accessed outside a reactive context\n         */\n        this.observableRequiresReaction = false;\n        /**\n         * Allows overwriting of computed properties, useful in tests but not prod as it can cause\n         * memory leaks. See https://github.com/mobxjs/mobx/issues/1867\n         */\n        this.computedConfigurable = false;\n        /*\n         * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n         * the stack when an exception occurs while debugging.\n         */\n        this.disableErrorBoundaries = false;\n        /*\n         * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n         * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n         */\n        this.suppressReactionErrors = false;\n    }\n    return MobXGlobals;\n}());\nvar mockGlobal = {};\nfunction getGlobal() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return mockGlobal;\n}\nvar canMergeGlobalState = true;\nvar isolateCalled = false;\nvar globalState = (function () {\n    var global = getGlobal();\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals)\n        canMergeGlobalState = false;\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version)\n        canMergeGlobalState = false;\n    if (!canMergeGlobalState) {\n        setTimeout(function () {\n            if (!isolateCalled) {\n                fail(\"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\");\n            }\n        }, 1);\n        return new MobXGlobals();\n    }\n    else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1;\n        if (!global.__mobxGlobals.UNCHANGED)\n            global.__mobxGlobals.UNCHANGED = {}; // make merge backward compatible\n        return global.__mobxGlobals;\n    }\n    else {\n        global.__mobxInstanceCount = 1;\n        return (global.__mobxGlobals = new MobXGlobals());\n    }\n})();\nfunction isolateGlobalState() {\n    if (globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions)\n        fail(\"isolateGlobalState should be called before MobX is running any reactions\");\n    isolateCalled = true;\n    if (canMergeGlobalState) {\n        if (--getGlobal().__mobxInstanceCount === 0)\n            getGlobal().__mobxGlobals = undefined;\n        globalState = new MobXGlobals();\n    }\n}\nfunction getGlobalState() {\n    return globalState;\n}\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nfunction resetGlobalState() {\n    var defaultGlobals = new MobXGlobals();\n    for (var key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState[key] = defaultGlobals[key];\n    globalState.allowStateChanges = !globalState.enforceActions;\n}\n\nfunction hasObservers(observable) {\n    return observable.observers && observable.observers.size > 0;\n}\nfunction getObservers(observable) {\n    return observable.observers;\n}\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nfunction addObserver(observable, node) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n    observable.observers.add(node);\n    if (observable.lowestObserverState > node.dependenciesState)\n        observable.lowestObserverState = node.dependenciesState;\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\nfunction removeObserver(observable, node) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers.delete(node);\n    if (observable.observers.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable);\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\nfunction queueForUnobservation(observable) {\n    if (observable.isPendingUnobservation === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation = true;\n        globalState.pendingUnobservations.push(observable);\n    }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nfunction startBatch() {\n    globalState.inBatch++;\n}\nfunction endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions();\n        // the batch is actually about to finish, all unobserving should happen here.\n        var list = globalState.pendingUnobservations;\n        for (var i = 0; i < list.length; i++) {\n            var observable = list[i];\n            observable.isPendingUnobservation = false;\n            if (observable.observers.size === 0) {\n                if (observable.isBeingObserved) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved = false;\n                    observable.onBecomeUnobserved();\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observable of another, etc..\n                    observable.suspend();\n                }\n            }\n        }\n        globalState.pendingUnobservations = [];\n    }\n}\nfunction reportObserved(observable) {\n    checkIfStateReadsAreAllowed(observable);\n    var derivation = globalState.trackingDerivation;\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId !== observable.lastAccessedBy) {\n            observable.lastAccessedBy = derivation.runId;\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving[derivation.unboundDepsCount++] = observable;\n            if (!observable.isBeingObserved) {\n                observable.isBeingObserved = true;\n                observable.onBecomeObserved();\n            }\n        }\n        return true;\n    }\n    else if (observable.observers.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable);\n    }\n    return false;\n}\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\nfunction propagateChanged(observable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n        d.dependenciesState = IDerivationState.STALE;\n    });\n    // invariantLOS(observable, \"changed end\");\n}\n// Called by ComputedValue when it recalculate and its value changed\nfunction propagateChangeConfirmed(observable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    observable.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.POSSIBLY_STALE)\n            d.dependenciesState = IDerivationState.STALE;\n        else if (d.dependenciesState === IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n        )\n            observable.lowestObserverState = IDerivationState.UP_TO_DATE;\n    });\n    // invariantLOS(observable, \"confirmed end\");\n}\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nfunction propagateMaybeChanged(observable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState !== IDerivationState.UP_TO_DATE)\n        return;\n    observable.lowestObserverState = IDerivationState.POSSIBLY_STALE;\n    observable.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            d.dependenciesState = IDerivationState.POSSIBLY_STALE;\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n    });\n    // invariantLOS(observable, \"maybe end\");\n}\nfunction logTraceInfo(derivation, observable) {\n    console.log(\"[mobx.trace] '\" + derivation.name + \"' is invalidated due to a change in: '\" + observable.name + \"'\");\n    if (derivation.isTracing === TraceMode.BREAK) {\n        var lines = [];\n        printDepTree(getDependencyTree(derivation), lines, 1);\n        // prettier-ignore\n        new Function(\"debugger;\\n/*\\nTracing '\" + derivation.name + \"'\\n\\nYou are entering this break point because derivation '\" + derivation.name + \"' is being traced and '\" + observable.name + \"' is now forcing it to update.\\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\\n\\n\" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\") + \"\\n\\nThe dependencies for this derivation are:\\n\\n\" + lines.join(\"\\n\") + \"\\n*/\\n    \")();\n    }\n}\nfunction printDepTree(tree, lines, depth) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\");\n        return;\n    }\n    lines.push(\"\" + new Array(depth).join(\"\\t\") + tree.name); // MWE: not the fastest, but the easiest way :)\n    if (tree.dependencies)\n        tree.dependencies.forEach(function (child) { return printDepTree(child, lines, depth + 1); });\n}\n\nvar Reaction = /** @class */ (function () {\n    function Reaction(name, onInvalidate, errorHandler, requiresObservable) {\n        if (name === void 0) { name = \"Reaction@\" + getNextId(); }\n        if (requiresObservable === void 0) { requiresObservable = false; }\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.errorHandler = errorHandler;\n        this.requiresObservable = requiresObservable;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = [];\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.diffValue = 0;\n        this.runId = 0;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n        this.isTracing = TraceMode.NONE;\n    }\n    Reaction.prototype.onBecomeStale = function () {\n        this.schedule();\n    };\n    Reaction.prototype.schedule = function () {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    };\n    Reaction.prototype.isScheduled = function () {\n        return this._isScheduled;\n    };\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    Reaction.prototype.runReaction = function () {\n        if (!this.isDisposed) {\n            startBatch();\n            this._isScheduled = false;\n            if (shouldCompute(this)) {\n                this._isTrackPending = true;\n                try {\n                    this.onInvalidate();\n                    if (this._isTrackPending &&\n                        isSpyEnabled() &&\n                        process.env.NODE_ENV !== \"production\") {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name,\n                            type: \"scheduled-reaction\"\n                        });\n                    }\n                }\n                catch (e) {\n                    this.reportExceptionInDerivation(e);\n                }\n            }\n            endBatch();\n        }\n    };\n    Reaction.prototype.track = function (fn) {\n        if (this.isDisposed) {\n            return;\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch();\n        var notify = isSpyEnabled();\n        var startTime;\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            startTime = Date.now();\n            spyReportStart({\n                name: this.name,\n                type: \"reaction\"\n            });\n        }\n        this._isRunning = true;\n        var result = trackDerivedFunction(this, fn, undefined);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (this.isDisposed) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this);\n        }\n        if (isCaughtException(result))\n            this.reportExceptionInDerivation(result.cause);\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            spyReportEnd({\n                time: Date.now() - startTime\n            });\n        }\n        endBatch();\n    };\n    Reaction.prototype.reportExceptionInDerivation = function (error) {\n        var _this = this;\n        if (this.errorHandler) {\n            this.errorHandler(error, this);\n            return;\n        }\n        if (globalState.disableErrorBoundaries)\n            throw error;\n        var message = \"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '\" + this + \"'\";\n        if (globalState.suppressReactionErrors) {\n            console.warn(\"[mobx] (error in reaction '\" + this.name + \"' suppressed, fix error of causing action below)\"); // prettier-ignore\n        }\n        else {\n            console.error(message, error);\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        }\n        if (isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name,\n                message: message,\n                error: \"\" + error\n            });\n        }\n        globalState.globalReactionErrorHandlers.forEach(function (f) { return f(error, _this); });\n    };\n    Reaction.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            if (!this._isRunning) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch();\n                clearObserving(this);\n                endBatch();\n            }\n        }\n    };\n    Reaction.prototype.getDisposer = function () {\n        var r = this.dispose.bind(this);\n        r[$mobx] = this;\n        return r;\n    };\n    Reaction.prototype.toString = function () {\n        return \"Reaction[\" + this.name + \"]\";\n    };\n    Reaction.prototype.trace = function (enterBreakPoint) {\n        if (enterBreakPoint === void 0) { enterBreakPoint = false; }\n        trace(this, enterBreakPoint);\n    };\n    return Reaction;\n}());\nfunction onReactionError(handler) {\n    globalState.globalReactionErrorHandlers.push(handler);\n    return function () {\n        var idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n        if (idx >= 0)\n            globalState.globalReactionErrorHandlers.splice(idx, 1);\n    };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nvar MAX_REACTION_ITERATIONS = 100;\nvar reactionScheduler = function (f) { return f(); };\nfunction runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions)\n        return;\n    reactionScheduler(runReactionsHelper);\n}\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true;\n    var allReactions = globalState.pendingReactions;\n    var iterations = 0;\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\"Reaction doesn't converge to a stable state after \" + MAX_REACTION_ITERATIONS + \" iterations.\" +\n                (\" Probably there is a cycle in the reactive function: \" + allReactions[0]));\n            allReactions.splice(0); // clear reactions\n        }\n        var remainingReactions = allReactions.splice(0);\n        for (var i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nvar isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\nfunction setReactionScheduler(fn) {\n    var baseScheduler = reactionScheduler;\n    reactionScheduler = function (f) { return fn(function () { return baseScheduler(f); }); };\n}\n\nfunction isSpyEnabled() {\n    return process.env.NODE_ENV !== \"production\" && !!globalState.spyListeners.length;\n}\nfunction spyReport(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return; // dead code elimination can do the rest\n    if (!globalState.spyListeners.length)\n        return;\n    var listeners = globalState.spyListeners;\n    for (var i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    var change = __assign(__assign({}, event), { spyReportStart: true });\n    spyReport(change);\n}\nvar END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd(change) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (change)\n        spyReport(__assign(__assign({}, change), { spyReportEnd: true }));\n    else\n        spyReport(END_EVENT);\n}\nfunction spy(listener) {\n    if (process.env.NODE_ENV === \"production\") {\n        console.warn(\"[mobx.spy] Is a no-op in production builds\");\n        return function () { };\n    }\n    else {\n        globalState.spyListeners.push(listener);\n        return once(function () {\n            globalState.spyListeners = globalState.spyListeners.filter(function (l) { return l !== listener; });\n        });\n    }\n}\n\nfunction dontReassignFields() {\n    fail(process.env.NODE_ENV !== \"production\" && \"@action fields are not reassignable\");\n}\nfunction namedActionDecorator(name) {\n    return function (target, prop, descriptor) {\n        if (descriptor) {\n            if (process.env.NODE_ENV !== \"production\" && descriptor.get !== undefined) {\n                return fail(\"@action cannot be used with getters\");\n            }\n            // babel / typescript\n            // @action method() { }\n            if (descriptor.value) {\n                // typescript\n                return {\n                    value: createAction(name, descriptor.value),\n                    enumerable: false,\n                    configurable: true,\n                    writable: true // for typescript, this must be writable, otherwise it cannot inherit :/ (see inheritable actions test)\n                };\n            }\n            // babel only: @action method = () => {}\n            var initializer_1 = descriptor.initializer;\n            return {\n                enumerable: false,\n                configurable: true,\n                writable: true,\n                initializer: function () {\n                    // N.B: we can't immediately invoke initializer; this would be wrong\n                    return createAction(name, initializer_1.call(this));\n                }\n            };\n        }\n        // bound instance methods\n        return actionFieldDecorator(name).apply(this, arguments);\n    };\n}\nfunction actionFieldDecorator(name) {\n    // Simple property that writes on first invocation to the current instance\n    return function (target, prop, descriptor) {\n        Object.defineProperty(target, prop, {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                return undefined;\n            },\n            set: function (value) {\n                addHiddenProp(this, prop, action(name, value));\n            }\n        });\n    };\n}\nfunction boundActionDecorator(target, propertyName, descriptor, applyToInstance) {\n    if (applyToInstance === true) {\n        defineBoundAction(target, propertyName, descriptor.value);\n        return null;\n    }\n    if (descriptor) {\n        // if (descriptor.value)\n        // Typescript / Babel: @action.bound method() { }\n        // also: babel @action.bound method = () => {}\n        return {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                defineBoundAction(this, propertyName, descriptor.value || descriptor.initializer.call(this));\n                return this[propertyName];\n            },\n            set: dontReassignFields\n        };\n    }\n    // field decorator Typescript @action.bound method = () => {}\n    return {\n        enumerable: false,\n        configurable: true,\n        set: function (v) {\n            defineBoundAction(this, propertyName, v);\n        },\n        get: function () {\n            return undefined;\n        }\n    };\n}\n\nvar action = function action(arg1, arg2, arg3, arg4) {\n    // action(fn() {})\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return createAction(arg1.name || \"<unnamed action>\", arg1);\n    // action(\"name\", fn() {})\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return createAction(arg1, arg2);\n    // @action(\"name\") fn() {}\n    if (arguments.length === 1 && typeof arg1 === \"string\")\n        return namedActionDecorator(arg1);\n    // @action fn() {}\n    if (arg4 === true) {\n        // apply to instance immediately\n        addHiddenProp(arg1, arg2, createAction(arg1.name || arg2, arg3.value, this));\n    }\n    else {\n        return namedActionDecorator(arg2).apply(null, arguments);\n    }\n};\naction.bound = boundActionDecorator;\nfunction runInAction(arg1, arg2) {\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\" && fn.length === 0, \"`runInAction` expects a function without arguments\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n    return executeAction(actionName, fn, this, undefined);\n}\nfunction isAction(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nfunction defineBoundAction(target, propertyName, fn) {\n    addHiddenProp(target, propertyName, createAction(propertyName, fn.bind(target)));\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nfunction autorun(view, opts) {\n    if (opts === void 0) { opts = EMPTY_OBJECT; }\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof view === \"function\", \"Autorun expects a function as first argument\");\n        invariant(isAction(view) === false, \"Autorun does not accept actions since actions are untrackable\");\n    }\n    var name = (opts && opts.name) || view.name || \"Autorun@\" + getNextId();\n    var runSync = !opts.scheduler && !opts.delay;\n    var reaction;\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(name, function () {\n            this.track(reactionRunner);\n        }, opts.onError, opts.requiresObservable);\n    }\n    else {\n        var scheduler_1 = createSchedulerFromOptions(opts);\n        // debounced autorun\n        var isScheduled_1 = false;\n        reaction = new Reaction(name, function () {\n            if (!isScheduled_1) {\n                isScheduled_1 = true;\n                scheduler_1(function () {\n                    isScheduled_1 = false;\n                    if (!reaction.isDisposed)\n                        reaction.track(reactionRunner);\n                });\n            }\n        }, opts.onError, opts.requiresObservable);\n    }\n    function reactionRunner() {\n        view(reaction);\n    }\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nvar run = function (f) { return f(); };\nfunction createSchedulerFromOptions(opts) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n            ? function (f) { return setTimeout(f, opts.delay); }\n            : run;\n}\nfunction reaction(expression, effect, opts) {\n    if (opts === void 0) { opts = EMPTY_OBJECT; }\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof expression === \"function\", \"First argument to reaction should be a function\");\n        invariant(typeof opts === \"object\", \"Third argument of reactions should be an object\");\n    }\n    var name = opts.name || \"Reaction@\" + getNextId();\n    var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\n    var runSync = !opts.scheduler && !opts.delay;\n    var scheduler = createSchedulerFromOptions(opts);\n    var firstTime = true;\n    var isScheduled = false;\n    var value;\n    var equals = opts.compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default;\n    var r = new Reaction(name, function () {\n        if (firstTime || runSync) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            scheduler(reactionRunner);\n        }\n    }, opts.onError, opts.requiresObservable);\n    function reactionRunner() {\n        isScheduled = false; // Q: move into reaction runner?\n        if (r.isDisposed)\n            return;\n        var changed = false;\n        r.track(function () {\n            var nextValue = expression(r);\n            changed = firstTime || !equals(value, nextValue);\n            value = nextValue;\n        });\n        if (firstTime && opts.fireImmediately)\n            effectAction(value, r);\n        if (!firstTime && changed === true)\n            effectAction(value, r);\n        if (firstTime)\n            firstTime = false;\n    }\n    r.schedule();\n    return r.getDisposer();\n}\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments);\n        }\n        catch (e) {\n            errorHandler.call(this, e);\n        }\n    };\n}\n\nfunction onBecomeObserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeObserved\", thing, arg2, arg3);\n}\nfunction onBecomeUnobserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeUnobserved\", thing, arg2, arg3);\n}\nfunction interceptHook(hook, thing, arg2, arg3) {\n    var atom = typeof arg3 === \"function\" ? getAtom(thing, arg2) : getAtom(thing);\n    var cb = typeof arg3 === \"function\" ? arg3 : arg2;\n    var listenersKey = hook + \"Listeners\";\n    if (atom[listenersKey]) {\n        atom[listenersKey].add(cb);\n    }\n    else {\n        atom[listenersKey] = new Set([cb]);\n    }\n    var orig = atom[hook];\n    if (typeof orig !== \"function\")\n        return fail(process.env.NODE_ENV !== \"production\" && \"Not an atom that can be (un)observed\");\n    return function () {\n        var hookListeners = atom[listenersKey];\n        if (hookListeners) {\n            hookListeners.delete(cb);\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey];\n            }\n        }\n    };\n}\n\nfunction configure(options) {\n    var enforceActions = options.enforceActions, computedRequiresReaction = options.computedRequiresReaction, computedConfigurable = options.computedConfigurable, disableErrorBoundaries = options.disableErrorBoundaries, reactionScheduler = options.reactionScheduler, reactionRequiresObservable = options.reactionRequiresObservable, observableRequiresReaction = options.observableRequiresReaction;\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState();\n    }\n    if (enforceActions !== undefined) {\n        if (typeof enforceActions === \"boolean\" || enforceActions === \"strict\")\n            deprecated(\"Deprecated value for 'enforceActions', use 'false' => '\\\"never\\\"', 'true' => '\\\"observed\\\"', '\\\"strict\\\"' => \\\"'always'\\\" instead\");\n        var ea = void 0;\n        switch (enforceActions) {\n            case true:\n            case \"observed\":\n                ea = true;\n                break;\n            case false:\n            case \"never\":\n                ea = false;\n                break;\n            case \"strict\":\n            case \"always\":\n                ea = \"strict\";\n                break;\n            default:\n                fail(\"Invalid value for 'enforceActions': '\" + enforceActions + \"', expected 'never', 'always' or 'observed'\");\n        }\n        globalState.enforceActions = ea;\n        globalState.allowStateChanges = ea === true || ea === \"strict\" ? false : true;\n    }\n    if (computedRequiresReaction !== undefined) {\n        globalState.computedRequiresReaction = !!computedRequiresReaction;\n    }\n    if (reactionRequiresObservable !== undefined) {\n        globalState.reactionRequiresObservable = !!reactionRequiresObservable;\n    }\n    if (observableRequiresReaction !== undefined) {\n        globalState.observableRequiresReaction = !!observableRequiresReaction;\n        globalState.allowStateReads = !globalState.observableRequiresReaction;\n    }\n    if (computedConfigurable !== undefined) {\n        globalState.computedConfigurable = !!computedConfigurable;\n    }\n    if (disableErrorBoundaries !== undefined) {\n        if (disableErrorBoundaries === true)\n            console.warn(\"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\");\n        globalState.disableErrorBoundaries = !!disableErrorBoundaries;\n    }\n    if (reactionScheduler) {\n        setReactionScheduler(reactionScheduler);\n    }\n}\n\nfunction decorate(thing, decorators) {\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(isPlainObject(decorators), \"Decorators should be a key value map\");\n    var target = typeof thing === \"function\" ? thing.prototype : thing;\n    var _loop_1 = function (prop) {\n        var propertyDecorators = decorators[prop];\n        if (!Array.isArray(propertyDecorators)) {\n            propertyDecorators = [propertyDecorators];\n        }\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(propertyDecorators.every(function (decorator) { return typeof decorator === \"function\"; }), \"Decorate: expected a decorator function or array of decorator functions for '\" + prop + \"'\");\n        var descriptor = Object.getOwnPropertyDescriptor(target, prop);\n        var newDescriptor = propertyDecorators.reduce(function (accDescriptor, decorator) { return decorator(target, prop, accDescriptor); }, descriptor);\n        if (newDescriptor)\n            Object.defineProperty(target, prop, newDescriptor);\n    };\n    for (var prop in decorators) {\n        _loop_1(prop);\n    }\n    return thing;\n}\n\nfunction extendObservable(target, properties, decorators, options) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(arguments.length >= 2 && arguments.length <= 4, \"'extendObservable' expected 2-4 arguments\");\n        invariant(typeof target === \"object\", \"'extendObservable' expects an object as first argument\");\n        invariant(!isObservableMap(target), \"'extendObservable' should not be used on maps, use map.merge instead\");\n    }\n    options = asCreateObservableOptions(options);\n    var defaultDecorator = getDefaultDecoratorFromObjectOptions(options);\n    initializeInstance(target); // Fixes #1740\n    asObservableObject(target, options.name, defaultDecorator.enhancer); // make sure object is observable, even without initial props\n    if (properties)\n        extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator);\n    return target;\n}\nfunction getDefaultDecoratorFromObjectOptions(options) {\n    return options.defaultDecorator || (options.deep === false ? refDecorator : deepDecorator);\n}\nfunction extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator) {\n    var e_1, _a, e_2, _b;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(!isObservable(properties), \"Extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\");\n        if (decorators) {\n            var keys = getPlainObjectKeys(decorators);\n            try {\n                for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                    var key = keys_1_1.value;\n                    if (!(key in properties))\n                        fail(\"Trying to declare a decorator for unspecified property '\" + stringifyKey(key) + \"'\");\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    }\n    startBatch();\n    try {\n        var keys = ownKeys(properties);\n        try {\n            for (var keys_2 = __values(keys), keys_2_1 = keys_2.next(); !keys_2_1.done; keys_2_1 = keys_2.next()) {\n                var key = keys_2_1.value;\n                var descriptor = Object.getOwnPropertyDescriptor(properties, key);\n                if (process.env.NODE_ENV !== \"production\") {\n                    if (!isPlainObject(properties))\n                        fail(\"'extendObservable' only accepts plain objects as second argument\");\n                    if (isComputed(descriptor.value))\n                        fail(\"Passing a 'computed' as initial property value is no longer supported by extendObservable. Use a getter or decorator instead\");\n                }\n                var decorator = decorators && key in decorators\n                    ? decorators[key]\n                    : descriptor.get\n                        ? computedDecorator\n                        : defaultDecorator;\n                if (process.env.NODE_ENV !== \"production\" && typeof decorator !== \"function\")\n                    fail(\"Not a valid decorator for '\" + stringifyKey(key) + \"', got: \" + decorator);\n                var resultDescriptor = decorator(target, key, descriptor, true);\n                if (resultDescriptor // otherwise, assume already applied, due to `applyToInstance`\n                )\n                    Object.defineProperty(target, key, resultDescriptor);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (keys_2_1 && !keys_2_1.done && (_b = keys_2.return)) _b.call(keys_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction getDependencyTree(thing, property) {\n    return nodeToDependencyTree(getAtom(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length > 0)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing, property) {\n    return nodeToObserverTree(getAtom(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (hasObservers(node))\n        result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);\n    return result;\n}\n\nvar generatorId = 0;\nfunction FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\";\n}\nFlowCancellationError.prototype = Object.create(Error.prototype);\nfunction isFlowCancellationError(error) {\n    return error instanceof FlowCancellationError;\n}\nfunction flow(generator) {\n    if (arguments.length !== 1)\n        fail(!!process.env.NODE_ENV && \"Flow expects 1 argument and cannot be used as decorator\");\n    var name = generator.name || \"<unnamed flow>\";\n    // Implementation based on https://github.com/tj/co/blob/master/index.js\n    return function () {\n        var ctx = this;\n        var args = arguments;\n        var runId = ++generatorId;\n        var gen = action(name + \" - runid: \" + runId + \" - init\", generator).apply(ctx, args);\n        var rejector;\n        var pendingPromise = undefined;\n        var promise = new Promise(function (resolve, reject) {\n            var stepId = 0;\n            rejector = reject;\n            function onFulfilled(res) {\n                pendingPromise = undefined;\n                var ret;\n                try {\n                    ret = action(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.next).call(gen, res);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function onRejected(err) {\n                pendingPromise = undefined;\n                var ret;\n                try {\n                    ret = action(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.throw).call(gen, err);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret && typeof ret.then === \"function\") {\n                    // an async iterator\n                    ret.then(next, reject);\n                    return;\n                }\n                if (ret.done)\n                    return resolve(ret.value);\n                pendingPromise = Promise.resolve(ret.value);\n                return pendingPromise.then(onFulfilled, onRejected);\n            }\n            onFulfilled(undefined); // kick off the process\n        });\n        promise.cancel = action(name + \" - runid: \" + runId + \" - cancel\", function () {\n            try {\n                if (pendingPromise)\n                    cancelPromise(pendingPromise);\n                // Finally block can return (or yield) stuff..\n                var res = gen.return(undefined);\n                // eat anything that promise would do, it's cancelled!\n                var yieldedPromise = Promise.resolve(res.value);\n                yieldedPromise.then(noop, noop);\n                cancelPromise(yieldedPromise); // maybe it can be cancelled :)\n                // reject our original promise\n                rejector(new FlowCancellationError());\n            }\n            catch (e) {\n                rejector(e); // there could be a throwing finally block\n            }\n        });\n        return promise;\n    };\n}\nfunction cancelPromise(promise) {\n    if (typeof promise.cancel === \"function\")\n        promise.cancel();\n}\n\nfunction interceptReads(thing, propOrHandler, handler) {\n    var target;\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing);\n    }\n    else if (isObservableObject(thing)) {\n        if (typeof propOrHandler !== \"string\")\n            return fail(process.env.NODE_ENV !== \"production\" &&\n                \"InterceptReads can only be used with a specific property, not with an object in general\");\n        target = getAdministration(thing, propOrHandler);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"Expected observable map, object or array as first array\");\n    }\n    if (target.dehancer !== undefined)\n        return fail(process.env.NODE_ENV !== \"production\" && \"An intercept reader was already established\");\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n    return function () {\n        target.dehancer = undefined;\n    };\n}\n\nfunction intercept(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept(handler);\n}\n\nfunction _isComputed(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableObject(value) === false)\n            return false;\n        if (!value[$mobx].values.has(property))\n            return false;\n        var atom = getAtom(value, property);\n        return isComputedValue(atom);\n    }\n    return isComputedValue(value);\n}\nfunction isComputed(value) {\n    if (arguments.length > 1)\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"isComputed expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n    return _isComputed(value);\n}\nfunction isComputedProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"isComputed expected a property name as second argument\");\n    return _isComputed(value, propName);\n}\n\nfunction _isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (process.env.NODE_ENV !== \"production\" &&\n            (isObservableMap(value) || isObservableArray(value)))\n            return fail(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        if (isObservableObject(value)) {\n            return value[$mobx].values.has(property);\n        }\n        return false;\n    }\n    // For first check, see #701\n    return (isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value));\n}\nfunction isObservable(value) {\n    if (arguments.length !== 1)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            \"isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n    return _isObservable(value);\n}\nfunction isObservableProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" && \"expected a property name as second argument\");\n    return _isObservable(value, propName);\n}\n\nfunction keys(obj) {\n    if (isObservableObject(obj)) {\n        return obj[$mobx].getKeys();\n    }\n    if (isObservableMap(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map(function (_, index) { return index; });\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'keys()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction values(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(function (key) { return obj[key]; });\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(function (key) { return obj.get(key); });\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values());\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice();\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'values()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction entries(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(function (key) { return [key, obj[key]]; });\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(function (key) { return [key, obj.get(key)]; });\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map(function (key, index) { return [index, key]; });\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'entries()' can only be used on observable objects, arrays and maps\");\n}\nfunction set(obj, key, value) {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch();\n        var values_1 = key;\n        try {\n            for (var key_1 in values_1)\n                set(obj, key_1, values_1[key_1]);\n        }\n        finally {\n            endBatch();\n        }\n        return;\n    }\n    if (isObservableObject(obj)) {\n        var adm = obj[$mobx];\n        var existingObservable = adm.values.get(key);\n        if (existingObservable) {\n            adm.write(key, value);\n        }\n        else {\n            adm.addObservableProp(key, value, adm.defaultEnhancer);\n        }\n    }\n    else if (isObservableMap(obj)) {\n        obj.set(key, value);\n    }\n    else if (isObservableSet(obj)) {\n        obj.add(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, \"Not a valid index: '\" + key + \"'\");\n        startBatch();\n        if (key >= obj.length)\n            obj.length = key + 1;\n        obj[key] = value;\n        endBatch();\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'set()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction remove(obj, key) {\n    if (isObservableObject(obj)) {\n        obj[$mobx].remove(key);\n    }\n    else if (isObservableMap(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableSet(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, \"Not a valid index: '\" + key + \"'\");\n        obj.splice(key, 1);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'remove()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction has(obj, key) {\n    if (isObservableObject(obj)) {\n        // return keys(obj).indexOf(key) >= 0\n        var adm = getAdministration(obj);\n        return adm.has(key);\n    }\n    else if (isObservableMap(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableSet(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length;\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'has()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction get(obj, key) {\n    if (!has(obj, key))\n        return undefined;\n    if (isObservableObject(obj)) {\n        return obj[key];\n    }\n    else if (isObservableMap(obj)) {\n        return obj.get(key);\n    }\n    else if (isObservableArray(obj)) {\n        return obj[key];\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'get()' can only be used on observable objects, arrays and maps\");\n    }\n}\n\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nfunction observeObservable(thing, listener, fireImmediately) {\n    return getAdministration(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    return getAdministration(thing, property).observe(listener, fireImmediately);\n}\n\nvar defaultOptions = {\n    detectCycles: true,\n    exportMapsAsObjects: true,\n    recurseEverything: false\n};\nfunction cache(map, key, value, options) {\n    if (options.detectCycles)\n        map.set(key, value);\n    return value;\n}\nfunction toJSHelper(source, options, __alreadySeen) {\n    if (!options.recurseEverything && !isObservable(source))\n        return source;\n    if (typeof source !== \"object\")\n        return source;\n    // Directly return null if source is null\n    if (source === null)\n        return null;\n    // Directly return the Date object itself if contained in the observable\n    if (source instanceof Date)\n        return source;\n    if (isObservableValue(source))\n        return toJSHelper(source.get(), options, __alreadySeen);\n    // make sure we track the keys of the object\n    if (isObservable(source))\n        keys(source);\n    var detectCycles = options.detectCycles === true;\n    if (detectCycles && source !== null && __alreadySeen.has(source)) {\n        return __alreadySeen.get(source);\n    }\n    if (isObservableArray(source) || Array.isArray(source)) {\n        var res_1 = cache(__alreadySeen, source, [], options);\n        var toAdd = source.map(function (value) { return toJSHelper(value, options, __alreadySeen); });\n        res_1.length = toAdd.length;\n        for (var i = 0, l = toAdd.length; i < l; i++)\n            res_1[i] = toAdd[i];\n        return res_1;\n    }\n    if (isObservableSet(source) || Object.getPrototypeOf(source) === Set.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            var res_2 = cache(__alreadySeen, source, new Set(), options);\n            source.forEach(function (value) {\n                res_2.add(toJSHelper(value, options, __alreadySeen));\n            });\n            return res_2;\n        }\n        else {\n            var res_3 = cache(__alreadySeen, source, [], options);\n            source.forEach(function (value) {\n                res_3.push(toJSHelper(value, options, __alreadySeen));\n            });\n            return res_3;\n        }\n    }\n    if (isObservableMap(source) || Object.getPrototypeOf(source) === Map.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            var res_4 = cache(__alreadySeen, source, new Map(), options);\n            source.forEach(function (value, key) {\n                res_4.set(key, toJSHelper(value, options, __alreadySeen));\n            });\n            return res_4;\n        }\n        else {\n            var res_5 = cache(__alreadySeen, source, {}, options);\n            source.forEach(function (value, key) {\n                res_5[key] = toJSHelper(value, options, __alreadySeen);\n            });\n            return res_5;\n        }\n    }\n    // Fallback to the situation that source is an ObservableObject or a plain object\n    var res = cache(__alreadySeen, source, {}, options);\n    getPlainObjectKeys(source).forEach(function (key) {\n        res[key] = toJSHelper(source[key], options, __alreadySeen);\n    });\n    return res;\n}\nfunction toJS(source, options) {\n    // backward compatibility\n    if (typeof options === \"boolean\")\n        options = { detectCycles: options };\n    if (!options)\n        options = defaultOptions;\n    options.detectCycles =\n        options.detectCycles === undefined\n            ? options.recurseEverything === true\n            : options.detectCycles === true;\n    var __alreadySeen;\n    if (options.detectCycles)\n        __alreadySeen = new Map();\n    return toJSHelper(source, options, __alreadySeen);\n}\n\nfunction trace() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var enterBreakPoint = false;\n    if (typeof args[args.length - 1] === \"boolean\")\n        enterBreakPoint = args.pop();\n    var derivation = getAtomFromArgs(args);\n    if (!derivation) {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly\");\n    }\n    if (derivation.isTracing === TraceMode.NONE) {\n        console.log(\"[mobx.trace] '\" + derivation.name + \"' tracing enabled\");\n    }\n    derivation.isTracing = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;\n}\nfunction getAtomFromArgs(args) {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation;\n        case 1:\n            return getAtom(args[0]);\n        case 2:\n            return getAtom(args[0], args[1]);\n    }\n}\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nfunction transaction(action, thisArg) {\n    if (thisArg === void 0) { thisArg = undefined; }\n    startBatch();\n    try {\n        return action.apply(thisArg);\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction when(predicate, arg1, arg2) {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\n        return whenPromise(predicate, arg1);\n    return _when(predicate, arg1, arg2 || {});\n}\nfunction _when(predicate, effect, opts) {\n    var timeoutHandle;\n    if (typeof opts.timeout === \"number\") {\n        timeoutHandle = setTimeout(function () {\n            if (!disposer[$mobx].isDisposed) {\n                disposer();\n                var error = new Error(\"WHEN_TIMEOUT\");\n                if (opts.onError)\n                    opts.onError(error);\n                else\n                    throw error;\n            }\n        }, opts.timeout);\n    }\n    opts.name = opts.name || \"When@\" + getNextId();\n    var effectAction = createAction(opts.name + \"-effect\", effect);\n    var disposer = autorun(function (r) {\n        if (predicate()) {\n            r.dispose();\n            if (timeoutHandle)\n                clearTimeout(timeoutHandle);\n            effectAction();\n        }\n    }, opts);\n    return disposer;\n}\nfunction whenPromise(predicate, opts) {\n    if (process.env.NODE_ENV !== \"production\" && opts && opts.onError)\n        return fail(\"the options 'onError' and 'promise' cannot be combined\");\n    var cancel;\n    var res = new Promise(function (resolve, reject) {\n        var disposer = _when(predicate, resolve, __assign(__assign({}, opts), { onError: reject }));\n        cancel = function () {\n            disposer();\n            reject(\"WHEN_CANCELLED\");\n        };\n    });\n    res.cancel = cancel;\n    return res;\n}\n\nfunction getAdm(target) {\n    return target[$mobx];\n}\nfunction isPropertyKey(val) {\n    return typeof val === \"string\" || typeof val === \"number\" || typeof val === \"symbol\";\n}\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nvar objectProxyTraps = {\n    has: function (target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return true;\n        var adm = getAdm(target);\n        // MWE: should `in` operator be reactive? If not, below code path will be faster / more memory efficient\n        // TODO: check performance stats!\n        // if (adm.values.get(name as string)) return true\n        if (isPropertyKey(name))\n            return adm.has(name);\n        return name in target;\n    },\n    get: function (target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return target[name];\n        var adm = getAdm(target);\n        var observable = adm.values.get(name);\n        if (observable instanceof Atom) {\n            var result = observable.get();\n            if (result === undefined) {\n                // This fixes #1796, because deleting a prop that has an\n                // undefined value won't retrigger a observer (no visible effect),\n                // the autorun wouldn't subscribe to future key changes (see also next comment)\n                adm.has(name);\n            }\n            return result;\n        }\n        // make sure we start listening to future keys\n        // note that we only do this here for optimization\n        if (isPropertyKey(name))\n            adm.has(name);\n        return target[name];\n    },\n    set: function (target, name, value) {\n        if (!isPropertyKey(name))\n            return false;\n        set(target, name, value);\n        return true;\n    },\n    deleteProperty: function (target, name) {\n        if (!isPropertyKey(name))\n            return false;\n        var adm = getAdm(target);\n        adm.remove(name);\n        return true;\n    },\n    ownKeys: function (target) {\n        var adm = getAdm(target);\n        adm.keysAtom.reportObserved();\n        return Reflect.ownKeys(target);\n    },\n    preventExtensions: function (target) {\n        fail(\"Dynamic observable objects cannot be frozen\");\n        return false;\n    }\n};\nfunction createDynamicObservableObject(base) {\n    var proxy = new Proxy(base, objectProxyTraps);\n    base[$mobx].proxy = proxy;\n    return proxy;\n}\n\nfunction hasInterceptors(interceptable) {\n    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;\n}\nfunction registerInterceptor(interceptable, handler) {\n    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once(function () {\n        var idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange(interceptable, change) {\n    var prevU = untrackedStart();\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        var interceptors = __spread((interceptable.interceptors || []));\n        for (var i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change);\n            invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n            if (!change)\n                break;\n        }\n        return change;\n    }\n    finally {\n        untrackedEnd(prevU);\n    }\n}\n\nfunction hasListeners(listenable) {\n    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;\n}\nfunction registerListener(listenable, handler) {\n    var listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once(function () {\n        var idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners(listenable, change) {\n    var prevU = untrackedStart();\n    var listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change);\n    }\n    untrackedEnd(prevU);\n}\n\nvar MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\nvar arrayTraps = {\n    get: function (target, name) {\n        if (name === $mobx)\n            return target[$mobx];\n        if (name === \"length\")\n            return target[$mobx].getArrayLength();\n        if (typeof name === \"number\") {\n            return arrayExtensions.get.call(target, name);\n        }\n        if (typeof name === \"string\" && !isNaN(name)) {\n            return arrayExtensions.get.call(target, parseInt(name));\n        }\n        if (arrayExtensions.hasOwnProperty(name)) {\n            return arrayExtensions[name];\n        }\n        return target[name];\n    },\n    set: function (target, name, value) {\n        if (name === \"length\") {\n            target[$mobx].setArrayLength(value);\n        }\n        if (typeof name === \"number\") {\n            arrayExtensions.set.call(target, name, value);\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value;\n        }\n        else {\n            // numeric string\n            arrayExtensions.set.call(target, parseInt(name), value);\n        }\n        return true;\n    },\n    preventExtensions: function (target) {\n        fail(\"Observable arrays cannot be frozen\");\n        return false;\n    }\n};\nfunction createObservableArray(initialValues, enhancer, name, owned) {\n    if (name === void 0) { name = \"ObservableArray@\" + getNextId(); }\n    if (owned === void 0) { owned = false; }\n    var adm = new ObservableArrayAdministration(name, enhancer, owned);\n    addHiddenFinalProp(adm.values, $mobx, adm);\n    var proxy = new Proxy(adm.values, arrayTraps);\n    adm.proxy = proxy;\n    if (initialValues && initialValues.length) {\n        var prev = allowStateChangesStart(true);\n        adm.spliceWithArray(0, 0, initialValues);\n        allowStateChangesEnd(prev);\n    }\n    return proxy;\n}\nvar ObservableArrayAdministration = /** @class */ (function () {\n    function ObservableArrayAdministration(name, enhancer, owned) {\n        this.owned = owned;\n        this.values = [];\n        this.proxy = undefined;\n        this.lastKnownLength = 0;\n        this.atom = new Atom(name || \"ObservableArray@\" + getNextId());\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name + \"[..]\"); };\n    }\n    ObservableArrayAdministration.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableArrayAdministration.prototype.dehanceValues = function (values) {\n        if (this.dehancer !== undefined && values.length > 0)\n            return values.map(this.dehancer);\n        return values;\n    };\n    ObservableArrayAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        if (fireImmediately) {\n            listener({\n                object: this.proxy,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener(this, listener);\n    };\n    ObservableArrayAdministration.prototype.getArrayLength = function () {\n        this.atom.reportObserved();\n        return this.values.length;\n    };\n    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        var currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength) {\n            var newItems = new Array(newLength - currentLength);\n            for (var i = 0; i < newLength - currentLength; i++)\n                newItems[i] = undefined; // No Array.fill everywhere...\n            this.spliceWithArray(currentLength, 0, newItems);\n        }\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    };\n    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed.\");\n        this.lastKnownLength += delta;\n    };\n    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this.atom);\n        var length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = EMPTY_ARRAY;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.proxy,\n                type: \"splice\",\n                index: index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.length === 0 ? newItems : newItems.map(function (v) { return _this.enhancer(v, undefined); });\n        if (process.env.NODE_ENV !== \"production\") {\n            var lengthDelta = newItems.length - deleteCount;\n            this.updateArrayLength(length, lengthDelta); // checks if internal array wasn't modified\n        }\n        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return this.dehanceValues(res);\n    };\n    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {\n        var _a;\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return (_a = this.values).splice.apply(_a, __spread([index, deleteCount], newItems));\n        }\n        else {\n            var res = this.values.slice(index, index + deleteCount);\n            this.values = this.values\n                .slice(0, index)\n                .concat(newItems, this.values.slice(index + deleteCount));\n            return res;\n        }\n    };\n    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"update\",\n                index: index,\n                newValue: newValue,\n                oldValue: oldValue\n            }\n            : null;\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    };\n    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"splice\",\n                index: index,\n                removed: removed,\n                added: added,\n                removedCount: removed.length,\n                addedCount: added.length\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    };\n    return ObservableArrayAdministration;\n}());\nvar arrayExtensions = {\n    intercept: function (handler) {\n        return this[$mobx].intercept(handler);\n    },\n    observe: function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        var adm = this[$mobx];\n        return adm.observe(listener, fireImmediately);\n    },\n    clear: function () {\n        return this.splice(0);\n    },\n    replace: function (newItems) {\n        var adm = this[$mobx];\n        return adm.spliceWithArray(0, adm.values.length, newItems);\n    },\n    /**\n     * Converts this array back to a (shallow) javascript structure.\n     * For a deep clone use mobx.toJS\n     */\n    toJS: function () {\n        return this.slice();\n    },\n    toJSON: function () {\n        // Used by JSON.stringify\n        return this.toJS();\n    },\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice: function (index, deleteCount) {\n        var newItems = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            newItems[_i - 2] = arguments[_i];\n        }\n        var adm = this[$mobx];\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return adm.spliceWithArray(index);\n            case 2:\n                return adm.spliceWithArray(index, deleteCount);\n        }\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    spliceWithArray: function (index, deleteCount, newItems) {\n        var adm = this[$mobx];\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    push: function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this[$mobx];\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    },\n    pop: function () {\n        return this.splice(Math.max(this[$mobx].values.length - 1, 0), 1)[0];\n    },\n    shift: function () {\n        return this.splice(0, 1)[0];\n    },\n    unshift: function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this[$mobx];\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    },\n    reverse: function () {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        // so we deviate from the default and just make it an dervitation\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.reverse()` will not update the array in place. Use `observableArray.slice().reverse()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().reverse())` to reverse & update in place\");\n        }\n        var clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    },\n    sort: function (compareFn) {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.sort()` will not update the array in place. Use `observableArray.slice().sort()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().sort())` to sort & update in place\");\n        }\n        var clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    },\n    remove: function (value) {\n        var adm = this[$mobx];\n        var idx = adm.dehanceValues(adm.values).indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    },\n    get: function (index) {\n        var adm = this[$mobx];\n        if (adm) {\n            if (index < adm.values.length) {\n                adm.atom.reportObserved();\n                return adm.dehanceValue(adm.values[index]);\n            }\n            console.warn(\"[mobx.array] Attempt to read an array index (\" + index + \") that is out of bounds (\" + adm.values.length + \"). Please check length first. Out of bound indices will not be tracked by MobX\");\n        }\n        return undefined;\n    },\n    set: function (index, newValue) {\n        var adm = this[$mobx];\n        var values = adm.values;\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(adm.atom);\n            var oldValue = values[index];\n            if (hasInterceptors(adm)) {\n                var change = interceptChange(adm, {\n                    type: \"update\",\n                    object: adm.proxy,\n                    index: index,\n                    newValue: newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.enhancer(newValue, oldValue);\n            var changed = newValue !== oldValue;\n            if (changed) {\n                values[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values.length) {\n            // add a new item\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else {\n            // out of bounds\n            throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n        }\n    }\n};\n[\n    \"concat\",\n    \"flat\",\n    \"includes\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"slice\",\n    \"toString\",\n    \"toLocaleString\"\n].forEach(function (funcName) {\n    // Feature detection (eg flat may not be available)\n    if (typeof Array.prototype[funcName] !== \"function\") {\n        return;\n    }\n    arrayExtensions[funcName] = function () {\n        var adm = this[$mobx];\n        adm.atom.reportObserved();\n        var dehancedValues = adm.dehanceValues(adm.values);\n        return dehancedValues[funcName].apply(dehancedValues, arguments);\n    };\n});\n[\"every\", \"filter\", \"find\", \"findIndex\", \"flatMap\", \"forEach\", \"map\", \"some\"].forEach(function (funcName) {\n    // Feature detection (eg flatMap may not be available)\n    if (typeof Array.prototype[funcName] !== \"function\") {\n        return;\n    }\n    arrayExtensions[funcName] = function (callback, thisArg) {\n        var _this = this;\n        var adm = this[$mobx];\n        adm.atom.reportObserved();\n        var dehancedValues = adm.dehanceValues(adm.values);\n        return dehancedValues[funcName](function (element, index) {\n            return callback.call(thisArg, element, index, _this);\n        }, thisArg);\n    };\n});\n[\"reduce\", \"reduceRight\"].forEach(function (funcName) {\n    arrayExtensions[funcName] = function () {\n        var _this = this;\n        var adm = this[$mobx];\n        adm.atom.reportObserved();\n        // #2432 - reduce behavior depends on arguments.length\n        var callback = arguments[0];\n        arguments[0] = function (accumulator, currentValue, index) {\n            currentValue = adm.dehanceValue(currentValue);\n            return callback(accumulator, currentValue, index, _this);\n        };\n        return adm.values[funcName].apply(adm.values, arguments);\n    };\n});\nvar isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\nfunction isObservableArray(thing) {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);\n}\n\nvar _a;\nvar ObservableMapMarker = {};\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nvar ObservableMap = /** @class */ (function () {\n    function ObservableMap(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer; }\n        if (name === void 0) { name = \"ObservableMap@\" + getNextId(); }\n        this.enhancer = enhancer;\n        this.name = name;\n        this[_a] = ObservableMapMarker;\n        this._keysAtom = createAtom(this.name + \".keys()\");\n        this[Symbol.toStringTag] = \"Map\";\n        if (typeof Map !== \"function\") {\n            throw new Error(\"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\");\n        }\n        this._data = new Map();\n        this._hasMap = new Map();\n        this.merge(initialData);\n    }\n    ObservableMap.prototype._has = function (key) {\n        return this._data.has(key);\n    };\n    ObservableMap.prototype.has = function (key) {\n        var _this = this;\n        if (!globalState.trackingDerivation)\n            return this._has(key);\n        var entry = this._hasMap.get(key);\n        if (!entry) {\n            // todo: replace with atom (breaking change)\n            var newEntry = (entry = new ObservableValue(this._has(key), referenceEnhancer, this.name + \".\" + stringifyKey(key) + \"?\", false));\n            this._hasMap.set(key, newEntry);\n            onBecomeUnobserved(newEntry, function () { return _this._hasMap.delete(key); });\n        }\n        return entry.get();\n    };\n    ObservableMap.prototype.set = function (key, value) {\n        var hasKey = this._has(key);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return this;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n        return this;\n    };\n    ObservableMap.prototype.delete = function (key) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this._keysAtom);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return false;\n        }\n        if (this._has(key)) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: this._data.get(key).value,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            transaction(function () {\n                _this._keysAtom.reportChanged();\n                _this._updateHasMapEntry(key, false);\n                var observable = _this._data.get(key);\n                observable.setNewValue(undefined);\n                _this._data.delete(key);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    };\n    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n        var entry = this._hasMap.get(key);\n        if (entry) {\n            entry.setNewValue(value);\n        }\n    };\n    ObservableMap.prototype._updateValue = function (key, newValue) {\n        var observable = this._data.get(key);\n        newValue = observable.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    };\n    ObservableMap.prototype._addValue = function (key, newValue) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this._keysAtom);\n        transaction(function () {\n            var observable = new ObservableValue(newValue, _this.enhancer, _this.name + \".\" + stringifyKey(key), false);\n            _this._data.set(key, observable);\n            newValue = observable.value; // value might have been changed\n            _this._updateHasMapEntry(key, true);\n            _this._keysAtom.reportChanged();\n        });\n        var notifySpy = isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this,\n                name: key,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    };\n    ObservableMap.prototype.get = function (key) {\n        if (this.has(key))\n            return this.dehanceValue(this._data.get(key).get());\n        return this.dehanceValue(undefined);\n    };\n    ObservableMap.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableMap.prototype.keys = function () {\n        this._keysAtom.reportObserved();\n        return this._data.keys();\n    };\n    ObservableMap.prototype.values = function () {\n        var self = this;\n        var keys = this.keys();\n        return makeIterable({\n            next: function () {\n                var _b = keys.next(), done = _b.done, value = _b.value;\n                return {\n                    done: done,\n                    value: done ? undefined : self.get(value)\n                };\n            }\n        });\n    };\n    ObservableMap.prototype.entries = function () {\n        var self = this;\n        var keys = this.keys();\n        return makeIterable({\n            next: function () {\n                var _b = keys.next(), done = _b.done, value = _b.value;\n                return {\n                    done: done,\n                    value: done ? undefined : [value, self.get(value)]\n                };\n            }\n        });\n    };\n    ObservableMap.prototype[(_a = $mobx, Symbol.iterator)] = function () {\n        return this.entries();\n    };\n    ObservableMap.prototype.forEach = function (callback, thisArg) {\n        var e_1, _b;\n        try {\n            for (var _c = __values(this), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                callback.call(thisArg, value, key, this);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /** Merge another object into this object, returns this. */\n    ObservableMap.prototype.merge = function (other) {\n        var _this = this;\n        if (isObservableMap(other)) {\n            other = other.toJS();\n        }\n        transaction(function () {\n            var prev = allowStateChangesStart(true);\n            try {\n                if (isPlainObject(other))\n                    getPlainObjectKeys(other).forEach(function (key) {\n                        return _this.set(key, other[key]);\n                    });\n                else if (Array.isArray(other))\n                    other.forEach(function (_b) {\n                        var _c = __read(_b, 2), key = _c[0], value = _c[1];\n                        return _this.set(key, value);\n                    });\n                else if (isES6Map(other)) {\n                    if (other.constructor !== Map)\n                        fail(\"Cannot initialize from classes that inherit from Map: \" + other.constructor.name); // prettier-ignore\n                    other.forEach(function (value, key) { return _this.set(key, value); });\n                }\n                else if (other !== null && other !== undefined)\n                    fail(\"Cannot initialize map from \" + other);\n            }\n            finally {\n                allowStateChangesEnd(prev);\n            }\n        });\n        return this;\n    };\n    ObservableMap.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            untracked(function () {\n                var e_2, _b;\n                try {\n                    for (var _c = __values(_this.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var key = _d.value;\n                        _this.delete(key);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            });\n        });\n    };\n    ObservableMap.prototype.replace = function (values) {\n        var _this = this;\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(function () {\n            var e_3, _b, e_4, _c;\n            // Convert to map so we can do quick key lookups\n            var replacementMap = convertToMap(values);\n            var orderedData = new Map();\n            // Used for optimization\n            var keysReportChangedCalled = false;\n            try {\n                // Delete keys that don't exist in replacement map\n                // if the key deletion is prevented by interceptor\n                // add entry at the beginning of the result map\n                for (var _d = __values(_this._data.keys()), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var key = _e.value;\n                    // Concurrently iterating/deleting keys\n                    // iterator should handle this correctly\n                    if (!replacementMap.has(key)) {\n                        var deleted = _this.delete(key);\n                        // Was the key removed?\n                        if (deleted) {\n                            // _keysAtom.reportChanged() was already called\n                            keysReportChangedCalled = true;\n                        }\n                        else {\n                            // Delete prevented by interceptor\n                            var value = _this._data.get(key);\n                            orderedData.set(key, value);\n                        }\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            try {\n                // Merge entries\n                for (var _f = __values(replacementMap.entries()), _g = _f.next(); !_g.done; _g = _f.next()) {\n                    var _h = __read(_g.value, 2), key = _h[0], value = _h[1];\n                    // We will want to know whether a new key is added\n                    var keyExisted = _this._data.has(key);\n                    // Add or update value\n                    _this.set(key, value);\n                    // The addition could have been prevent by interceptor\n                    if (_this._data.has(key)) {\n                        // The update could have been prevented by interceptor\n                        // and also we want to preserve existing values\n                        // so use value from _data map (instead of replacement map)\n                        var value_1 = _this._data.get(key);\n                        orderedData.set(key, value_1);\n                        // Was a new key added?\n                        if (!keyExisted) {\n                            // _keysAtom.reportChanged() was already called\n                            keysReportChangedCalled = true;\n                        }\n                    }\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (_this._data.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    _this._keysAtom.reportChanged();\n                }\n                else {\n                    var iter1 = _this._data.keys();\n                    var iter2 = orderedData.keys();\n                    var next1 = iter1.next();\n                    var next2 = iter2.next();\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            _this._keysAtom.reportChanged();\n                            break;\n                        }\n                        next1 = iter1.next();\n                        next2 = iter2.next();\n                    }\n                }\n            }\n            // Use correctly ordered map\n            _this._data = orderedData;\n        });\n        return this;\n    };\n    Object.defineProperty(ObservableMap.prototype, \"size\", {\n        get: function () {\n            this._keysAtom.reportObserved();\n            return this._data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a plain object that represents this map.\n     * Note that all the keys being stringified.\n     * If there are duplicating keys after converting them to strings, behaviour is undetermined.\n     */\n    ObservableMap.prototype.toPOJO = function () {\n        var e_5, _b;\n        var res = {};\n        try {\n            for (var _c = __values(this), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                // We lie about symbol key types due to https://github.com/Microsoft/TypeScript/issues/1863\n                res[typeof key === \"symbol\" ? key : stringifyKey(key)] = value;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return res;\n    };\n    /**\n     * Returns a shallow non observable object clone of this map.\n     * Note that the values migth still be observable. For a deep clone use mobx.toJS.\n     */\n    ObservableMap.prototype.toJS = function () {\n        return new Map(this);\n    };\n    ObservableMap.prototype.toJSON = function () {\n        // Used by JSON.stringify\n        return this.toPOJO();\n    };\n    ObservableMap.prototype.toString = function () {\n        var _this = this;\n        return (this.name +\n            \"[{ \" +\n            Array.from(this.keys())\n                .map(function (key) { return stringifyKey(key) + \": \" + (\"\" + _this.get(key)); })\n                .join(\", \") +\n            \" }]\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableMap.prototype.observe = function (listener, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with maps.\");\n        return registerListener(this, listener);\n    };\n    ObservableMap.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    return ObservableMap;\n}());\n/* 'var' fixes small-build issue */\nvar isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\nvar _a$1;\nvar ObservableSetMarker = {};\nvar ObservableSet = /** @class */ (function () {\n    function ObservableSet(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer; }\n        if (name === void 0) { name = \"ObservableSet@\" + getNextId(); }\n        this.name = name;\n        this[_a$1] = ObservableSetMarker;\n        this._data = new Set();\n        this._atom = createAtom(this.name);\n        this[Symbol.toStringTag] = \"Set\";\n        if (typeof Set !== \"function\") {\n            throw new Error(\"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\");\n        }\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name); };\n        if (initialData) {\n            this.replace(initialData);\n        }\n    }\n    ObservableSet.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableSet.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            untracked(function () {\n                var e_1, _b;\n                try {\n                    for (var _c = __values(_this._data.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var value = _d.value;\n                        _this.delete(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            });\n        });\n    };\n    ObservableSet.prototype.forEach = function (callbackFn, thisArg) {\n        var e_2, _b;\n        try {\n            for (var _c = __values(this), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var value = _d.value;\n                callbackFn.call(thisArg, value, value, this);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    Object.defineProperty(ObservableSet.prototype, \"size\", {\n        get: function () {\n            this._atom.reportObserved();\n            return this._data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableSet.prototype.add = function (value) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this._atom);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"add\",\n                object: this,\n                newValue: value\n            });\n            if (!change)\n                return this;\n            // TODO: ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(function () {\n                _this._data.add(_this.enhancer(value, undefined));\n                _this._atom.reportChanged();\n            });\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"add\",\n                    object: this,\n                    newValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(change);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        return this;\n    };\n    ObservableSet.prototype.delete = function (value) {\n        var _this = this;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                oldValue: value\n            });\n            if (!change)\n                return false;\n        }\n        if (this.has(value)) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name }));\n            transaction(function () {\n                _this._atom.reportChanged();\n                _this._data.delete(value);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    };\n    ObservableSet.prototype.has = function (value) {\n        this._atom.reportObserved();\n        return this._data.has(this.dehanceValue(value));\n    };\n    ObservableSet.prototype.entries = function () {\n        var nextIndex = 0;\n        var keys = Array.from(this.keys());\n        var values = Array.from(this.values());\n        return makeIterable({\n            next: function () {\n                var index = nextIndex;\n                nextIndex += 1;\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableSet.prototype.keys = function () {\n        return this.values();\n    };\n    ObservableSet.prototype.values = function () {\n        this._atom.reportObserved();\n        var self = this;\n        var nextIndex = 0;\n        var observableValues = Array.from(this._data.values());\n        return makeIterable({\n            next: function () {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue(observableValues[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableSet.prototype.replace = function (other) {\n        var _this = this;\n        if (isObservableSet(other)) {\n            other = other.toJS();\n        }\n        transaction(function () {\n            var prev = allowStateChangesStart(true);\n            try {\n                if (Array.isArray(other)) {\n                    _this.clear();\n                    other.forEach(function (value) { return _this.add(value); });\n                }\n                else if (isES6Set(other)) {\n                    _this.clear();\n                    other.forEach(function (value) { return _this.add(value); });\n                }\n                else if (other !== null && other !== undefined) {\n                    fail(\"Cannot initialize set from \" + other);\n                }\n            }\n            finally {\n                allowStateChangesEnd(prev);\n            }\n        });\n        return this;\n    };\n    ObservableSet.prototype.observe = function (listener, fireImmediately) {\n        // TODO 'fireImmediately' can be true?\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with sets.\");\n        return registerListener(this, listener);\n    };\n    ObservableSet.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableSet.prototype.toJS = function () {\n        return new Set(this);\n    };\n    ObservableSet.prototype.toString = function () {\n        return this.name + \"[ \" + Array.from(this).join(\", \") + \" ]\";\n    };\n    ObservableSet.prototype[(_a$1 = $mobx, Symbol.iterator)] = function () {\n        return this.values();\n    };\n    return ObservableSet;\n}());\nvar isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet);\n\nvar ObservableObjectAdministration = /** @class */ (function () {\n    function ObservableObjectAdministration(target, values, name, defaultEnhancer) {\n        if (values === void 0) { values = new Map(); }\n        this.target = target;\n        this.values = values;\n        this.name = name;\n        this.defaultEnhancer = defaultEnhancer;\n        this.keysAtom = new Atom(name + \".keys\");\n    }\n    ObservableObjectAdministration.prototype.read = function (key) {\n        return this.values.get(key).get();\n    };\n    ObservableObjectAdministration.prototype.write = function (key, newValue) {\n        var instance = this.target;\n        var observable = this.values.get(key);\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue);\n            return;\n        }\n        // intercept\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"update\",\n                object: this.proxy || instance,\n                name: key,\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        newValue = observable.prepareNewValue(newValue);\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            var notify = hasListeners(this);\n            var notifySpy = isSpyEnabled();\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this.proxy || instance,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    };\n    ObservableObjectAdministration.prototype.has = function (key) {\n        var map = this.pendingKeys || (this.pendingKeys = new Map());\n        var entry = map.get(key);\n        if (entry)\n            return entry.get();\n        else {\n            var exists = !!this.values.get(key);\n            // Possible optimization: Don't have a separate map for non existing keys,\n            // but store them in the values map instead, using a special symbol to denote \"not existing\"\n            entry = new ObservableValue(exists, referenceEnhancer, this.name + \".\" + stringifyKey(key) + \"?\", false);\n            map.set(key, entry);\n            return entry.get(); // read to subscribe\n        }\n    };\n    ObservableObjectAdministration.prototype.addObservableProp = function (propName, newValue, enhancer) {\n        if (enhancer === void 0) { enhancer = this.defaultEnhancer; }\n        var target = this.target;\n        assertPropertyConfigurable(target, propName);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.proxy || target,\n                name: propName,\n                type: \"add\",\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        var observable = new ObservableValue(newValue, enhancer, this.name + \".\" + stringifyKey(propName), false);\n        this.values.set(propName, observable);\n        newValue = observable.value; // observableValue might have changed it\n        Object.defineProperty(target, propName, generateObservablePropConfig(propName));\n        this.notifyPropertyAddition(propName, newValue);\n    };\n    ObservableObjectAdministration.prototype.addComputedProp = function (propertyOwner, // where is the property declared?\n    propName, options) {\n        var target = this.target;\n        options.name = options.name || this.name + \".\" + stringifyKey(propName);\n        this.values.set(propName, new ComputedValue(options));\n        if (propertyOwner === target || isPropertyConfigurable(propertyOwner, propName))\n            Object.defineProperty(propertyOwner, propName, generateComputedPropConfig(propName));\n    };\n    ObservableObjectAdministration.prototype.remove = function (key) {\n        if (!this.values.has(key))\n            return;\n        var target = this.target;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.proxy || target,\n                name: key,\n                type: \"remove\"\n            });\n            if (!change)\n                return;\n        }\n        try {\n            startBatch();\n            var notify = hasListeners(this);\n            var notifySpy = isSpyEnabled();\n            var oldObservable = this.values.get(key);\n            var oldValue = oldObservable && oldObservable.get();\n            oldObservable && oldObservable.set(undefined);\n            // notify key and keyset listeners\n            this.keysAtom.reportChanged();\n            this.values.delete(key);\n            if (this.pendingKeys) {\n                var entry = this.pendingKeys.get(key);\n                if (entry)\n                    entry.set(false);\n            }\n            // delete the prop\n            delete this.target[key];\n            var change = notify || notifySpy\n                ? {\n                    type: \"remove\",\n                    object: this.proxy || target,\n                    oldValue: oldValue,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        finally {\n            endBatch();\n        }\n    };\n    ObservableObjectAdministration.prototype.illegalAccess = function (owner, propName) {\n        /**\n         * This happens if a property is accessed through the prototype chain, but the property was\n         * declared directly as own property on the prototype.\n         *\n         * E.g.:\n         * class A {\n         * }\n         * extendObservable(A.prototype, { x: 1 })\n         *\n         * classB extens A {\n         * }\n         * console.log(new B().x)\n         *\n         * It is unclear whether the property should be considered 'static' or inherited.\n         * Either use `console.log(A.x)`\n         * or: decorate(A, { x: observable })\n         *\n         * When using decorate, the property will always be redeclared as own property on the actual instance\n         */\n        console.warn(\"Property '\" + propName + \"' of '\" + owner + \"' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener(this, callback);\n    };\n    ObservableObjectAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableObjectAdministration.prototype.notifyPropertyAddition = function (key, newValue) {\n        var notify = hasListeners(this);\n        var notifySpy = isSpyEnabled();\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this.proxy || this.target,\n                name: key,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n        if (this.pendingKeys) {\n            var entry = this.pendingKeys.get(key);\n            if (entry)\n                entry.set(true);\n        }\n        this.keysAtom.reportChanged();\n    };\n    ObservableObjectAdministration.prototype.getKeys = function () {\n        var e_1, _a;\n        this.keysAtom.reportObserved();\n        // return Reflect.ownKeys(this.values) as any\n        var res = [];\n        try {\n            for (var _b = __values(this.values), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (value instanceof ObservableValue)\n                    res.push(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    };\n    return ObservableObjectAdministration;\n}());\nfunction asObservableObject(target, name, defaultEnhancer) {\n    if (name === void 0) { name = \"\"; }\n    if (defaultEnhancer === void 0) { defaultEnhancer = deepEnhancer; }\n    if (Object.prototype.hasOwnProperty.call(target, $mobx))\n        return target[$mobx];\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(Object.isExtensible(target), \"Cannot make the designated object observable; it is not extensible\");\n    if (!isPlainObject(target))\n        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId();\n    var adm = new ObservableObjectAdministration(target, new Map(), stringifyKey(name), defaultEnhancer);\n    addHiddenProp(target, $mobx, adm);\n    return adm;\n}\nvar observablePropertyConfigs = Object.create(null);\nvar computedPropertyConfigs = Object.create(null);\nfunction generateObservablePropConfig(propName) {\n    return (observablePropertyConfigs[propName] ||\n        (observablePropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return this[$mobx].read(propName);\n            },\n            set: function (v) {\n                this[$mobx].write(propName, v);\n            }\n        }));\n}\nfunction getAdministrationForComputedPropOwner(owner) {\n    var adm = owner[$mobx];\n    if (!adm) {\n        // because computed props are declared on proty,\n        // the current instance might not have been initialized yet\n        initializeInstance(owner);\n        return owner[$mobx];\n    }\n    return adm;\n}\nfunction generateComputedPropConfig(propName) {\n    return (computedPropertyConfigs[propName] ||\n        (computedPropertyConfigs[propName] = {\n            configurable: globalState.computedConfigurable,\n            enumerable: false,\n            get: function () {\n                return getAdministrationForComputedPropOwner(this).read(propName);\n            },\n            set: function (v) {\n                getAdministrationForComputedPropOwner(this).write(propName, v);\n            }\n        }));\n}\nvar isObservableObjectAdministration = createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\nfunction isObservableObject(thing) {\n    if (isObject(thing)) {\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        return isObservableObjectAdministration(thing[$mobx]);\n    }\n    return false;\n}\n\nfunction getAtom(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"It is not possible to get index atoms from arrays\");\n            return thing[$mobx].atom;\n        }\n        if (isObservableSet(thing)) {\n            return thing[$mobx];\n        }\n        if (isObservableMap(thing)) {\n            var anyThing = thing;\n            if (property === undefined)\n                return anyThing._keysAtom;\n            var observable = anyThing._data.get(property) || anyThing._hasMap.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"the entry '\" + property + \"' does not exist in the observable map '\" + getDebugName(thing) + \"'\");\n            return observable;\n        }\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        if (property && !thing[$mobx])\n            thing[property]; // See #1072\n        if (isObservableObject(thing)) {\n            if (!property)\n                return fail(process.env.NODE_ENV !== \"production\" && \"please specify a property\");\n            var observable = thing[$mobx].values.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"no observable property '\" + property + \"' found on the observable object '\" + getDebugName(thing) + \"'\");\n            return observable;\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx];\n        }\n    }\n    return fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration(thing, property) {\n    if (!thing)\n        fail(\"Expecting some object\");\n    if (property !== undefined)\n        return getAdministration(getAtom(thing, property));\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))\n        return thing;\n    if (isObservableMap(thing) || isObservableSet(thing))\n        return thing;\n    // Initializers run lazily when transpiling to babel, so make sure they are run...\n    initializeInstance(thing);\n    if (thing[$mobx])\n        return thing[$mobx];\n    fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName(thing, property) {\n    var named;\n    if (property !== undefined)\n        named = getAtom(thing, property);\n    else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing))\n        named = getAdministration(thing);\n    else\n        named = getAtom(thing); // valid for arrays as well\n    return named.name;\n}\n\nvar toString = Object.prototype.toString;\nfunction deepEqual(a, b, depth) {\n    if (depth === void 0) { depth = -1; }\n    return eq(a, b, depth);\n}\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a, b, depth, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b)\n        return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null)\n        return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a)\n        return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\")\n        return false;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b))\n        return false;\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b;\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a)\n                return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        case \"[object Symbol]\":\n            return (typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++;\n            }\n            break;\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a);\n    b = unwrap(b);\n    var areArrays = className === \"[object Array]\";\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\")\n            return false;\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        var aCtor = a.constructor, bCtor = b.constructor;\n        if (aCtor !== bCtor &&\n            !(typeof aCtor === \"function\" &&\n                aCtor instanceof aCtor &&\n                typeof bCtor === \"function\" &&\n                bCtor instanceof bCtor) &&\n            (\"constructor\" in a && \"constructor\" in b)) {\n            return false;\n        }\n    }\n    if (depth === 0) {\n        return false;\n    }\n    else if (depth < 0) {\n        depth = -1;\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a)\n            return bStack[length] === b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length;\n        if (length !== b.length)\n            return false;\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack))\n                return false;\n        }\n    }\n    else {\n        // Deep compare objects.\n        var keys = Object.keys(a);\n        var key = void 0;\n        length = keys.length;\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length)\n            return false;\n        while (length--) {\n            // Deep compare each member\n            key = keys[length];\n            if (!(has$1(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack)))\n                return false;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n}\nfunction unwrap(a) {\n    if (isObservableArray(a))\n        return a.slice();\n    if (isES6Map(a) || isObservableMap(a))\n        return Array.from(a.entries());\n    if (isES6Set(a) || isObservableSet(a))\n        return Array.from(a.entries());\n    return a;\n}\nfunction has$1(a, key) {\n    return Object.prototype.hasOwnProperty.call(a, key);\n}\n\nfunction makeIterable(iterator) {\n    iterator[Symbol.iterator] = getSelf;\n    return iterator;\n}\nfunction getSelf() {\n    return this;\n}\n\n/**\n * (c) Michel Weststrate 2015 - 2018\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nif (typeof Proxy === \"undefined\" || typeof Symbol === \"undefined\") {\n    throw new Error(\"[mobx] MobX 5+ requires Proxy and Symbol objects. If your environment doesn't support Symbol or Proxy objects, please downgrade to MobX 4. For React Native Android, consider upgrading JSCore.\");\n}\ntry {\n    // define process.env if needed\n    // if this is not a production build in the first place\n    // (in which case the expression below would be substituted with 'production')\n    process.env.NODE_ENV;\n}\ncatch (e) {\n    var g = getGlobal();\n    if (typeof process === \"undefined\")\n        g.process = {};\n    g.process.env = {};\n}\n(function () {\n    function testCodeMinification() { }\n    if (testCodeMinification.name !== \"testCodeMinification\" &&\n        process.env.NODE_ENV !== \"production\" &&\n        typeof process !== 'undefined' && process.env.IGNORE_MOBX_MINIFY_WARNING !== \"true\") {\n        // trick so it doesn't get replaced\n        var varName = [\"process\", \"env\", \"NODE_ENV\"].join(\".\");\n        console.warn(\"[mobx] you are running a minified build, but '\" + varName + \"' was not set to 'production' in your bundler. This results in an unnecessarily large and slow bundle\");\n    }\n})();\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy: spy,\n        extras: {\n            getDebugName: getDebugName\n        },\n        $mobx: $mobx\n    });\n}\n\nexport { $mobx, FlowCancellationError, IDerivationState, ObservableMap, ObservableSet, Reaction, allowStateChanges as _allowStateChanges, allowStateChangesInsideComputed as _allowStateChangesInsideComputed, allowStateReadsEnd as _allowStateReadsEnd, allowStateReadsStart as _allowStateReadsStart, _endAction, getAdministration as _getAdministration, getGlobalState as _getGlobalState, interceptReads as _interceptReads, isComputingDerivation as _isComputingDerivation, resetGlobalState as _resetGlobalState, _startAction, action, autorun, comparer, computed, configure, createAtom, decorate, entries, extendObservable, flow, get, getAtom, getDebugName, getDependencyTree, getObserverTree, has, intercept, isAction, isArrayLike, isObservableValue as isBoxedObservable, isComputed, isComputedProp, isFlowCancellationError, isObservable, isObservableArray, isObservableMap, isObservableObject, isObservableProp, isObservableSet, keys, observable, observe, onBecomeObserved, onBecomeUnobserved, onReactionError, reaction, remove, runInAction, set, spy, toJS, trace, transaction, untracked, values, when };\n", "import { Component, h } from 'preact';\nimport { createAtom, Reaction, _getGlobalState } from 'mobx';\n\nfunction isStateless(component) {\n    // `function() {}` has prototype, but `() => {}` doesn't\n    // `() => {}` via Babel has prototype too.\n    return !(component.prototype && component.prototype.render) && !Component.isPrototypeOf(component);\n}\n\nfunction makeDisplayName(component) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$prefix = _ref.prefix,\n        prefix = _ref$prefix === undefined ? '' : _ref$prefix,\n        _ref$suffix = _ref.suffix,\n        suffix = _ref$suffix === undefined ? '' : _ref$suffix;\n\n    var displayName = component.displayName || component.name || component.constructor && component.constructor.name || '<component>';\n    return prefix + displayName + suffix;\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar isUsingStaticRendering = false;\n\nvar logger = console; // eslint-disable-line no-console\n\nfunction useStaticRendering(useStaticRendering) {\n    isUsingStaticRendering = useStaticRendering;\n}\n\n/**\n Workaround\n\n allowStateChanges from mobX must be patched so that props, state and args are passed to the render() function\n */\n\nfunction allowStateChangesStart(allowStateChanges) {\n    var prev = _getGlobalState().allowStateChanges;\n    _getGlobalState().allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    _getGlobalState().allowStateChanges = prev;\n}\n\nfunction allowStateChanges(allowStateChanges, func, props, state, context) {\n    var prev = allowStateChangesStart(allowStateChanges);\n    var res = void 0;\n    try {\n        res = func(props, state, context);\n    } finally {\n        allowStateChangesEnd(prev);\n    }\n    return res;\n}\n\n/**\n * Utilities\n */\n\nfunction patch(target, funcName) {\n    var runMixinFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var base = target[funcName];\n    var mixinFunc = reactiveMixin[funcName];\n    var f = !base ? mixinFunc : runMixinFirst === true ? function () {\n        mixinFunc.apply(this, arguments);\n        base.apply(this, arguments);\n    } : function () {\n        base.apply(this, arguments);\n        mixinFunc.apply(this, arguments);\n    };\n\n    // MWE: ideally we freeze here to protect against accidental overwrites in component instances, see #195\n    // ...but that breaks react-hot-loader, see #231...\n    target[funcName] = f;\n}\n\nfunction isObjectShallowModified(prev, next) {\n    if (null == prev || null == next || (typeof prev === 'undefined' ? 'undefined' : _typeof(prev)) !== 'object' || (typeof next === 'undefined' ? 'undefined' : _typeof(next)) !== 'object') {\n        return prev !== next;\n    }\n    var keys = Object.keys(prev);\n    if (keys.length !== Object.keys(next).length) {\n        return true;\n    }\n    var key = void 0;\n    for (var i = keys.length - 1; key = keys[i]; i--) {\n        if (next[key] !== prev[key]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * ReactiveMixin\n */\nvar reactiveMixin = {\n    componentWillMount: function componentWillMount() {\n        var _this = this;\n\n        if (isUsingStaticRendering === true) {\n            return;\n        }\n        // Generate friendly name for debugging\n        var initialName = makeDisplayName(this);\n\n        /**\n         * If props are shallowly modified, react will render anyway,\n         * so atom.reportChanged() should not result in yet another re-render\n         */\n        var skipRender = false;\n        /**\n         * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n         * so detect these changes\n         */\n        var isForcingUpdate = false;\n\n        function makePropertyObservableReference(propName) {\n            var valueHolder = this[propName];\n            var atom = createAtom('reactive ' + propName);\n            Object.defineProperty(this, propName, {\n                configurable: true,\n                enumerable: true,\n                get: function get$$1() {\n                    atom.reportObserved();\n                    return valueHolder;\n                },\n                set: function set$$1(v) {\n                    if (!isForcingUpdate && isObjectShallowModified(valueHolder, v)) {\n                        valueHolder = v;\n                        skipRender = true;\n                        atom.reportChanged();\n                        skipRender = false;\n                    } else {\n                        valueHolder = v;\n                    }\n                }\n            });\n        }\n\n        // make this.props an observable reference, see #124\n        makePropertyObservableReference.call(this, 'props');\n        // make state an observable reference\n        makePropertyObservableReference.call(this, 'state');\n\n        // wire up reactive render\n        var baseRender = this.render.bind(this);\n        var reaction = null;\n        var isRenderingPending = false;\n\n        var initialRender = function initialRender() {\n            reaction = new Reaction(initialName + '.render()', function () {\n                if (!isRenderingPending) {\n                    // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n                    // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n                    // See #85 / Pull #44\n                    isRenderingPending = true;\n                    if (typeof _this.componentWillReact === 'function') {\n                        _this.componentWillReact();\n                    } // TODO: wrap in action?\n                    if (_this.__$mobxIsUnmounted !== true) {\n                        // If we are unmounted at this point, componentWillReact() had a side effect causing the component to unmounted\n                        // TODO: remove this check? Then react will properly warn about the fact that this should not happen? See #73\n                        // However, people also claim this migth happen during unit tests..\n                        var hasError = true;\n                        try {\n                            isForcingUpdate = true;\n                            if (!skipRender) {\n                                Component.prototype.forceUpdate.call(_this);\n                            }\n                            hasError = false;\n                        } finally {\n                            isForcingUpdate = false;\n                            if (hasError) {\n                                reaction.dispose();\n                            }\n                        }\n                    }\n                }\n            });\n            reaction.reactComponent = _this;\n            reactiveRender.$mobx = reaction;\n            _this.render = reactiveRender;\n            return reactiveRender(_this.props, _this.state, _this.context);\n        };\n\n        var reactiveRender = function reactiveRender(props, state, context) {\n            isRenderingPending = false;\n            var exception = undefined;\n            var rendering = undefined;\n            reaction.track(function () {\n                try {\n                    rendering = allowStateChanges(false, baseRender, props, state, context);\n                } catch (e) {\n                    exception = e;\n                }\n            });\n            if (exception) {\n                throw exception;\n            }\n            return rendering;\n        };\n\n        this.render = initialRender;\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n        if (isUsingStaticRendering === true) {\n            return;\n        }\n        this.render.$mobx && this.render.$mobx.dispose();\n        this.__$mobxIsUnmounted = true;\n    },\n\n    componentDidMount: function componentDidMount() {},\n\n    componentDidUpdate: function componentDidUpdate() {},\n\n    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n        if (isUsingStaticRendering) {\n            logger.warn('[mobx-preact] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.');\n        }\n        // update on any state changes (as is the default)\n        if (this.state !== nextState) {\n            return true;\n        }\n        // update if props are shallowly not equal, inspired by PureRenderMixin\n        // we could return just 'false' here, and avoid the `skipRender` checks etc\n        // however, it is nicer if lifecycle events are triggered like usually,\n        // so we return true here if props are shallowly modified.\n        return isObjectShallowModified(this.props, nextProps);\n    }\n};\n\n/**\n * Observer function / decorator\n */\nfunction observer(componentClass) {\n    if (arguments.length > 1) {\n        logger.warn('Mobx observer: Using observer to inject stores is not supported. Use `@connect([\"store1\", \"store2\"]) ComponentClass instead or preferably, use `@inject(\"store1\", \"store2\") @observer ComponentClass` or `inject(\"store1\", \"store2\")(observer(componentClass))``');\n    }\n\n    if (componentClass.isMobxInjector === true) {\n        logger.warn('Mobx observer: You are trying to use \\'observer\\' on a component that already has \\'inject\\'. Please apply \\'observer\\' before applying \\'inject\\'');\n    }\n\n    // Stateless function component:\n    if (isStateless(componentClass)) {\n        var _class, _temp;\n\n        return observer((_temp = _class = function (_Component) {\n            inherits(_class, _Component);\n\n            function _class() {\n                classCallCheck(this, _class);\n                return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n            }\n\n            createClass(_class, [{\n                key: 'render',\n                value: function render() {\n                    return componentClass.call(this, this.props, this.context);\n                }\n            }]);\n            return _class;\n        }(Component), _class.displayName = makeDisplayName(componentClass), _temp));\n    }\n\n    if (!componentClass) {\n        throw new Error('Please pass a valid component to \\'observer\\'');\n    }\n\n    var target = componentClass.prototype || componentClass;\n    mixinLifecycleEvents(target);\n    componentClass.isMobXReactObserver = true;\n    return componentClass;\n}\n\nfunction mixinLifecycleEvents(target) {\n    patch(target, 'componentWillMount', true);\n    patch(target, 'componentDidMount');\n\n    if (!target.shouldComponentUpdate) {\n        target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;\n    }\n}\n\nvar Observer = observer(function (_ref) {\n    var children = _ref.children;\n    return children[0]();\n});\n\nObserver.displayName = 'Observer';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hoistNonReactStatics = createCommonjsModule(function (module, exports) {\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n(function (global, factory) {\n    module.exports = factory();\n}(commonjsGlobal, (function () {\n    \n    var REACT_STATICS = {\n        childContextTypes: true,\n        contextTypes: true,\n        defaultProps: true,\n        displayName: true,\n        getDefaultProps: true,\n        getDerivedStateFromProps: true,\n        mixins: true,\n        propTypes: true,\n        type: true\n    };\n    \n    var KNOWN_STATICS = {\n        name: true,\n        length: true,\n        prototype: true,\n        caller: true,\n        callee: true,\n        arguments: true,\n        arity: true\n    };\n    \n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var getPrototypeOf = Object.getPrototypeOf;\n    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n    \n    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n            \n            if (objectPrototype) {\n                var inheritedComponent = getPrototypeOf(sourceComponent);\n                if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n                }\n            }\n            \n            var keys = getOwnPropertyNames(sourceComponent);\n            \n            if (getOwnPropertySymbols) {\n                keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n            }\n            \n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                    try { // Avoid failures from read-only properties\n                        defineProperty(targetComponent, key, descriptor);\n                    } catch (e) {}\n                }\n            }\n            \n            return targetComponent;\n        }\n        \n        return targetComponent;\n    };\n})));\n});\n\nvar proxiedInjectorProps = {\n    isMobxInjector: {\n        value: true,\n        writable: true,\n        configurable: true,\n        enumerable: true\n    }\n};\n\n/**\n * Store Injection\n */\nfunction createStoreInjector(grabStoresFn, component, injectNames) {\n    var _class, _temp;\n\n    var prefix = 'inject-';\n    var suffix = injectNames ? '-with-' + injectNames : '';\n    var displayName = makeDisplayName(component, { prefix: prefix, suffix: suffix });\n\n    var Injector = (_temp = _class = function (_Component) {\n        inherits(Injector, _Component);\n\n        function Injector() {\n            classCallCheck(this, Injector);\n            return possibleConstructorReturn(this, (Injector.__proto__ || Object.getPrototypeOf(Injector)).apply(this, arguments));\n        }\n\n        createClass(Injector, [{\n            key: 'render',\n            value: function render() {\n                // Optimization: it might be more efficient to apply the mapper function *outside* the render method\n                // (if the mapper is a function), that could avoid expensive(?) re-rendering of the injector component\n                // See this test: 'using a custom injector is not too reactive' in inject.js\n                var newProps = {};\n                for (var key in this.props) {\n                    if (this.props.hasOwnProperty(key)) {\n                        newProps[key] = this.props[key];\n                    }\n                }\n                var additionalProps = grabStoresFn(this.context.mobxStores || {}, newProps, this.context) || {};\n                for (var _key in additionalProps) {\n                    newProps[_key] = additionalProps[_key];\n                }\n\n                return h(component, newProps);\n            }\n        }]);\n        return Injector;\n    }(Component), _class.displayName = displayName, _temp);\n\n    // Static fields from component should be visible on the generated Injector\n\n    hoistNonReactStatics(Injector, component);\n\n    Injector.wrappedComponent = component;\n    Object.defineProperties(Injector, proxiedInjectorProps);\n\n    return Injector;\n}\n\nfunction grabStoresByName(storeNames) {\n    return function (baseStores, nextProps) {\n        storeNames.forEach(function (storeName) {\n            // prefer props over stores\n            if (storeName in nextProps) {\n                return;\n            }\n            if (!(storeName in baseStores)) {\n                throw new Error('MobX injector: Store \\'' + storeName + '\\' is not available! Make sure it is provided by some Provider');\n            }\n            nextProps[storeName] = baseStores[storeName];\n        });\n        return nextProps;\n    };\n}\n\n/**\n * higher order component that injects stores to a child.\n * takes either a varargs list of strings, which are stores read from the context,\n * or a function that manually maps the available stores from the context to props:\n * storesToProps(mobxStores, props, context) => newProps\n */\nfunction inject() /* fn(stores, nextProps) or ...storeNames */{\n    var grabStoresFn = void 0;\n    if (typeof arguments[0] === 'function') {\n        grabStoresFn = arguments[0];\n        return function (componentClass) {\n            var injected = createStoreInjector(grabStoresFn, componentClass);\n            injected.isMobxInjector = false; // suppress warning\n            // mark the Injector as observer, to make it react to expressions in `grabStoresFn`,\n            // see #111\n            injected = observer(injected);\n            injected.isMobxInjector = true; // restore warning\n            return injected;\n        };\n    } else {\n        var storeNames = [];\n        for (var i = 0; i < arguments.length; i++) {\n            storeNames[i] = arguments[i];\n        }\n        grabStoresFn = grabStoresByName(storeNames);\n        return function (componentClass) {\n            return createStoreInjector(grabStoresFn, componentClass, storeNames.join('-'));\n        };\n    }\n}\n\nfunction connect(arg1, arg2) {\n    if (typeof arg1 === 'string') {\n        throw new Error('Store names should be provided as array');\n    }\n    if (Array.isArray(arg1)) {\n        if (!arg2) {\n            // invoked as decorator\n            return function (componentClass) {\n                return connect(arg1, componentClass);\n            };\n        } else {\n            return inject.apply(null, arg1)(connect(arg2));\n        }\n    }\n    return observer(arg1);\n}\n\nvar specialReactKeys = { children: true, key: true, ref: true };\n\nvar logger$1 = console; // eslint-disable-line no-console\n\nvar Provider = function (_Component) {\n    inherits(Provider, _Component);\n\n    function Provider() {\n        classCallCheck(this, Provider);\n        return possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n    }\n\n    createClass(Provider, [{\n        key: 'render',\n        value: function render(_ref) {\n            var children = _ref.children;\n\n            return children.length > 1 ? h(\n                'div',\n                null,\n                ' ',\n                children,\n                ' '\n            ) : children[0];\n        }\n    }, {\n        key: 'getChildContext',\n        value: function getChildContext() {\n            var stores = {};\n            // inherit stores\n            var baseStores = this.context.mobxStores;\n            if (baseStores) {\n                for (var key in baseStores) {\n                    stores[key] = baseStores[key];\n                }\n            }\n            // add own stores\n            for (var _key in this.props) {\n                if (!specialReactKeys[_key] && _key !== 'suppressChangedStoreWarning') {\n                    stores[_key] = this.props[_key];\n                }\n            }\n\n            return {\n                mobxStores: stores\n            };\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            // Maybe this warning is too aggressive?\n            if (Object.keys(nextProps).length !== Object.keys(this.props).length) {\n                logger$1.warn('MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children');\n            }\n            if (!nextProps.suppressChangedStoreWarning) {\n                for (var key in nextProps) {\n                    if (!specialReactKeys[key] && this.props[key] !== nextProps[key]) {\n                        logger$1.warn('MobX Provider: Provided store \\'' + key + '\\' has changed. Please avoid replacing stores as the change might not propagate to all children');\n                    }\n                }\n            }\n        }\n    }]);\n    return Provider;\n}(Component);\n\nif (!Component) {\n    throw new Error('mobx-preact requires Preact to be available');\n}\n\nexport { observer, Observer, useStaticRendering, connect, inject, Provider };\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p, c) {\n\tthis.props = p;\n\tthis.context = c;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { MODE_HYDRATE } from '../../src/constants';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function (vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._flags & MODE_HYDRATE) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode && originalParent) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.appendChild(vnode._dom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tif (\n\t\t!c._pendingSuspensionCount++ &&\n\t\t!(suspendingVNode._flags & MODE_HYDRATE)\n\t) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function () {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function (props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._flags &= ~MODE_HYDRATE;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function (child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function (props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate =\n\tSuspenseList.prototype.componentDidMount = function () {\n\t\t// Iterate through all children after mounting for two reasons:\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t\t//    The nodes can now be completely consumed from the linked list.\n\t\t// 2. Handle nodes that might have gotten resolved between render and\n\t\t//    componentDidMount.\n\t\tthis._map.forEach((node, child) => {\n\t\t\tresolve(this, child, node);\n\t\t});\n\t};\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function () {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\tif (!_this._temp) {\n\t\t_this._container = container;\n\n\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t_this._temp = {\n\t\t\tnodeType: 1,\n\t\t\tparentNode: container,\n\t\t\tchildNodes: [],\n\t\t\tcontains: () => true,\n\t\t\tappendChild(child) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.appendChild(child);\n\t\t\t},\n\t\t\tinsertBefore(child, before) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.appendChild(child);\n\t\t\t},\n\t\t\tremoveChild(child) {\n\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t_this._container.removeChild(child);\n\t\t\t}\n\t\t};\n\t}\n\n\t// Render our wrapping element into temp.\n\trender(\n\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t_this._temp\n\t);\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\nimport {\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tuseEffect,\n\tuseId,\n\tuseImperativeHandle,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseReducer,\n\tuseRef,\n\tuseState\n} from 'preact/hooks';\nimport {\n\tuseDeferredValue,\n\tuseInsertionEffect,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './index';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS =\n\t/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\nconst ON_ANI = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;\nconst CAMEL_REPLACE = /[A-Z0-9]/g;\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/\n\t\t: /fil|che|ra/\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nconst classNameDescriptorNonEnumberable = {\n\tenumerable: false,\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nfunction handleDomVNode(vnode) {\n\tlet props = vnode.props,\n\t\ttype = vnode.type,\n\t\tnormalizedProps = {};\n\n\tlet isNonDashedType = type.indexOf('-') === -1;\n\tfor (let i in props) {\n\t\tlet value = props[i];\n\n\t\tif (\n\t\t\t(i === 'value' && 'defaultValue' in props && value == null) ||\n\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t(IS_DOM && i === 'children' && type === 'noscript') ||\n\t\t\ti === 'class' ||\n\t\t\ti === 'className'\n\t\t) {\n\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t// a default value\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet lowerCased = i.toLowerCase();\n\t\tif (i === 'defaultValue' && 'value' in props && props.value == null) {\n\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\ti = 'value';\n\t\t} else if (i === 'download' && value === true) {\n\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t// value will be used as the file name and the file will be called\n\t\t\t// \"true\" upon downloading it.\n\t\t\tvalue = '';\n\t\t} else if (lowerCased === 'translate' && value === 'no') {\n\t\t\tvalue = false;\n\t\t} else if (lowerCased[0] === 'o' && lowerCased[1] === 'n') {\n\t\t\tif (lowerCased === 'ondoubleclick') {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\tlowerCased === 'onchange' &&\n\t\t\t\t(type === 'input' || type === 'textarea') &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\tlowerCased = i = 'oninput';\n\t\t\t} else if (lowerCased === 'onfocus') {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (lowerCased === 'onblur') {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (ON_ANI.test(i)) {\n\t\t\t\ti = lowerCased;\n\t\t\t}\n\t\t} else if (isNonDashedType && CAMEL_PROPS.test(i)) {\n\t\t\ti = i.replace(CAMEL_REPLACE, '-$&').toLowerCase();\n\t\t} else if (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\t// Add support for onInput and onChange, see #3561\n\t\t// if we have an oninput prop already change it to oninputCapture\n\t\tif (lowerCased === 'oninput') {\n\t\t\ti = lowerCased;\n\t\t\tif (normalizedProps[i]) {\n\t\t\t\ti = 'oninputCapture';\n\t\t\t}\n\t\t}\n\n\t\tnormalizedProps[i] = value;\n\t}\n\n\t// Add support for array select values: <select multiple value={[]} />\n\tif (\n\t\ttype == 'select' &&\n\t\tnormalizedProps.multiple &&\n\t\tArray.isArray(normalizedProps.value)\n\t) {\n\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tchild.props.selected =\n\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t});\n\t}\n\n\t// Adding support for defaultValue in select tag\n\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tif (normalizedProps.multiple) {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t} else {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (props.class && !props.className) {\n\t\tnormalizedProps.class = props.class;\n\t\tObject.defineProperty(\n\t\t\tnormalizedProps,\n\t\t\t'className',\n\t\t\tclassNameDescriptorNonEnumberable\n\t\t);\n\t} else if (props.className && !props.class) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t} else if (props.class && props.className) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t}\n\n\tvnode.props = normalizedProps;\n}\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\t// only normalize props on Element nodes\n\tif (typeof vnode.type === 'string') {\n\t\thandleDomVNode(vnode);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function (vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\nconst oldDiffed = options.diffed;\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = function (vnode) {\n\tif (oldDiffed) {\n\t\toldDiffed(vnode);\n\t}\n\n\tconst props = vnode.props;\n\tconst dom = vnode._dom;\n\n\tif (\n\t\tdom != null &&\n\t\tvnode.type === 'textarea' &&\n\t\t'value' in props &&\n\t\tprops.value !== dom.value\n\t) {\n\t\tdom.value = props.value == null ? '' : props.value;\n\t}\n\n\tcurrentComponent = null;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t},\n\t\t\tuseCallback,\n\t\t\tuseContext,\n\t\t\tuseDebugValue,\n\t\t\tuseDeferredValue,\n\t\t\tuseEffect,\n\t\t\tuseId,\n\t\t\tuseImperativeHandle,\n\t\t\tuseInsertionEffect,\n\t\t\tuseLayoutEffect,\n\t\t\tuseMemo,\n\t\t\t// useMutableSource, // experimental-only and replaced by uSES, likely not worth supporting\n\t\t\tuseReducer,\n\t\t\tuseRef,\n\t\t\tuseState,\n\t\t\tuseSyncExternalStore,\n\t\t\tuseTransition\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport { is } from './util';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Check if the passed element is a Fragment node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isFragment(element) {\n\treturn isValidElement(element) && element.type === Fragment;\n}\n\n/**\n * Check if the passed element is a Memo node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isMemo(element) {\n\treturn (\n\t\t!!element &&\n\t\t!!element.displayName &&\n\t\t(typeof element.displayName === 'string' ||\n\t\t\telement.displayName instanceof String) &&\n\t\telement.displayName.startsWith('Memo(')\n\t);\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n\n// compat to react-is\nexport const isElement = isValidElement;\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n * @typedef {{ _value: any; _getSnapshot: () => any }} Store\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\t/**\n\t * @typedef {{ _instance: Store }} StoreRef\n\t * @type {[StoreRef, (store: StoreRef) => void]}\n\t */\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (didSnapshotChange(_instance)) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\n/** @type {(inst: Store) => boolean} */\nfunction didSnapshotChange(inst) {\n\tconst latestGetSnapshot = inst._getSnapshot;\n\tconst prevValue = inst._value;\n\ttry {\n\t\tconst nextValue = latestGetSnapshot();\n\t\treturn !is(prevValue, nextValue);\n\t} catch (error) {\n\t\treturn true;\n\t}\n}\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + str + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities(value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "import { assign } from 'lodash-es'\nimport { createElement as h } from 'preact/compat'\nimport LogicFlow from './LogicFlow'\nimport { KeyboardDef } from './keyboard'\nimport { OverlapMode } from './constant'\nimport { Grid } from './view/overlay'\n\nimport GridOptions = Grid.GridOptions\n\nexport namespace Options {\n  import NodeData = LogicFlow.NodeData\n  import EdgeData = LogicFlow.EdgeData\n  import GraphData = LogicFlow.GraphData\n  import ExtensionType = LogicFlow.ExtensionType\n  export type EdgeType = 'line' | 'polyline' | 'bezier' | string\n  export type BackgroundConfig = {\n    // 背景图片地址\n    backgroundImage?: string\n    // CSS background-repeat 属性\n    backgroundRepeat?:\n      | 'repeat'\n      | 'repeat-x'\n      | 'repeat-y'\n      | 'no-repeat'\n      | 'initial'\n      | 'inherit'\n    // TODO: 根据具体情况添加各种自定义样式\n    [key: string]: any\n  }\n\n  export type AnimationConfig = {\n    node: boolean\n    edge: boolean\n  }\n\n  export type EdgeGeneratorType = (\n    sourceNode: LogicFlow.NodeData,\n    targetNode: LogicFlow.NodeData,\n    currentEdge?: Partial<LogicFlow.EdgeConfig>,\n  ) => any\n\n  export interface CustomAnchorLineProps {\n    sourcePoint: LogicFlow.Point\n    targetPoint: LogicFlow.Point\n\n    [key: string]: any\n  }\n\n  export interface GuardsConfig {\n    beforeClone?: (data: NodeData | GraphData) => boolean\n    beforeDelete?: (data: NodeData | EdgeData) => boolean\n  }\n\n  export interface Common {\n    container: HTMLElement\n    // REMIND: 注意，当在 SSR 框架（比如 Next.js Nuxt.js）项目中使用 LogicFlow 时，在初始化时需要设置宽高\n    width?: number\n    height?: number\n    background?: false | BackgroundConfig\n    /**\n     * Grid 网格配置\n     */\n    grid?: number | boolean | GridOptions\n\n    partial?: boolean\n    keyboard?: KeyboardDef\n    style?: Partial<LogicFlow.Theme> // 主题配置\n    edgeType?: EdgeType\n    adjustEdge?: boolean\n\n    allowRotate?: boolean // 允许节点旋转\n    allowResize?: boolean // 是否允许缩放\n\n    isSilentMode?: boolean // 是否为静默模式：可以简单理解为“只读”模式，这种模式下，画布中的节点和边不可移动，不可进行文案修改，没有锚点。\n    stopScrollGraph?: boolean\n    stopZoomGraph?: boolean\n    stopMoveGraph?:\n      | boolean\n      | 'vertical'\n      | 'horizontal'\n      | [number, number, number, number]\n    animation?: boolean | Partial<AnimationConfig>\n    history?: boolean\n    outline?: boolean\n    snapline?: boolean\n    textEdit?: boolean\n\n    guards?: GuardsConfig\n    overlapMode?: OverlapMode\n\n    plugins?: ExtensionType[]\n    pluginsOptions?: Record<string, any>\n    disabledPlugins?: string[]\n    disabledTools?: string[]\n\n    idGenerator?: (type?: string) => string\n    edgeGenerator?: EdgeGeneratorType\n\n    customTrajectory?: (props: CustomAnchorLineProps) => h.JSX.Element\n    [key: string]: unknown\n  }\n\n  export interface ManualBooleans {}\n\n  export interface Manual extends Partial<Common>, Partial<ManualBooleans> {}\n\n  export interface Definition extends Common {}\n}\n\nexport namespace Options {\n  export function get(options: Partial<Manual>) {\n    const { ...others } = options\n    const container = options.container\n    if (!container) {\n      throw new Error(\n        'Ensure the container of LogicFlow is specified and valid.',\n      )\n    }\n\n    return assign({}, defaults, others) as Options.Definition\n  }\n}\n\nexport namespace Options {\n  export const defaults: Partial<Definition> = {\n    background: false,\n    grid: false,\n    textEdit: true,\n    snapline: true,\n    outline: false,\n    disabledTools: [],\n  }\n}\n", "export * from './animation'\nexport * from './browser'\nexport * from './compatible'\nexport * from './drag'\nexport * from './edge'\nexport * from './geometry'\nexport * from './graph'\nexport * from './matrix'\nexport * from './mobx'\nexport * from './node'\nexport * from './raf'\nexport * from './sampling'\nexport * from './theme'\nexport * from './uuid'\nexport * from './vector'\nexport * from './zIndex'\n", "import { cloneDeep, merge } from 'lodash-es'\nimport { Options } from '../options'\n\nimport AnimationConfig = Options.AnimationConfig\n\nexport const defaultAnimationOffConfig = {\n  node: false,\n  edge: false,\n}\n\nexport const defaultAnimationOnConfig = {\n  node: true,\n  edge: true,\n}\n\nexport const setupAnimation = (\n  config?: boolean | Partial<AnimationConfig>,\n): AnimationConfig => {\n  if (!config || typeof config === 'boolean') {\n    return config === true\n      ? cloneDeep(defaultAnimationOnConfig)\n      : cloneDeep(defaultAnimationOffConfig)\n  }\n\n  // 当传入的是对象时，将其与默认关合并\n  return merge(cloneDeep(defaultAnimationOffConfig), config)\n}\n\nexport const updateAnimation = setupAnimation\n", "import { get } from 'lodash-es'\n\nexport const isIe =\n  get(window, 'navigator.userAgent', '').match(/MSIE|Trident/) !== null\n", "// import { cloneDeep } from 'lodash-es'\n/**\n * 对数据实现兼容处理。\n *\n * Vue 中的 data 会进行 Observe，深拷贝的原始数据对象\n */\nexport function formatData<T>(data: T): T {\n  try {\n    // WARNING: cloneDeep虽然也会将Observe对象转换为plain对象，但是不会像JSON.parse那样，会将undefined去掉。\n    // 会导致后面的pick因为存在pick覆盖默认值的情况。\n    return JSON.parse(JSON.stringify(data))\n  } catch {\n    return data\n  }\n}\n", "export const DEFAULT_VISIBLE_SPACE = 200\nexport const ELEMENT_MAX_Z_INDEX = 9999\n\nexport const DEFAULT_GRID_SIZE = 10\n\nexport enum ElementState {\n  DEFAULT = 1, // 默认显示\n  TEXT_EDIT, // 此元素正在进行文本编辑\n  SHOW_MENU, // 显示菜单，废弃请使用菜单插件\n  ALLOW_CONNECT, // 此元素允许作为当前边的目标节点\n  NOT_ALLOW_CONNECT, // 此元素不允许作为当前边的目标节点\n}\n\nexport enum ElementType {\n  NODE = 'node',\n  EDGE = 'edge',\n  GRAPH = 'graph',\n}\n\nexport enum ModelType {\n  NODE = 'node',\n  CIRCLE_NODE = 'circle-node',\n  POLYGON_NODE = 'polygon-node',\n  RECT_NODE = 'rect-node',\n  TEXT_NODE = 'text-node',\n  ELLIPSE_NODE = 'ellipse-node',\n  DIAMOND_NODE = 'diamond-node',\n  HTML_NODE = 'html-node',\n  CUSTOM_HTML_NODE = 'custom-html-node',\n  EDGE = 'edge',\n  LINE_EDGE = 'line-edge',\n  POLYLINE_EDGE = 'polyline-edge',\n  BEZIER_EDGE = 'bezier-edge',\n  GRAPH = 'graph',\n}\n\nexport enum EventType {\n  ELEMENT_CLICK = 'element:click', // 是 node:click & edge:click 的并集\n\n  // Node events\n  NODE_ADD = 'node:add',\n  NODE_DELETE = 'node:delete',\n  NODE_CLICK = 'node:click',\n  NODE_DBCLICK = 'node:dbclick',\n\n  NODE_GROUP_COPY = 'node:group-copy-add',\n  NODE_DND_ADD = 'node:dnd-add',\n  NODE_DND_DRAG = 'node:dnd-drag',\n  NODE_MOUSEDOWN = 'node:mousedown',\n  NODE_DRAGSTART = 'node:dragstart',\n  NODE_DRAG = 'node:drag',\n  NODE_DROP = 'node:drop',\n  NODE_MOUSEUP = 'node:mouseup',\n  NODE_MOUSEMOVE = 'node:mousemove',\n  NODE_MOUSEENTER = 'node:mouseenter',\n  NODE_MOUSELEAVE = 'node:mouseleave',\n  NODE_CONTEXTMENU = 'node:contextmenu',\n  NODE_ROTATE = 'node:rotate',\n  NODE_RESIZE = 'node:resize',\n\n  // 节点 properties 变化事件\n  NODE_PROPERTIES_CHANGE = 'node:properties-change',\n  NODE_PROPERTIES_DELETE = 'node:properties-delete',\n\n  // Edge events\n  EDGE_ADD = 'edge:add',\n  EDGE_DELETE = 'edge:delete',\n  EDGE_CLICK = 'edge:click',\n  EDGE_DBCLICK = 'edge:dbclick',\n\n  EDGE_MOUSEENTER = 'edge:mouseenter',\n  EDGE_MOUSELEAVE = 'edge:mouseleave',\n  EDGE_CONTEXTMENU = 'edge:contextmenu',\n  EDGE_ADJUST = 'edge:adjust',\n  EDGE_EXCHANGE_NODE = 'edge:exchange-node',\n\n  // Anchor events\n  ANCHOR_DRAGSTART = 'anchor:dragstart',\n  ANCHOR_DRAG = 'anchor:drag',\n  ANCHOR_DROP = 'anchor:drop',\n  ANCHOR_DRAGEND = 'anchor:dragend',\n\n  // Adjust point events\n  ADJUST_POINT_MOUSEDOWN = 'adjustPoint:mousedown',\n  ADJUST_POINT_MOUSEUP = 'adjustPoint:mouseup',\n  ADJUST_POINT_MOUSEMOVE = 'adjustPoint:mousemove',\n  ADJUST_POINT_DRAGSTART = 'adjustPoint:dragstart',\n  ADJUST_POINT_DRAG = 'adjustPoint:drag',\n  ADJUST_POINT_DROP = 'adjustPoint:drop',\n  ADJUST_POINT_DRAGEND = 'adjustPoint:dragend',\n\n  // Blank events\n  BLANK_MOUSEDOWN = 'blank:mousedown',\n  BLANK_DRAGSTART = 'blank:dragstart',\n  BLANK_DRAG = 'blank:drag',\n  BLANK_DROP = 'blank:drop',\n  BLANK_MOUSEMOVE = 'blank:mousemove',\n  BLANK_MOUSEUP = 'blank:mouseup',\n  BLANK_CLICK = 'blank:click',\n  BLANK_CONTEXTMENU = 'blank:contextmenu',\n\n  // Selection events\n  SELECTION_MOUSEDOWN = 'selection:mousedown',\n  SELECTION_DRAGSTART = 'selection:dragstart',\n  SELECTION_DRAG = 'selection:drag',\n  SELECTION_DROP = 'selection:drop',\n  SELECTION_MOUSEMOVE = 'selection:mousemove',\n  SELECTION_MOUSEUP = 'selection:mouseup',\n  SELECTION_CONTEXTMENU = 'selection:contextmenu',\n  CONNECTION_NOT_ALLOWED = 'connection:not-allowed',\n\n  // Other events\n  HISTORY_CHANGE = 'history:change',\n  TEXT_UPDATE = 'text:update',\n  GRAPH_TRANSFORM = 'graph:transform',\n  GRAPH_RENDERED = 'graph:rendered',\n  GRAPH_UPDATED = 'graph:updated',\n}\n\nexport enum OverlapMode {\n  DEFAULT = 0, // 默认\n  INCREASE = 1, // 递增\n}\n\nexport enum SegmentDirection {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n", "import { noop } from 'lodash-es'\nimport { Model } from '../model'\nimport { EventType } from '../constant'\nimport EventEmitter from '../event/eventEmitter'\n\n// TODO：这种方式在同构项目中，会报错，该如何解决（是否要求用户控制在浏览器环境时才初始化）\n// const DOC: any = window?.document\nconst LEFT_MOUSE_BUTTON_CODE = 0\n\nexport type IDragParams = {\n  deltaX: number\n  deltaY: number\n  event: MouseEvent | null\n  [key: string]: unknown\n}\n\nexport type ICreateDragParams = {\n  onDragStart?: (params: Partial<IDragParams>) => void\n  onDragging?: (param: IDragParams) => void\n  onDragEnd?: (param: Partial<IDragParams>) => void\n  step?: number\n  isStopPropagation?: boolean\n}\n\nexport type IStepperDragProps = {\n  eventType?: 'NODE' | 'BLANK' | 'SELECTION' | 'ADJUST_POINT' | ''\n  eventCenter?: EventEmitter\n  model?: Model.BaseModel | null\n  data?: Record<string, unknown>\n  [key: string]: unknown\n} & Partial<ICreateDragParams>\n\n// 支持拖拽的时候，按照指定step进行。\n// 因为在绘制的过程中因为放大缩小，移动的真实的step则是变化的。\nexport class StepDrag {\n  onDragStart: (params: Partial<IDragParams>) => void\n  onDragging: (params: IDragParams) => void\n  onDragEnd: (params: Partial<IDragParams>) => void\n\n  step: number\n  isStopPropagation: boolean\n  eventType: 'NODE' | 'BLANK' | 'SELECTION' | 'ADJUST_POINT' | ''\n  eventCenter?: EventEmitter\n  model?: Model.BaseModel | null\n  data?: Record<string, unknown>\n\n  // 运行时\n  isDragging = false\n  isStartDragging = false\n\n  startX = 0\n  startY = 0\n  sumDeltaX = 0\n  sumDeltaY = 0\n\n  startTime?: number\n\n  constructor({\n    onDragStart = noop,\n    onDragging = noop,\n    onDragEnd = noop,\n    eventType = '',\n    eventCenter,\n    step = 1,\n    isStopPropagation = true,\n    model,\n    data,\n  }: IStepperDragProps) {\n    this.onDragStart = onDragStart\n    this.onDragging = onDragging\n    this.onDragEnd = onDragEnd\n    this.step = step\n    this.isStopPropagation = isStopPropagation\n    this.eventType = eventType\n    this.eventCenter = eventCenter\n    this.model = model\n    this.data = data\n  }\n\n  setStep(step: number) {\n    this.step = step\n  }\n\n  setModel(model: Model.BaseModel) {\n    this.model = model\n  }\n\n  handleMouseDown = (e: MouseEvent) => {\n    const DOC: any = window?.document\n    if (e.button !== LEFT_MOUSE_BUTTON_CODE) return\n    if (this.isStopPropagation) e.stopPropagation()\n    this.isStartDragging = true\n    this.startX = e.clientX\n    this.startY = e.clientY\n\n    DOC.addEventListener('mousemove', this.handleMouseMove, false)\n    DOC.addEventListener('mouseup', this.handleMouseUp, false)\n    const elementData = this.model?.getData()\n    this.eventCenter?.emit(EventType[`${this.eventType}_MOUSEDOWN`], {\n      e,\n      data: this.data || elementData,\n    })\n    this.startTime = new Date().getTime()\n  }\n\n  handleMouseMove = (e: MouseEvent) => {\n    if (this.isStopPropagation) e.stopPropagation()\n    if (!this.isStartDragging) return\n    this.sumDeltaX += e.clientX - this.startX\n    this.sumDeltaY += e.clientY - this.startY\n    this.startX = e.clientX\n    this.startY = e.clientY\n    if (\n      this.step <= 1 ||\n      Math.abs(this.sumDeltaX) > this.step ||\n      Math.abs(this.sumDeltaY) > this.step\n    ) {\n      const remainderX = this.sumDeltaX % this.step\n      const remainderY = this.sumDeltaY % this.step\n      const deltaX = this.sumDeltaX - remainderX\n      const deltaY = this.sumDeltaY - remainderY\n      this.sumDeltaX = remainderX\n      this.sumDeltaY = remainderY\n      const elementData = this.model?.getData()\n      /**\n       * 为了区分点击和拖动，在鼠标没有拖动时，不触发dragstart。\n       */\n      if (!this.isDragging) {\n        this.eventCenter?.emit(EventType[`${this.eventType}_DRAGSTART`], {\n          e,\n          data: this.data || elementData,\n        })\n        this.onDragStart({ event: e })\n      }\n      this.isDragging = true\n      // 为了让dragstart和drag不在同一个事件循环中，使drag事件放到下一个消息队列中。\n      Promise.resolve().then(() => {\n        this.onDragging({\n          deltaX,\n          deltaY,\n          event: e,\n        })\n        this.eventCenter?.emit(EventType[`${this.eventType}_MOUSEMOVE`], {\n          e,\n          data: this.data || elementData,\n        })\n        this.eventCenter?.emit(EventType[`${this.eventType}_DRAG`], {\n          e,\n          data: this.data || elementData,\n        })\n      })\n    }\n  }\n\n  handleMouseUp = (e: MouseEvent) => {\n    const DOC = window.document\n\n    this.isStartDragging = false\n    if (this.isStopPropagation) e.stopPropagation()\n    // fix #568: 如果onDragging在下一个事件循环中触发，而drop在当前事件循环，会出现问题。\n    Promise.resolve().then(() => {\n      DOC.removeEventListener('mousemove', this.handleMouseMove, false)\n      DOC.removeEventListener('mouseup', this.handleMouseUp, false)\n      const elementData = this.model?.getData()\n      this.eventCenter?.emit(EventType[`${this.eventType}_MOUSEUP`], {\n        e,\n        data: this.data || elementData,\n      })\n      if (!this.isDragging) return\n      this.isDragging = false\n      this.onDragEnd({ event: e })\n      this.eventCenter?.emit(EventType[`${this.eventType}_DROP`], {\n        e,\n        data: this.data || elementData,\n      })\n    })\n  }\n  cancelDrag = () => {\n    const DOC: any = window?.document\n\n    DOC.removeEventListener('mousemove', this.handleMouseMove, false)\n    DOC.removeEventListener('mouseup', this.handleMouseUp, false)\n    this.onDragEnd({ event: null })\n    this.isDragging = false\n  }\n}\n", "// 各类算法的实现\n\n/*\n * 计算垂直边的与起始点有一定距离对称，边垂直于边的点\n * 调用方：计算箭头位置，计算扩大变得点击区域\n */\nexport const getVerticalPointOfLine = (config) => {\n  /*\n   ** offset: 端点到垂直点的距离\n   ** verticalLength: 两边点到垂直点的距离\n   ** type: 标识求的是线段的开始端点/结束端点\n   */\n  const { start, end, offset, verticalLength, type } = config\n  const pointPosition = {\n    leftX: 0,\n    leftY: 0,\n    rightX: 0,\n    rightY: 0,\n  }\n  // // 边与水平线的夹角\n  const angleOfHorizontal = Math.atan((end.y - start.y) / (end.x - start.x))\n  // 边和两边点的夹角\n  const angleOfPoints = Math.atan(offset / verticalLength)\n  // 点到起点的距离\n  const len = Math.sqrt(verticalLength * verticalLength + offset * offset)\n  if (type === 'start') {\n    if (end.x >= start.x) {\n      pointPosition.leftX =\n        start.x + len * Math.sin(angleOfHorizontal + angleOfPoints)\n      pointPosition.leftY =\n        start.y - len * Math.cos(angleOfHorizontal + angleOfPoints)\n      pointPosition.rightX =\n        start.x - len * Math.sin(angleOfHorizontal - angleOfPoints)\n      pointPosition.rightY =\n        start.y + len * Math.cos(angleOfHorizontal - angleOfPoints)\n    } else {\n      pointPosition.leftX =\n        start.x - len * Math.sin(angleOfHorizontal + angleOfPoints)\n      pointPosition.leftY =\n        start.y + len * Math.cos(angleOfHorizontal + angleOfPoints)\n      pointPosition.rightX =\n        start.x + len * Math.sin(angleOfHorizontal - angleOfPoints)\n      pointPosition.rightY =\n        start.y - len * Math.cos(angleOfHorizontal - angleOfPoints)\n    }\n  } else if (type === 'end') {\n    if (end.x >= start.x) {\n      pointPosition.leftX =\n        end.x + len * Math.sin(angleOfHorizontal - angleOfPoints)\n      pointPosition.leftY =\n        end.y - len * Math.cos(angleOfHorizontal - angleOfPoints)\n      pointPosition.rightX =\n        end.x - len * Math.sin(angleOfHorizontal + angleOfPoints)\n      pointPosition.rightY =\n        end.y + len * Math.cos(angleOfHorizontal + angleOfPoints)\n    } else {\n      pointPosition.leftX =\n        end.x - len * Math.sin(angleOfHorizontal - angleOfPoints)\n      pointPosition.leftY =\n        end.y + len * Math.cos(angleOfHorizontal - angleOfPoints)\n      pointPosition.rightX =\n        end.x + len * Math.sin(angleOfHorizontal + angleOfPoints)\n      pointPosition.rightY =\n        end.y - len * Math.cos(angleOfHorizontal + angleOfPoints)\n    }\n  }\n  return pointPosition\n}\n", "import LogicFlow from '../LogicFlow'\nimport Point = LogicFlow.Point\n\n/**\n * 求两个线段交点入参：线段1端点: ab, 线段2端点： cd,\n * @param a\n * @param b\n * @param c\n * @param d\n * @return：有交点返回交点 Point，无交点返回false\n */\nexport const getCrossPointOfLine = (a: Point, b: Point, c: Point, d: Point) => {\n  /** 1 解线性方程组, 求线段交点. * */\n  // 如果分母为0 则平行或共线, 不相交\n  const denominator = (b.y - a.y) * (d.x - c.x) - (a.x - b.x) * (c.y - d.y)\n  if (denominator === 0) {\n    return false\n  }\n  // 线段所在直线的交点坐标 (x , y)\n  const x =\n    ((b.x - a.x) * (d.x - c.x) * (c.y - a.y) +\n      (b.y - a.y) * (d.x - c.x) * a.x -\n      (d.y - c.y) * (b.x - a.x) * c.x) /\n    denominator\n  const y =\n    -(\n      (b.y - a.y) * (d.y - c.y) * (c.x - a.x) +\n      (b.x - a.x) * (d.y - c.y) * a.y -\n      (d.x - c.x) * (b.y - a.y) * c.y\n    ) / denominator\n\n  /** 2 判断交点是否在两条线段上 * */\n  if (\n    // 交点在线段1上\n    (x - a.x) * (x - b.x) <= 0 &&\n    (y - a.y) * (y - b.y) <= 0 &&\n    // 且交点也在线段2上\n    (x - c.x) * (x - d.x) <= 0 &&\n    (y - c.y) * (y - d.y) <= 0\n  ) {\n    // 返回交点p\n    return {\n      x,\n      y,\n    }\n  }\n  // 否则不相交\n  return false\n}\n\n/* 判断一个点是否在线段中\n入参点：point, 线段起终点，start,end,\n返回值： 在线段中true，否则false\n*/\nexport const isInSegment = (point: Point, start: Point, end: Point) => {\n  const { x, y } = point\n  const { x: startX, y: startY } = start\n  const { x: endX, y: endY } = end\n  const k = (endY - startY) / (endX - startX)\n  const b = startY - k * startX\n  return (\n    x >= startX &&\n    x <= endX &&\n    y >= startY &&\n    y <= endY &&\n    Math.abs(y - k * x + b) < Number.EPSILON\n  )\n}\n", "import { forEach, pick } from 'lodash-es'\nimport { getNodeBBox, isInNode, distance, sampleCubic } from '.'\nimport LogicFlow from '../LogicFlow'\nimport { Options } from '../options'\nimport { SegmentDirection } from '../constant'\nimport { getVerticalPointOfLine } from '../algorithm'\nimport { getCrossPointOfLine, isInSegment } from '../algorithm/edge'\nimport {\n  Model,\n  BaseNodeModel,\n  BaseEdgeModel,\n  LineEdgeModel,\n  PolylineEdgeModel,\n  GraphModel,\n} from '../model'\n\nimport Point = LogicFlow.Point\nimport Direction = LogicFlow.Direction\nimport LineSegment = LogicFlow.LineSegment\nimport NodeData = LogicFlow.NodeData\nimport EdgeConfig = LogicFlow.EdgeConfig\nimport Position = LogicFlow.Position\nimport BoxBounds = Model.BoxBounds\n\ntype PolyPointMap = Record<string, Point>\ntype PolyPointLink = Record<string, string>\n\n/* 手动创建边时 edge -> edgeModel */\nexport const setupEdgeModel = (edge: EdgeConfig, graphModel: GraphModel) => {\n  let model: BaseEdgeModel\n  switch (edge.type) {\n    case 'line':\n      model = new LineEdgeModel(edge, graphModel)\n      break\n    case 'polyline':\n      model = new PolylineEdgeModel(edge, graphModel)\n      break\n    default:\n      model = new LineEdgeModel(edge, graphModel)\n      break\n  }\n  return model\n}\n\n/* 判断两个Bbox是否重合 */\nexport const isBboxOverLapping = (b1: BoxBounds, b2: BoxBounds): boolean =>\n  Math.abs(b1.centerX - b2.centerX) * 2 < b1.width + b2.width &&\n  Math.abs(b1.centerY - b2.centerY) * 2 < b1.height + b2.height\n\n/* 连接点去重，去掉x,y位置重复的点 */\nexport const filterRepeatPoints = (points: Point[]): Point[] => {\n  const result: Point[] = []\n  const pointsMap: Record<string, Point> = {}\n  points.forEach((p) => {\n    const id = `${p.x}-${p.y}`\n    p.id = id\n    pointsMap[id] = p\n  })\n  Object.keys(pointsMap).forEach((p) => {\n    result.push(pointsMap[p])\n  })\n  return result\n}\n\n/* 获取简单边:边之间除了起始点，只有1个中间点 */\nexport const getSimplePolyline = (sPoint: Point, tPoint: Point): Point[] => {\n  const points = [\n    sPoint,\n    {\n      x: sPoint.x,\n      y: tPoint.y,\n    },\n    tPoint,\n  ]\n  return filterRepeatPoints(points)\n}\n\n/* 扩展的bbox,保证起始点的下一个点一定在node的垂直方向，不会与线重合, offset是点与线的垂直距离 */\nexport const getExpandedBBox = (bbox: BoxBounds, offset: number): BoxBounds => {\n  if (bbox.width === 0 && bbox.height === 0) {\n    return bbox\n  }\n  return {\n    x: bbox.x,\n    y: bbox.y,\n    centerX: bbox.centerX,\n    centerY: bbox.centerY,\n    minX: bbox.minX - offset,\n    minY: bbox.minY - offset,\n    maxX: bbox.maxX + offset,\n    maxY: bbox.maxY + offset,\n    height: bbox.height + 2 * offset,\n    width: bbox.width + 2 * offset,\n  }\n}\n\n/* 判断点与中心点边的方向：是否水平，true水平，false垂直 */\nexport const pointDirection = (point: Point, bbox: BoxBounds): Direction => {\n  const dx = Math.abs(point.x - bbox.centerX)\n  const dy = Math.abs(point.y - bbox.centerY)\n  return dx / bbox.width > dy / bbox.height\n    ? SegmentDirection.HORIZONTAL\n    : SegmentDirection.VERTICAL\n}\n\n/* 获取扩展图形上的点，即起始终点相邻的点，上一个或者下一个节点 */\nexport const getExpandedBBoxPoint = (\n  expendBBox: BoxBounds,\n  bbox: BoxBounds,\n  point: Point,\n): Point => {\n  // https://github.com/didi/LogicFlow/issues/817\n  // 没有修复前传入的参数bbox实际是expendBBox\n  // 由于pointDirection使用的是dx / bbox.width > dy / bbox.height判定方向\n  // 此时的bbox.width是增加了offset后的宽度，bbox.height同理\n  // 这导致了部分极端情况(宽度很大或者高度很小)，计算出来的方向错误\n  const direction = pointDirection(point, bbox)\n  if (direction === SegmentDirection.HORIZONTAL) {\n    return {\n      x: point.x > expendBBox.centerX ? expendBBox.maxX : expendBBox.minX,\n      y: point.y,\n    }\n  }\n  return {\n    x: point.x,\n    y: point.y > expendBBox.centerY ? expendBBox.maxY : expendBBox.minY,\n  }\n}\n\n/* 获取包含2个图形的外层box */\nexport const mergeBBox = (b1: BoxBounds, b2: BoxBounds): BoxBounds => {\n  const minX = Math.min(b1.minX, b2.minX)\n  const minY = Math.min(b1.minY, b2.minY)\n  const maxX = Math.max(b1.maxX, b2.maxX)\n  const maxY = Math.max(b1.maxY, b2.maxY)\n\n  return {\n    x: (minX + maxX) / 2,\n    y: (minY + maxY) / 2,\n    centerX: (minX + maxX) / 2,\n    centerY: (minY + maxY) / 2,\n    minX,\n    minY,\n    maxX,\n    maxY,\n    height: maxY - minY,\n    width: maxX - minX,\n  }\n}\n\n/* 获取多个点的外层bbox\n * 这个函数的用处\n * 1、获取起始终点相邻点(expendBboxPoint)的bbox\n * 2、polylineEdge, bezierEdge，获取outline边框，这种情况传入offset\n */\nexport const getBBoxOfPoints = (\n  points: Point[] = [],\n  offset?: number,\n): BoxBounds => {\n  const xList: number[] = []\n  const yList: number[] = []\n  points.forEach((p) => {\n    xList.push(p.x)\n    yList.push(p.y)\n  })\n  const minX = Math.min(...xList)\n  const maxX = Math.max(...xList)\n  const minY = Math.min(...yList)\n  const maxY = Math.max(...yList)\n  let width = maxX - minX\n  let height = maxY - minY\n  if (offset) {\n    width += offset\n    height += offset\n  }\n  return {\n    centerX: (minX + maxX) / 2,\n    centerY: (minY + maxY) / 2,\n    maxX,\n    maxY,\n    minX,\n    minY,\n    x: (minX + maxX) / 2,\n    y: (minY + maxY) / 2,\n    height,\n    width,\n  }\n}\n/* 获取box四个角上的点 */\nexport const getPointsFromBBox = (\n  bbox: BoxBounds,\n): [Point, Point, Point, Point] => {\n  const { minX, minY, maxX, maxY } = bbox\n  return [\n    {\n      x: minX,\n      y: minY,\n    },\n    {\n      x: maxX,\n      y: minY,\n    },\n    {\n      x: maxX,\n      y: maxY,\n    },\n    {\n      x: minX,\n      y: maxY,\n    },\n  ]\n}\n/* 判断某一点是否在box中 */\nexport const isPointOutsideBBox = (point: Point, bbox: BoxBounds): boolean => {\n  const { x, y } = point\n  return x < bbox.minX || x > bbox.maxX || y < bbox.minY || y > bbox.maxY\n}\n\n/* 获取点的x方向上与box的交点 */\nexport const getBBoxXCrossPoints = (\n  bbox: BoxBounds,\n  x: number,\n): [Point, Point] | [] => {\n  if (x < bbox.minX || x > bbox.maxX) {\n    return []\n  }\n  return [\n    {\n      x,\n      y: bbox.minY,\n    },\n    {\n      x,\n      y: bbox.maxY,\n    },\n  ]\n}\n\n/* 获取点的y方向上与box的交点 */\nexport const getBBoxYCrossPoints = (\n  bbox: BoxBounds,\n  y: number,\n): [Point, Point] | [] => {\n  if (y < bbox.minY || y > bbox.maxY) {\n    return []\n  }\n  return [\n    {\n      x: bbox.minX,\n      y,\n    },\n    {\n      x: bbox.maxX,\n      y,\n    },\n  ]\n}\n\n/* 获取点的x,y方向上与box的交点 */\nexport const getBBoxCrossPointsByPoint = (\n  bbox: BoxBounds,\n  point: Point,\n): [Point, Point, Point, Point] | [Point, Point] | [] => [\n  ...getBBoxXCrossPoints(bbox, point.x),\n  ...getBBoxYCrossPoints(bbox, point.y),\n]\n\n/* 计算两点之间的预测距离(非直线距离) */\nexport const estimateDistance = (p1: Point, p2: Point): number =>\n  Math.abs(p1.x - p2.x) + Math.abs(p1.y - p2.y)\n\n/* 减少点别重复计算进距离的误差 */\nexport const costByPoints = (p: Point, points: Point[]): number => {\n  const offset = -2\n  let result = 0\n  points.forEach((point) => {\n    if (point) {\n      if (p.x === point.x) {\n        result += offset\n      }\n      if (p.y === point.y) {\n        result += offset\n      }\n    }\n  })\n  return result\n}\n\n/* 预估距离 */\nexport const heuristicCostEstimate = (\n  p: Point,\n  ps: Point,\n  pt: Point,\n  source?: Point,\n  target?: Point,\n): number =>\n  estimateDistance(p, ps) +\n  estimateDistance(p, pt) +\n  costByPoints(p, [ps, pt, source!, target!])\n\n/* 重建路径，根据cameFrom属性计算出从起始到结束的路径 */\nexport const rebuildPath = (\n  pathPoints: Point[],\n  pointById: PolyPointMap,\n  cameFrom: PolyPointLink,\n  currentId: string,\n  iterator?: number,\n): void => {\n  if (!iterator) {\n    iterator = 0\n  }\n  pathPoints.unshift(pointById[currentId])\n  if (\n    cameFrom[currentId] &&\n    cameFrom[currentId] !== currentId &&\n    iterator <= 100\n  ) {\n    rebuildPath(\n      pathPoints,\n      pointById,\n      cameFrom,\n      cameFrom[currentId],\n      iterator + 1,\n    )\n  }\n}\n\n/* 把计算完毕的点从开放列表中删除 */\nexport const removeClosePointFromOpenList = (\n  arr: Point[],\n  item: Point,\n): void => {\n  const index = arr.indexOf(item)\n  if (index > -1) {\n    arr.splice(index, 1)\n  }\n}\n\n/* 通过向量判断线段之间是否是相交的 */\nexport const isSegmentsIntersected = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n): boolean => {\n  const s1x = p1.x - p0.x\n  const s1y = p1.y - p0.y\n  const s2x = p3.x - p2.x\n  const s2y = p3.y - p2.y\n\n  const s =\n    (-s1y * (p0.x - p2.x) + s1x * (p0.y - p2.y)) / (-s2x * s1y + s1x * s2y)\n  const t =\n    (s2x * (p0.y - p2.y) - s2y * (p0.x - p2.x)) / (-s2x * s1y + s1x * s2y)\n\n  return s >= 0 && s <= 1 && t >= 0 && t <= 1\n}\n\n/* 判断线段与bbox是否是相交的，保证节点之间的边不会穿过节点自身 */\nexport const isSegmentCrossingBBox = (\n  p1: Point,\n  p2: Point,\n  bbox: BoxBounds,\n): boolean => {\n  if (bbox.width === 0 && bbox.height === 0) {\n    return false\n  }\n  const [pa, pb, pc, pd] = getPointsFromBBox(bbox)\n  return (\n    isSegmentsIntersected(p1, p2, pa, pb) ||\n    isSegmentsIntersected(p1, p2, pa, pd) ||\n    isSegmentsIntersected(p1, p2, pb, pc) ||\n    isSegmentsIntersected(p1, p2, pc, pd)\n  )\n}\n\n/* 获取下一个相邻的点 */\nexport const getNextNeighborPoints = (\n  points: Point[],\n  point: Point,\n  bbox1: BoxBounds,\n  bbox2: BoxBounds,\n): Point[] => {\n  const neighbors: Point[] = []\n  points.forEach((p) => {\n    if (p !== point) {\n      if (p.x === point.x || p.y === point.y) {\n        if (\n          !isSegmentCrossingBBox(p, point, bbox1) &&\n          !isSegmentCrossingBBox(p, point, bbox2)\n        ) {\n          neighbors.push(p)\n        }\n      }\n    }\n  })\n  return filterRepeatPoints(neighbors)\n}\n\n/* 路径查找,Astart查找+曼哈顿距离\n * 算法wiki:https://zh.wikipedia.org/wiki/A*%E6%90%9C%E5%B0%8B%E6%BC%94%E7%AE%97%E6%B3%95\n * 方法无法复用，且调用了很多polyline相关的方法，暂不抽离到src/algorithm中\n */\nexport const pathFinder = (\n  points: Point[],\n  start: Point,\n  goal: Point,\n  sBBox: BoxBounds,\n  tBBox: BoxBounds,\n  os: Point,\n  ot: Point,\n): Point[] => {\n  // 定义已经遍历过的点\n  const closedSet: Point[] = []\n  // 定义需要遍历的店\n  const openSet = [start]\n  // 定义节点的上一个节点\n  const cameFrom: PolyPointLink = {}\n\n  const gScore: {\n    [key: string]: number\n  } = {}\n\n  const fScore: {\n    [key: string]: number\n  } = {}\n\n  if (start.id) {\n    gScore[start.id] = 0\n    fScore[start.id] = heuristicCostEstimate(start, goal, start)\n  }\n\n  const pointById: PolyPointMap = {}\n\n  points.forEach((p) => {\n    if (p.id) {\n      pointById[p.id] = p\n    }\n  })\n\n  while (openSet.length) {\n    let current: Point | undefined\n    let lowestFScore = Infinity\n    openSet.forEach((p: Point) => {\n      if (p.id && fScore[p.id] < lowestFScore) {\n        lowestFScore = fScore[p.id]\n        current = p\n      }\n    })\n\n    if (current === goal && goal.id) {\n      const pathPoints: Point[] = []\n      rebuildPath(pathPoints, pointById, cameFrom, goal.id)\n      return pathPoints\n    }\n\n    if (!current) {\n      return [start, goal]\n    }\n\n    removeClosePointFromOpenList(openSet, current)\n    closedSet.push(current)\n\n    getNextNeighborPoints(points, current, sBBox, tBBox).forEach((neighbor) => {\n      if (closedSet.indexOf(neighbor) !== -1) {\n        return\n      }\n\n      if (openSet.indexOf(neighbor) === -1) {\n        openSet.push(neighbor)\n      }\n\n      if (current?.id && neighbor?.id) {\n        const tentativeGScore =\n          fScore[current.id] + estimateDistance(current, neighbor)\n        if (gScore[neighbor.id] && tentativeGScore >= gScore[neighbor.id]) {\n          return\n        }\n\n        cameFrom[neighbor.id] = current.id\n        gScore[neighbor.id] = tentativeGScore\n        fScore[neighbor.id] =\n          gScore[neighbor.id] +\n          heuristicCostEstimate(neighbor, goal, start, os, ot)\n      }\n    })\n  }\n  return [start, goal]\n}\n\nexport const getBoxByOriginNode = (node: BaseNodeModel): BoxBounds => {\n  return getNodeBBox(node)\n}\n/* 保证一条直线上只有2个节点： 删除x/y相同的中间节点 */\nexport const pointFilter = (points: Point[]): Point[] => {\n  let i = 1\n  while (i < points.length - 1) {\n    const pre = points[i - 1]\n    const current = points[i]\n    const next = points[i + 1]\n    if (\n      (pre.x === current.x && current.x === next.x) ||\n      (pre.y === current.y && current.y === next.y)\n    ) {\n      points.splice(i, 1)\n    } else {\n      i++\n    }\n  }\n  return points\n}\n\n/* 计算折线点 */\nexport const getPolylinePoints = (\n  start: Point,\n  end: Point,\n  sNode: BaseNodeModel,\n  tNode: BaseNodeModel,\n  offset: number,\n): Point[] => {\n  const sBBox = getBoxByOriginNode(sNode)\n  const tBBox = getBoxByOriginNode(tNode)\n  const sxBBox = getExpandedBBox(sBBox, offset)\n  const txBBox = getExpandedBBox(tBBox, offset)\n  const sPoint = getExpandedBBoxPoint(sxBBox, sBBox, start)\n  const tPoint = getExpandedBBoxPoint(txBBox, tBBox, end)\n  // 当加上offset后的bbox有重合，直接简单计算节点\n  if (isBboxOverLapping(sxBBox, txBBox)) {\n    const points = getSimplePoints(start, end, sPoint, tPoint)\n    return [start, sPoint, ...points, tPoint, end]\n  }\n  const lineBBox = getBBoxOfPoints([sPoint, tPoint])\n  const sMixBBox = mergeBBox(sxBBox, lineBBox)\n  const tMixBBox = mergeBBox(txBBox, lineBBox)\n  let connectPoints: Point[] = []\n  connectPoints = connectPoints.concat(getPointsFromBBox(sMixBBox))\n  connectPoints = connectPoints.concat(getPointsFromBBox(tMixBBox))\n  // 中心点\n  const centerPoint = {\n    x: (start.x + end.x) / 2,\n    y: (start.y + end.y) / 2,\n  }\n  // 获取中心点与其他box的交点\n  ;[lineBBox, sMixBBox, tMixBBox].forEach((bbox: BoxBounds) => {\n    connectPoints = connectPoints.concat(\n      getBBoxCrossPointsByPoint(bbox, centerPoint).filter(\n        (p) => isPointOutsideBBox(p, sxBBox) && isPointOutsideBBox(p, txBBox),\n      ),\n    )\n  })\n  // 与起止终点相邻的两的，在x，y方向上的交点，这四个点组成了矩形 。。。解释图中在不中这两个点，\n  ;[\n    {\n      x: sPoint.x,\n      y: tPoint.y,\n    },\n    {\n      x: tPoint.x,\n      y: sPoint.y,\n    },\n  ].forEach((p) => {\n    if (isPointOutsideBBox(p, sxBBox) && isPointOutsideBBox(p, txBBox)) {\n      connectPoints.push(p)\n    }\n  })\n  connectPoints.unshift(sPoint)\n  connectPoints.push(tPoint)\n  connectPoints = filterRepeatPoints(connectPoints)\n  // 路径查找-最关键的步骤\n  let pathPoints = pathFinder(\n    connectPoints,\n    sPoint,\n    tPoint,\n    sBBox,\n    tBBox,\n    start,\n    end,\n  )\n  pathPoints.unshift(start)\n  pathPoints.push(end)\n  // 删除一条直线上的多余节点\n  if (pathPoints.length > 2) {\n    pathPoints = pointFilter(pathPoints)\n  }\n  return filterRepeatPoints(pathPoints)\n}\n\n/**\n * 获取折线中最长的一个线\n * @param pointsList 多个点组成的数组\n */\nexport const getLongestEdge = (pointsList: Point[]): [Point, Point] => {\n  let points\n  if (pointsList.length === 1) {\n    points = [pointsList[0], pointsList[0]]\n  } else if (pointsList.length >= 2) {\n    let point1 = pointsList[0]\n    let point2 = pointsList[1]\n    let edgeLength = distance(point1.x, point1.y, point2.x, point2.y)\n    for (let i = 1; i < pointsList.length - 1; i++) {\n      const newPoint1 = pointsList[i]\n      const newPoint2 = pointsList[i + 1]\n      const newEdgeLength = distance(\n        newPoint1.x,\n        newPoint1.y,\n        newPoint2.x,\n        newPoint2.y,\n      )\n      if (newEdgeLength > edgeLength) {\n        edgeLength = newEdgeLength\n        point1 = newPoint1\n        point2 = newPoint2\n      }\n    }\n    points = [point1, point2]\n  }\n  return points\n}\n\n/* 线段是否在节点内部，被包含了 */\nexport const isSegmentsInNode = (\n  start: Point,\n  end: Point,\n  node: BaseNodeModel,\n): boolean => {\n  const startInNode = isInNode(start, node)\n  const endInNode = isInNode(end, node)\n  return startInNode && endInNode\n}\n\n/* 线段是否与节点相交 */\nexport const isSegmentsCrossNode = (\n  start: Point,\n  end: Point,\n  node: BaseNodeModel,\n): boolean => {\n  const startInNode = isInNode(start, node)\n  const endInNode = isInNode(end, node)\n  // bothInNode，线段两个端点都在节点内\n  const bothInNode = startInNode && endInNode\n  // cross，线段有端点在节点内\n  const inNode = startInNode || endInNode\n  // 有且只有一个点在节点内部\n  return !bothInNode && inNode\n}\n\n/* 获取线段在矩形内部的交点\n */\nexport const getCrossPointInRect = (\n  start: Point,\n  end: Point,\n  node: BaseNodeModel,\n): Point => {\n  let point\n  let crossSegments: [Point, Point] | undefined = undefined\n  const nodeBox = getNodeBBox(node)\n  const points = getPointsFromBBox(nodeBox)\n  for (let i = 0; i < points.length; i++) {\n    const isCross = isSegmentsIntersected(\n      start,\n      end,\n      points[i],\n      points[(i + 1) % points.length],\n    )\n    if (isCross) {\n      crossSegments = [points[i], points[(i + 1) % points.length]]\n    }\n  }\n  if (crossSegments) {\n    point = getCrossPointOfLine(start, end, crossSegments[0], crossSegments[1])\n  }\n  return point\n}\n/* 判断线段的方向 */\nexport const segmentDirection = (\n  start: Point,\n  end: Point,\n): Direction | undefined => {\n  let direction: Direction | undefined = undefined\n  if (start.x === end.x) {\n    direction = SegmentDirection.VERTICAL\n  } else if (start.y === end.y) {\n    direction = SegmentDirection.HORIZONTAL\n  }\n  return direction\n}\n\nexport const points2PointsList = (points: string): Point[] => {\n  const currentPositionList = points.split(' ')\n  const pointsList: LogicFlow.Position[] = []\n  currentPositionList &&\n    currentPositionList.forEach((item) => {\n      const [x, y] = item.split(',')\n      pointsList.push({\n        x: Number(x),\n        y: Number(y),\n      })\n    })\n  return pointsList\n}\n\nexport const getSimplePoints = (\n  start: Point,\n  end: Point,\n  sPoint: Point,\n  tPoint: Point,\n): Point[] => {\n  const points: LogicFlow.Position[] = []\n  // start,sPoint的方向，水平或者垂直，即路径第一条线段的方向\n  const startDirection = segmentDirection(start, sPoint)!\n  // end,tPoint的方向，水平或者垂直，即路径最后一条条线段的方向\n  const endDirection = segmentDirection(end, tPoint)!\n  // 根据两条线段的方向作了计算，调整线段经验所得，非严格最优计算，能保证不出现折线\n  // 方向相同，添加两个点，两条平行线垂直距离一半的两个端点\n  if (startDirection === endDirection) {\n    if (start.y === sPoint.y) {\n      points.push({\n        x: sPoint.x,\n        y: (sPoint.y + tPoint.y) / 2,\n      })\n      points.push({\n        x: tPoint.x,\n        y: (sPoint.y + tPoint.y) / 2,\n      })\n    } else {\n      points.push({\n        x: (sPoint.x + tPoint.x) / 2,\n        y: sPoint.y,\n      })\n      points.push({\n        x: (sPoint.x + tPoint.x) / 2,\n        y: tPoint.y,\n      })\n    }\n  } else {\n    // 方向不同，添加一个点，保证不在当前线段上(会出现重合)，且不能有折线\n    let point = {\n      x: sPoint.x,\n      y: tPoint.y,\n    }\n    const inStart = isInSegment(point, start, sPoint)\n    const inEnd = isInSegment(point, end, tPoint)\n    if (inStart || inEnd) {\n      point = {\n        x: tPoint.x,\n        y: sPoint.y,\n      }\n    } else {\n      const onStart = isOnLine(point, start, sPoint)\n      const onEnd = isOnLine(point, end, tPoint)\n      if (onStart && onEnd) {\n        point = {\n          x: tPoint.x,\n          y: sPoint.y,\n        }\n      }\n    }\n    points.push(point)\n  }\n  return points\n}\n\nconst isOnLine = (point: Point, start: Point, end: Point) =>\n  (point.x === start.x && point.x === end.x) ||\n  (point.y === start.y && point.y === end.y)\n\n/* 求字符串的字节长度 */\nexport const getBytesLength = (word: string): number => {\n  if (!word) {\n    return 0\n  }\n  let totalLength = 0\n  for (let i = 0; i < word.length; i++) {\n    const c = word.charCodeAt(i)\n    if (word.match(/[A-Z]/)) {\n      totalLength += 1.5\n    } else if ((c >= 0x0001 && c <= 0x007e) || (c >= 0xff60 && c <= 0xff9f)) {\n      totalLength += 1\n    } else {\n      totalLength += 2\n    }\n  }\n  return totalLength\n}\n\n/**\n * Uses canvas.measureText to compute\n * and return the width of the given text of given font in pixels.\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor\n * that text is to be rendered with (e.g. \"bold 14px verdana\").\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nlet canvas: HTMLCanvasElement | undefined = undefined\nexport const getTextWidth = (text: string, font: string) => {\n  if (!canvas) {\n    canvas = document.createElement('canvas')\n  }\n  const context = canvas.getContext('2d')\n  context!.font = font\n  const metrics = context!.measureText(text)\n  return metrics.width\n}\n\ntype AppendAttributesType = {\n  d: string\n  fill: string\n  stroke: string\n  strokeWidth: number\n  strokeDasharray: string\n}\n// 扩大边可点区域，获取边append的信息\nexport const getAppendAttributes = (\n  appendInfo: Record<'start' | 'end', Point>,\n): AppendAttributesType => {\n  const { start, end } = appendInfo\n  let d: string\n  if (start.x === end.x && start.y === end.y) {\n    // 拖拽过程中会出现起终点重合的情况，这时候append无法计算\n    d = ''\n  } else {\n    const config = {\n      start,\n      end,\n      offset: 10,\n      verticalLength: 5,\n    }\n    const startPosition = getVerticalPointOfLine({\n      ...config,\n      type: 'start',\n    })\n    const endPosition = getVerticalPointOfLine({\n      ...config,\n      type: 'end',\n    })\n    d = `M${startPosition.leftX} ${startPosition.leftY}\n    L${startPosition.rightX} ${startPosition.rightY}\n    L${endPosition.rightX} ${endPosition.rightY}\n    L${endPosition.leftX} ${endPosition.leftY} z`\n  }\n  return {\n    d,\n    fill: 'transparent',\n    stroke: 'transparent',\n    strokeWidth: 1,\n    strokeDasharray: '4, 4',\n  }\n}\nexport type IBezierControls = {\n  sNext: Point\n  ePre: Point\n}\n\n// bezier曲线\nexport const getBezierControlPoints = ({\n  start,\n  end,\n  sourceNode,\n  targetNode,\n  offset,\n}: {\n  start: Point\n  end: Point\n  sourceNode: BaseNodeModel\n  targetNode: BaseNodeModel\n  offset: number\n}): IBezierControls => {\n  const sBBox = getNodeBBox(sourceNode)\n  const tBBox = getNodeBBox(targetNode)\n  const sExpendBBox = getExpandedBBox(sBBox, offset)\n  const tExpendBBox = getExpandedBBox(tBBox, offset)\n  const sNext = getExpandedBBoxPoint(sExpendBBox, sBBox, start)\n  const ePre = getExpandedBBoxPoint(tExpendBBox, tBBox, end)\n  return {\n    sNext,\n    ePre,\n  }\n}\n\nexport type IBezierPoints = {\n  start: Point\n  sNext: Point\n  ePre: Point\n  end: Point\n}\n// 根据bezier曲线path求出Points\nexport const getBezierPoints = (path: string): [Point, Point, Point, Point] => {\n  const list = path.replace(/M/g, '').replace(/C/g, ',').split(',')\n  const start = getBezierPoint(list[0])\n  const sNext = getBezierPoint(list[1])\n  const ePre = getBezierPoint(list[2])\n  const end = getBezierPoint(list[3])\n  return [start, sNext, ePre, end]\n}\n// 根据bezier曲线path求出Point坐标\nconst getBezierPoint = (positionStr: string): Point => {\n  const [x, y] = positionStr.replace(/(^\\s*)/g, '').split(' ')\n  return {\n    x: +x,\n    y: +y,\n  }\n}\n// 根据bezier曲线path求出结束切线的两点坐标\nexport const getEndTangent = (\n  pointsList: Point[],\n  offset: number,\n): [Point, Point] => {\n  // const bezierPoints = getBezierPoints(path)\n  const [p1, cp1, cp2, p2] = pointsList\n  const start = sampleCubic(p1, cp1, cp2, p2, offset)\n  return [start, pointsList[3]]\n}\n\n/**\n * 获取移动边后，文本位置距离边上的最近的一点\n * @param point 边上文本的位置\n * @param points 边的各个拐点\n */\nexport const getClosestPointOfPolyline = (\n  point: Point,\n  points: string,\n): Point => {\n  const { x, y } = point\n  const pointsPosition = points2PointsList(points)\n  let minDistance = Number.MAX_SAFE_INTEGER\n  let crossPoint: Point\n  const segments: LineSegment[] = []\n  for (let i = 0; i < pointsPosition.length; i++) {\n    segments.push({\n      start: pointsPosition[i],\n      end: pointsPosition[(i + 1) % pointsPosition.length],\n    })\n  }\n  segments.forEach((item) => {\n    const { start, end } = item\n    // 若线段垂直，则crossPoint的横坐标与线段一致\n    if (start.x === end.x) {\n      const pointXY = {\n        x: start.x,\n        y,\n      }\n      const inSegment = isInSegment(pointXY, start, end)\n      if (inSegment) {\n        const currentDistance = Math.abs(start.x - x)\n        if (currentDistance < minDistance) {\n          minDistance = currentDistance\n          crossPoint = pointXY\n        }\n      }\n    } else if (start.y === end.y) {\n      const pointXY = {\n        x,\n        y: start.y,\n      }\n      const inSegment = isInSegment(pointXY, start, end)\n      if (inSegment) {\n        const currentDistance = Math.abs(start.y - y)\n        if (currentDistance < minDistance) {\n          minDistance = currentDistance\n          crossPoint = pointXY\n        }\n      }\n    }\n  })\n  // 边界：只有一条线段时，沿线段移动节点，当文本超出边后，文本没有可供参考的线段\n  if (!crossPoint!) {\n    const { start, end } = segments[0]\n    crossPoint = {\n      x: start.x + (end.x - start.x) / 2,\n      y: start.y + (end.y - start.y) / 2,\n    }\n  }\n  return crossPoint\n}\n\n// 规范边初始化数据\nexport const pickEdgeConfig = (data: EdgeConfig): EdgeConfig =>\n  pick(data, [\n    'id',\n    'type',\n    'sourceNodeId',\n    'sourceAnchorId',\n    'targetNodeId',\n    'targetAnchorId',\n    'pointsList',\n    'startPoint',\n    'endPoint',\n    'properties',\n  ])\n\nexport const twoPointDistance = (source: Position, target: Position) => {\n  // fix: 修复坐标存在负值时计算错误的问题。\n  // const source = {\n  //   x: p1.x,\n  //   y: Math.abs(p1.y),\n  // }\n  // const target = {\n  //   x: Math.abs(p2.x),\n  //   y: Math.abs(p2.y),\n  // }\n  return Math.sqrt((source.x - target.x) ** 2 + (source.y - target.y) ** 2)\n}\n\n/**\n * 包装边生成函数\n * @param graphModel graph model\n * @param generator 用户自定义的边生成函数\n */\nexport function createEdgeGenerator(\n  graphModel: GraphModel,\n  generator?: Options.EdgeGeneratorType | unknown,\n): any {\n  // TODO: 定义返回值类型，保证 GraphModel 中类型的正确性\n  if (typeof generator !== 'function') {\n    return (\n      _sourceNode: NodeData,\n      _targetNode: NodeData,\n      currentEdge?: EdgeConfig,\n    ) => Object.assign({ type: graphModel.edgeType }, currentEdge)\n  }\n  return (\n    sourceNode: NodeData,\n    targetNode: NodeData,\n    currentEdge?: EdgeConfig,\n  ) => {\n    const result = generator(sourceNode, targetNode, currentEdge)\n    // 无结果使用默认类型\n    if (!result) return { type: graphModel.edgeType }\n    if (typeof result === 'string') {\n      return Object.assign({}, currentEdge, { type: result })\n    }\n    return Object.assign({ type: result }, currentEdge)\n  }\n}\n\n// 获取 Svg 标签文案高度，自动换行\nexport type IGetSvgTextSizeParams = {\n  rows: string[]\n  rowsLength: number\n  fontSize: number\n}\nexport const getSvgTextSize = ({\n  rows,\n  rowsLength,\n  fontSize,\n}: IGetSvgTextSizeParams): LogicFlow.RectSize => {\n  let longestBytes = 0\n  forEach(rows, (row) => {\n    const rowBytesLength = getBytesLength(row)\n    longestBytes = rowBytesLength > longestBytes ? rowBytesLength : longestBytes\n  })\n\n  // 背景框宽度，最长一行字节数/2 * fontsize + 2\n  // 背景框宽度， 行数 * fontsize + 2\n  return {\n    width: Math.ceil(longestBytes / 2) * fontSize + fontSize / 4,\n    height: rowsLength * (fontSize + 2) + fontSize / 4,\n  }\n}\n", "import LogicFlow from '../LogicFlow'\nimport PointTuple = LogicFlow.PointTuple\n\nexport function snapToGrid(point: number, gridSize: number) {\n  // 保证 x, y 的值为 gridSize 的整数倍\n  return gridSize * Math.round(point / gridSize) || point\n}\n\n// 获取节点偏移时，产生的偏移量。当节点基于gridSize进行了偏移后，\n// 节点上的文本可以基于此方法移动对应的距离来保持与节点相对位置不变。\nexport function getGridOffset(distance: number, gridSize: number) {\n  return distance % gridSize\n}\n\n/**\n * 多边形设置 points 后，坐标平移至原点 并 根据 width、height 缩放\n * @param points\n * @param width\n * @param height\n */\nexport function normalizePolygon(\n  points?: PointTuple[],\n  width?: number,\n  height?: number,\n): PointTuple[] {\n  if (!points) return []\n\n  // 计算边界框\n  const minX = Math.min(...points.map((p) => p[0]))\n  const maxX = Math.max(...points.map((p) => p[0]))\n  const minY = Math.min(...points.map((p) => p[1]))\n  const maxY = Math.max(...points.map((p) => p[1]))\n\n  // 平移至原点\n  const dx = -minX\n  const dy = -minY\n  const translatedPoints: PointTuple[] = points.map(([x, y]) => [\n    x + dx,\n    y + dy,\n  ])\n\n  // 计算边界框的宽度和高度\n  const bboxWidth = maxX - minX\n  const bboxHeight = maxY - minY\n\n  // 计算缩放因子\n  const scaleX = width ? width / bboxWidth : 1\n  const scaleY = height ? height / bboxHeight : 1\n  const scaleFactor = Math.min(scaleX, scaleY)\n\n  // 缩放顶点\n  return translatedPoints.map(([x, y]) => [x * scaleFactor, y * scaleFactor])\n}\n", "import LogicFlow from '..'\nimport { EditConfigModel } from 'src/model'\n\nimport PointTuple = LogicFlow.PointTuple\n\n/**\n * 判断一个点是否在指定区域\n * @param point 当前点\n * @param leftTopPoint 区域左上角点\n * @param rightBottomPoint 区域的右下角点\n */\nexport const isPointInArea = (\n  [x, y]: PointTuple,\n  [leftTopX, leftTopY]: PointTuple,\n  [rightBottomX, rightBottomY]: PointTuple,\n): boolean =>\n  x > leftTopX && x < rightBottomX && y > leftTopY && y < rightBottomY\n\n/**\n * 判断鼠标点击选中元素的时候，是否为多选\n */\nexport const isMultipleSelect = (\n  e: MouseEvent,\n  editConfigModel: EditConfigModel,\n): boolean => {\n  const { multipleSelectKey } = editConfigModel\n  let isMultiple = false\n  switch (multipleSelectKey) {\n    case 'meta':\n      isMultiple = e.metaKey\n      break\n    case 'alt':\n      isMultiple = e.altKey\n      break\n    case 'shift':\n      isMultiple = e.shiftKey\n      break\n    case 'ctrl':\n      isMultiple = e.ctrlKey // Mac上ctrl + 点击节点会触发上下文菜单，所以ctrl尽量用在非Mac系统\n      break\n    default:\n      isMultiple = false\n      break\n  }\n  return isMultiple\n}\n", "function isVector(a1: any, a2: any): boolean {\n  return !!(a1 instanceof Vector && a2 instanceof Vector)\n}\n\nclass Base extends Array<number> {\n  x: number\n  y: number\n  z: number\n\n  constructor(x: number, y: number, z: number) {\n    super(3)\n    this[0] = x\n    this[1] = y\n    this[2] = z\n    this.x = x\n    this.y = y\n    this.z = z\n    Object.setPrototypeOf(this, Base.prototype)\n  }\n\n  add(v1: Vector | Point): Vector | Point {\n    if (isVector(this, v1)) {\n      return new Vector(this.x + v1.x, this.y + v1.y)\n    }\n    const z = this.z + v1.z\n    return new Point((this.x + v1.x) / z, (this.y + v1.y) / z)\n  }\n\n  subtract(v1: Vector | Point): Vector | Point {\n    if (isVector(this, v1)) {\n      return new Vector(this.x - v1.x, this.y - v1.y)\n    }\n    const z = this.z - v1.z\n    return z === 0\n      ? new Vector(this.x - v1.x, this.y - v1.y)\n      : new Point((this.x - v1.x) / z, (this.y - v1.y) / z)\n  }\n}\n\nclass Vector extends Base {\n  constructor(x: number, y: number, z?: number) {\n    super(x, y, z ?? 0)\n    Object.setPrototypeOf(this, Vector.prototype)\n  }\n\n  toString(): string {\n    return 'Vector'\n  }\n\n  dot(v1: Vector) {\n    return v1.reduce((prev, cur, index) => prev + cur * this[index])\n  }\n\n  cross(v1: Vector) {\n    return new Vector(\n      this.y * v1.z - this.z * v1.y,\n      this.z * v1.x - this.x * v1.z,\n      this.x * v1.y - this.y * v1.x,\n    )\n  }\n\n  getLength() {\n    return Math.hypot(this.x, this.y)\n  }\n\n  normalize() {\n    const len = this.getLength()\n    return new Vector(this.x / len, this.y / len)\n  }\n\n  crossZ(v1: Vector) {\n    return this.x * v1.y - this.y * v1.x\n  }\n\n  angle(v1: Vector) {\n    const negative = this.crossZ(v1)\n    const r = Math.acos(this.normalize().dot(v1.normalize()))\n    return negative >= 0 ? r : -r\n  }\n}\n\nclass Point extends Base {\n  constructor(x: number, y: number) {\n    super(x, y, 1)\n    Object.setPrototypeOf(this, Point.prototype)\n  }\n\n  toString(): string {\n    return 'Point'\n  }\n}\n\nexport { Vector, Point }\n", "import { Vector, Point } from './vector'\n\nexport class Matrix extends Array {\n  rows: number\n  columns: number\n\n  constructor(...vectors: any[]) {\n    super(vectors.length)\n    this.fill(new Array(3))\n    vectors.forEach((v: any, index: number) => {\n      this[index] = v\n    })\n    this.columns = vectors[0].length\n    this.rows = vectors.length\n    Object.setPrototypeOf(this, Matrix.prototype)\n  }\n\n  getRow(index: number) {\n    return this[index]\n  }\n\n  getColumn(index: number) {\n    return [...this.map((row: Vector) => row[index])]\n  }\n\n  // 转置\n  transpose() {\n    const vectors: any[] = []\n    for (let i = 0; i < this.columns; i++) {\n      vectors.push(this.getColumn(i))\n    }\n    return new Matrix(...vectors)\n  }\n\n  // 叉乘\n  cross(m1: Matrix) {\n    const arr = new Array(this.rows).fill('').map((): any => [])\n    if (this.columns === m1.rows) {\n      for (let i = 0; i < this.rows; i++) {\n        const row = this.getRow(i)\n        for (let j = 0; j < m1.columns; j++) {\n          const column = m1.getColumn(j)\n          // eslint-disable-next-line max-len\n          arr[i][j] = row.reduce(\n            (prev: number, r: number, index: number) =>\n              prev + r * column[index],\n            0,\n          )\n        }\n      }\n    }\n    return new Matrix(...arr)\n  }\n\n  // 返回二维坐标（降维）\n  to2D() {\n    return this.map((item: any) => [item[0], item[1]])\n  }\n\n  toPoints() {\n    return this.map((item: any) => new Point(item[0], item[1]))\n  }\n\n  toString(): string {\n    const [a, b] = this[0]\n    const [c, d] = this[1]\n    const [e, f] = this[2]\n    return `matrix(${a} ${b} ${c} ${d} ${e} ${f})`\n  }\n\n  translate(tx: number, ty: number): Matrix {\n    return this.cross(new TranslateMatrix(tx, ty))\n  }\n\n  rotate(angle: number): Matrix {\n    return this.cross(new RotateMatrix(angle))\n  }\n\n  scale(sx: number, sy: number): Matrix {\n    return this.cross(new ScaleMatrix(sx, sy))\n  }\n}\n\nexport class RotateMatrix extends Matrix {\n  constructor(theta: number) {\n    super(\n      new Vector(+Math.cos(theta).toFixed(2), +Math.sin(theta).toFixed(2), 0),\n      new Vector(-Math.sin(theta).toFixed(2), +Math.cos(theta).toFixed(2), 0),\n      new Vector(0, 0, 1),\n    )\n    Object.setPrototypeOf(this, RotateMatrix.prototype)\n  }\n\n  inverse() {\n    return this.transpose()\n  }\n}\n\nexport class ScaleMatrix extends Matrix {\n  private sx: number\n  private sy: number\n\n  constructor(sx: number, sy: number) {\n    super(new Vector(sx, 0, 0), new Vector(0, sy, 0), new Vector(0, 0, 1))\n    this.sx = sx\n    this.sy = sy\n    Object.setPrototypeOf(this, ScaleMatrix.prototype)\n  }\n\n  inverse() {\n    return new ScaleMatrix(1 / this.sx, 1 / this.sy)\n  }\n}\n\nexport class TranslateMatrix extends Matrix {\n  private tx: number\n  private ty: number\n\n  constructor(tx: number, ty: number) {\n    super(new Vector(1, 0, 0), new Vector(0, 1, 0), new Vector(tx, ty, 1))\n    this.tx = tx\n    this.ty = ty\n    Object.setPrototypeOf(this, TranslateMatrix.prototype)\n  }\n\n  inverse() {\n    return new TranslateMatrix(-this.tx, -this.ty)\n  }\n}\n", "import {\n  action,\n  observable,\n  computed,\n  toJS,\n  isObservable,\n  configure,\n  reaction,\n  IReactionDisposer,\n} from 'mobx'\n\nconfigure({ isolateGlobalState: true })\n\nexport {\n  action,\n  observable,\n  computed,\n  isObservable,\n  toJS,\n  configure,\n  reaction,\n  IReactionDisposer,\n}\n", "import { pick } from 'lodash-es'\nimport { createElement as h } from 'preact/compat'\nimport { getBytesLength } from './edge'\nimport LogicFlow from '../LogicFlow'\nimport {\n  GraphModel,\n  Model,\n  BaseNodeModel,\n  // CircleNodeModel,\n  RectNodeModel,\n  EllipseNodeModel,\n  PolygonNodeModel,\n} from '../model'\nimport { SegmentDirection } from '../constant'\nimport { isInSegment } from '../algorithm/edge'\n\nimport Point = LogicFlow.Point\nimport Direction = LogicFlow.Direction\nimport NodeConfig = LogicFlow.NodeConfig\nimport LineSegment = LogicFlow.LineSegment\nimport AnchorInfo = Model.AnchorInfo\n\n/* 获取所有锚点 */\nexport const getAnchors = (data: BaseNodeModel) => {\n  const { anchors } = data\n  return anchors\n}\n\nexport type NodeContaint = {\n  node: BaseNodeModel\n  anchorIndex: number\n  anchor: Model.AnchorConfig\n}\n\n/* 手动边时获取目标节点的信息：目标节点，目标节点的锚点index以及坐标 */\nexport const targetNodeInfo = (\n  position: Point,\n  graphModel: GraphModel,\n): NodeContaint => {\n  const { nodes } = graphModel\n  let nodeInfo: NodeContaint\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    const targetNode = nodes[i]\n    const inNode = isInNodeBbox(position, targetNode)\n    if (inNode) {\n      const anchorInfo = targetNode.getTargetAnchor(position)\n      if (anchorInfo) {\n        // 不能连接到没有锚点的节点\n        const currentNodeInfo = {\n          node: targetNode,\n          anchorIndex: anchorInfo.index,\n          anchor: anchorInfo.anchor,\n        }\n        // fix: 489 多个节点重合时，连线连接上面的那一个。\n        if (!nodeInfo! || isNodeHigher(targetNode, nodeInfo.node, graphModel)) {\n          nodeInfo = currentNodeInfo\n        }\n      }\n    }\n  }\n  return nodeInfo!\n}\n/**\n * 比较两个节点\n */\nconst isNodeHigher = (\n  node1: BaseNodeModel,\n  node2: BaseNodeModel,\n  graphModel: GraphModel,\n) => {\n  if (node1.zIndex > node2.zIndex) {\n    return true\n  }\n  return (\n    graphModel.nodesMap[node1.id].index > graphModel.nodesMap[node2.id].index\n  )\n}\n\n/* 手动边时获取目标节点上，距离目标位置最近的锚点 */\nexport const getClosestAnchor = (\n  position: Point,\n  node: BaseNodeModel,\n): AnchorInfo => {\n  const anchors = getAnchors(node)\n  let closest: AnchorInfo\n  let minDistance = Number.MAX_SAFE_INTEGER\n  for (let i = 0; i < anchors.length; i++) {\n    const len = distance(position.x, position.y, anchors[i].x, anchors[i].y)\n    if (len < minDistance) {\n      minDistance = len\n      closest = {\n        index: i,\n        anchor: {\n          ...anchors[i],\n          x: anchors[i].x,\n          y: anchors[i].y,\n          id: anchors[i].id,\n        },\n      }\n    }\n  }\n  return closest!\n}\n\n/* 两点之间距离 */\nexport const distance = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): number => Math.hypot(x1 - x2, y1 - y2)\n\n/* 是否在某个节点内，手否进行连接，有offset控制粒度，与outline有关，可以优化 */\nexport const isInNode = (position: Point, node: BaseNodeModel): boolean => {\n  let inNode = false\n  const offset = 0\n  const bBox = getNodeBBox(node)\n  if (\n    position.x >= bBox.minX - offset &&\n    position.x <= bBox.maxX + offset &&\n    position.y >= bBox.minY - offset &&\n    position.y <= bBox.maxY + offset\n  ) {\n    inNode = true\n  }\n  return inNode\n}\nexport const isInNodeBbox = (position: Point, node: BaseNodeModel): boolean => {\n  let inNode = false\n  const offset = 5\n  const bBox = getNodeBBox(node)\n  if (\n    position.x >= bBox.minX - offset &&\n    position.x <= bBox.maxX + offset &&\n    position.y >= bBox.minY - offset &&\n    position.y <= bBox.maxY + offset\n  ) {\n    inNode = true\n  }\n  return inNode\n}\n\nexport type NodeBBox = {\n  x: number\n  y: number\n  width: number\n  height: number\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  centerX: number\n  centerY: number\n}\n\n/* 获取节点bbox */\nexport const getNodeBBox = (node: BaseNodeModel): NodeBBox => {\n  const { x, y, width, height } = node\n  return {\n    minX: x - width / 2,\n    minY: y - height / 2,\n    maxX: x + width / 2,\n    maxY: y + height / 2,\n    x,\n    y,\n    width,\n    height,\n    centerX: x,\n    centerY: y,\n  }\n}\ntype RadiusCircle = {\n  x: number\n  y: number\n  r: number\n}\nexport const getRectRadiusCircle = (\n  node: BaseNodeModel,\n): [RadiusCircle, RadiusCircle, RadiusCircle, RadiusCircle] => {\n  const { x, y, width, height, radius } = node as RectNodeModel\n  return [\n    {\n      x: x - width / 2 + radius,\n      y: y - height / 2 + radius,\n      r: radius,\n    },\n    {\n      x: x + width / 2 - radius,\n      y: y - height / 2 + radius,\n      r: radius,\n    },\n    {\n      x: x - width / 2 + radius,\n      y: y + height / 2 - radius,\n      r: radius,\n    },\n    {\n      x: x + width / 2 - radius,\n      y: y + height / 2 - radius,\n      r: radius,\n    },\n  ]\n}\n\nexport const getClosestRadiusCenter = (\n  point: Point,\n  direction: Direction,\n  node: BaseNodeModel,\n): Point => {\n  const radiusCenter = getRectRadiusCircle(node)\n  let closestRadiusPoint: RadiusCircle\n  let minDistance = Number.MAX_SAFE_INTEGER\n  radiusCenter.forEach((item) => {\n    const radiusDistance = distance(point.x, point.y, item.x, item.y)\n    if (radiusDistance < minDistance) {\n      minDistance = radiusDistance\n      closestRadiusPoint = item\n    }\n  })\n  return getCrossPointWithCircle(point, direction, closestRadiusPoint!)\n}\n/* 求点在垂直或者水平方向上与圆形的交点 */\nexport const getCrossPointWithCircle = (\n  point: Point,\n  direction: Direction,\n  node: RadiusCircle,\n): Point => {\n  let crossPoint: Point\n  const { x, y, r } = node\n  if (direction === SegmentDirection.HORIZONTAL) {\n    // 水平，x轴\n    const crossLeft = x - Math.sqrt(r * r - (point.y - y) * (point.y - y))\n    const crossRight = x + Math.sqrt(r * r - (point.y - y) * (point.y - y))\n    const crossX =\n      Math.abs(crossLeft - point.x) < Math.abs(crossRight - point.x)\n        ? crossLeft\n        : crossRight\n    crossPoint = {\n      x: crossX,\n      y: point.y,\n    }\n  } else if (direction === SegmentDirection.VERTICAL) {\n    // 垂直，y轴\n    const crossTop = y - Math.sqrt(r * r - (point.x - x) * (point.x - x))\n    const crossBottom = y + Math.sqrt(r * r - (point.x - x) * (point.x - x))\n    const crossY =\n      Math.abs(crossTop - point.y) < Math.abs(crossBottom - point.y)\n        ? crossTop\n        : crossBottom\n    crossPoint = {\n      x: point.x,\n      y: crossY,\n    }\n  }\n  return crossPoint!\n}\n\n/* 判断点所在边的方向 */\nexport const pointEdgeDirection = (\n  point: Point,\n  node: BaseNodeModel,\n): Direction => {\n  const dx = Math.abs(point.x - node.x)\n  const dy = Math.abs(point.y - node.y)\n  return dx / node.width > dy / node.height\n    ? SegmentDirection.VERTICAL\n    : SegmentDirection.HORIZONTAL\n}\n\n// 判断矩形外框上一点是否在矩形直行线上\nexport const inStraightLineOfRect = (\n  point: Point,\n  node: BaseNodeModel,\n): boolean => {\n  const rect = node as RectNodeModel\n  let isInStraight = false\n  const { x, y, width, height, radius } = rect\n  const rectBox = {\n    minX: x - width / 2 + radius,\n    maxX: x + width / 2 - radius,\n    minY: y - height / 2 + radius,\n    maxY: y + height / 2 - radius,\n  }\n  if (point.y === y + height / 2 || point.y === y - height / 2) {\n    isInStraight = point.x > rectBox.minX && point.x < rectBox.maxX\n  } else if (point.x === x + width / 2 || point.x === x - width / 2) {\n    isInStraight = point.y > rectBox.minY && point.y < rectBox.maxY\n  }\n  return isInStraight\n}\n\n/* 求点在垂直或者水平方向上与椭圆的交点 */\nexport const getCrossPointWithEllipse = (\n  point: Point,\n  direction: Direction,\n  node: BaseNodeModel,\n): Point => {\n  let crossPoint: Point\n  const { x, y, rx, ry } = node as EllipseNodeModel\n  if (direction === SegmentDirection.HORIZONTAL) {\n    // 水平\n    const crossLeft =\n      x -\n      Math.sqrt(rx * rx - ((point.y - y) * (point.y - y) * rx * rx) / (ry * ry))\n    const crossRight =\n      x +\n      Math.sqrt(rx * rx - ((point.y - y) * (point.y - y) * rx * rx) / (ry * ry))\n    const crossX =\n      Math.abs(crossLeft - point.x) < Math.abs(crossRight - point.x)\n        ? crossLeft\n        : crossRight\n    crossPoint = {\n      x: crossX,\n      y: point.y,\n    }\n  } else if (direction === SegmentDirection.VERTICAL) {\n    // 垂直\n    const crossTop =\n      y -\n      Math.sqrt(ry * ry - ((point.x - x) * (point.x - x) * ry * ry) / (rx * rx))\n    const crossBottom =\n      y +\n      Math.sqrt(ry * ry - ((point.x - x) * (point.x - x) * ry * ry) / (rx * rx))\n    const crossY =\n      Math.abs(crossTop - point.y) < Math.abs(crossBottom - point.y)\n        ? crossTop\n        : crossBottom\n    crossPoint = {\n      x: point.x,\n      y: crossY,\n    }\n  }\n  return crossPoint!\n}\n\n/* 求点在垂直或者水平方向上与多边形的交点 */\nexport const getCrossPointWithPolygon = (\n  point: Point,\n  direction: Direction,\n  node: BaseNodeModel,\n): Point => {\n  const { pointsPosition } = node as PolygonNodeModel\n  let minDistance = Number.MAX_SAFE_INTEGER\n  let crossPoint: Point\n  const segments: LineSegment[] = []\n  for (let i = 0; i < pointsPosition.length; i++) {\n    segments.push({\n      start: pointsPosition[i],\n      end: pointsPosition[(i + 1) % pointsPosition.length],\n    })\n  }\n  segments.forEach((item) => {\n    const { start, end } = item\n    let a = start\n    let b = end\n    if (start.x > end.x) {\n      a = end\n      b = start\n    }\n    let pointXY = {\n      x: point.x,\n      y: point.y,\n    }\n    // 如果多边形当前线段是垂直,求交点\n    if (a.x === b.x && direction === SegmentDirection.HORIZONTAL) {\n      pointXY = {\n        x: a.x,\n        y: point.y,\n      }\n    }\n    // 如果多边形当前线段是水平,求交点\n    if (a.y === b.y && direction === SegmentDirection.VERTICAL) {\n      pointXY = {\n        x: point.x,\n        y: a.y,\n      }\n    }\n    // 如果线段不是水平或者垂直, 使用向量方程进行计算\n    if (a.x !== b.x && a.y !== b.y) {\n      const k = (b.y - a.y) / (b.x - a.x)\n      const m = (a.x * b.y - b.x * a.y) / (a.x - b.x)\n      if (direction === SegmentDirection.HORIZONTAL) {\n        pointXY = {\n          x: (point.y - m) / k,\n          y: point.y,\n        }\n      } else if (direction === SegmentDirection.VERTICAL) {\n        pointXY = {\n          x: point.x,\n          y: k * point.x + m,\n        }\n      }\n    }\n    // 如果交点在线段上\n    const inSegment = isInSegment(pointXY, start, end)\n    if (inSegment) {\n      const currentDistance = distance(pointXY.x, pointXY.y, point.x, point.y)\n      if (currentDistance < minDistance) {\n        minDistance = currentDistance\n        crossPoint = pointXY\n      }\n    }\n  })\n  return crossPoint!\n}\n\n// 规范节点初始化数据\nexport const pickNodeConfig = (data: NodeConfig): NodeConfig => {\n  const nodeData = pick(data, [\n    'id',\n    'type',\n    'x',\n    'y',\n    'text',\n    'properties',\n    'virtual', // 区域节点是否为dnd添加的虚拟节点\n    'rotate',\n  ])\n  return nodeData\n}\n\n/**\n * 基于节点的边，重新获取新的节点\n */\nexport const getNodeAnchorPosition = (\n  center: BaseNodeModel,\n  point: Point,\n  width: number,\n  height: number,\n) => {\n  let { x, y } = center\n  if (point.x > center.x) {\n    x = center.x + width / 2\n  } else if (point.x < center.x) {\n    x = center.x - width / 2\n  }\n  if (point.y > center.y) {\n    y = center.y + height / 2\n  } else if (point.y < center.y) {\n    y = center.y - height / 2\n  }\n  return {\n    x,\n    y,\n  }\n}\n\n/*********************************************************\n * Text 节点文本相关工具函数\n ********************************************************/\n// Text 相关节点工具函数\n// TODO: 获取文案高度，设置自动换行，利用 dom 计算高度\n// function getTextHeight(text: string, font: string): number {\n//   const span = document.createElement('span');\n//   span.textContent = text;\n//   span.style.font = font;\n\n//   const range = document.createRange();\n//   range.selectNodeContents(span);\n\n//   const rect = range.getBoundingClientRect();\n//   const height = rect.height;\n\n//   return height;\n// }\n\n// 获取文案高度，自动换行，利用 dom 计算高度\nexport const getHtmlTextHeight = ({\n  rows,\n  style,\n  rowsLength,\n  className,\n}: {\n  rows: string[]\n  style: h.JSX.CSSProperties\n  rowsLength: number\n  className: string\n}) => {\n  const dom = document.createElement('div')\n  dom.className = className\n  dom.style.fontSize = `${style.fontSize}`\n  dom.style.width = `${style.width}`\n  dom.style.lineHeight = `${style.lineHeight}`\n  dom.style.padding = `${style.padding}`\n  if (style.fontFamily) {\n    dom.style.fontFamily = `${style.fontFamily}`\n  }\n  if (rowsLength > 1) {\n    rows.forEach((row) => {\n      const rowDom = document.createElement('div')\n      rowDom.textContent = row\n      dom.appendChild(rowDom)\n    })\n  } else {\n    dom.textContent = rows[0]\n  }\n  document.body.appendChild(dom)\n  const height = dom.clientHeight\n  document.body.removeChild(dom)\n  return height\n}\n\n// 获取文案高度，自动换行，利用dom计算高度\nexport const getSvgTextWidthHeight = ({\n  rows,\n  rowsLength,\n  fontSize,\n}: {\n  rows: string[]\n  rowsLength: number\n  fontSize: number\n}) => {\n  let longestBytes = 0\n  rows &&\n    rows.forEach((item) => {\n      const rowByteLength = getBytesLength(item)\n      longestBytes = rowByteLength > longestBytes ? rowByteLength : longestBytes\n    })\n  // 背景框宽度，最长一行字节数/2 * fontsize + 2\n  // 背景框宽度， 行数 * fontsize + 2\n  return {\n    width: Math.ceil(longestBytes / 2) * fontSize + fontSize / 4,\n    height: rowsLength * (fontSize + 2) + fontSize / 4,\n  }\n}\n\n/**\n * @description 格式化边校验信息\n */\nexport const formatAnchorConnectValidateData = (\n  data: Model.ConnectRuleResult,\n) => {\n  if (typeof data !== 'object') {\n    return {\n      isAllPass: !!data,\n      msg: data ? '' : '不允许连接',\n    }\n  }\n  return data\n}\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { v4 as uuidV4 } from 'uuid'\nimport LogicFlow from '../LogicFlow'\n\nimport GraphData = LogicFlow.GraphData\n\nexport const createUuid = (): string => uuidV4()\n\n/**\n * 重新刷新流程图的所有id\n */\nexport const refreshGraphId = (\n  graphData: GraphData,\n  prefix = '',\n): GraphData => {\n  const nodeIdMap = graphData.nodes.reduce((nMap, node) => {\n    nMap[node.id] = prefix + uuidV4()\n    node.id = nMap[node.id]\n    return nMap\n  }, {})\n  graphData.edges.forEach((edge) => {\n    edge.id = prefix + uuidV4()\n    edge.sourceNodeId = nodeIdMap[edge.sourceNodeId]\n    edge.targetNodeId = nodeIdMap[edge.targetNodeId]\n  })\n  return graphData\n}\n", "import { createUuid } from './uuid'\n\nconst rafIdMap = new Map()\n\nexport const createRaf = (callback: () => void) => {\n  const rafId = createUuid()\n\n  function run() {\n    callback()\n    const eId = rafIdMap.get(rafId)\n    if (eId) {\n      const nId = window.requestAnimationFrame(run)\n      rafIdMap.set(rafId, nId)\n    }\n  }\n\n  const id = window.requestAnimationFrame(run)\n  rafIdMap.set(rafId, id)\n  return rafId\n}\n\nexport const cancelRaf = (rafId: string) => {\n  const eId = rafIdMap.get(rafId)\n  if (eId) {\n    window.cancelAnimationFrame(eId)\n    rafIdMap.delete(rafId)\n  }\n}\n", "import { distance } from './node'\nimport LogicFlow from '../LogicFlow'\n\nimport Point = LogicFlow.Point\nimport Vector = LogicFlow.Vector\n\nconst SAMPLING_FREQUENCY = 100\nconst normal: Vector = {\n  x: 1,\n  y: 0,\n  z: 0,\n}\n\n// 采样三次贝塞尔曲线上的点, 假设采样频率为SAMPLING_FREQUENCY, 取倒数第1-6/SAMPLING_FREQUENCY个点即t=1-6/SAMPLING_FREQUENCY\nexport function sampleCubic(\n  p1: Point,\n  cp1: Point,\n  cp2: Point,\n  p2: Point,\n  offset: number,\n) {\n  const program = (t: number) => {\n    if (t < 0 || t > 1) {\n      throw new RangeError('The value range of parameter \"t\" is [0,1]')\n    }\n    return {\n      x:\n        p1.x * (1 - t) ** 3 +\n        3 * cp1.x * t * (1 - t) ** 2 +\n        3 * cp2.x * t ** 2 * (1 - t) +\n        p2.x * t ** 3,\n      y:\n        p1.y * (1 - t) ** 3 +\n        3 * cp1.y * t * (1 - t) ** 2 +\n        3 * cp2.y * t ** 2 * (1 - t) +\n        p2.y * t ** 3,\n    }\n  }\n  // fix: https://github.com/didi/LogicFlow/issues/951\n  // 计算贝塞尔曲线上与终点距离为offset的点，作为箭头的的垂点。\n  let arrowDistance = 0\n  let t = 2\n  const { x: x1, y: y1 } = p2\n  let point = p2\n  while (arrowDistance < offset && t < 50) {\n    point = program(1 - t / SAMPLING_FREQUENCY)\n    const { x: x2, y: y2 } = point\n    arrowDistance = distance(x1, y1, x2, y2)\n    t++\n  }\n  return point\n}\n\nfunction crossByZ(v: Vector, v1: Vector) {\n  return v.x * v1.y - v.y * v1.x\n}\n\nfunction dot(v: Vector, w: Vector) {\n  const v1 = [v.x, v.y, v.z]\n  const v2 = [w.x, w.y, w.z]\n  return v2.reduce((prev, cur, index) => prev + cur * v1[index])\n}\n\nfunction angle(v1: Vector, v2: Vector) {\n  const negative = crossByZ(v1, v2)\n  const r = Math.acos(dot(normalize(v1), normalize(v2)))\n  return negative >= 0 ? r : -r\n}\n\nfunction normalize(v: Vector): Vector {\n  const len = Math.hypot(v.x, v.y)\n  return {\n    x: v.x / len,\n    y: v.y / len,\n    z: 0,\n  }\n}\n\nexport function getThetaOfVector(v: Vector) {\n  return angle(normal, v)\n}\n\nexport function degrees(radians: number) {\n  return radians * (180 / Math.PI)\n}\n", "import { cloneDeep, merge } from 'lodash-es'\nimport LogicFlow from '../LogicFlow'\n\nexport const defaultTheme: LogicFlow.Theme = {\n  baseNode: {\n    fill: '#fff',\n    stroke: '#000',\n    strokeWidth: 2,\n  },\n\n  baseEdge: {\n    stroke: '#000',\n    strokeWidth: 2,\n  },\n\n  rect: {},\n  circle: {},\n  diamond: {},\n  ellipse: {},\n  polygon: {},\n\n  text: {\n    color: '#000',\n    stroke: 'none',\n    fontSize: 12,\n    background: {\n      fill: 'transparent',\n    },\n  },\n\n  anchor: {\n    stroke: '#000',\n    fill: '#fff',\n    r: 4,\n    hover: {\n      r: 10,\n      fill: '#949494',\n      fillOpacity: 0.5,\n      stroke: '#949494',\n    },\n  },\n\n  anchorLine: {\n    stroke: '#000',\n    strokeWidth: 2,\n    strokeDasharray: '3,2',\n  },\n\n  nodeText: {\n    color: '#000',\n    overflowMode: 'default',\n    fontSize: 12,\n    lineHeight: 1.2,\n  },\n\n  edgeText: {\n    textWidth: 100,\n    overflowMode: 'default',\n    fontSize: 12,\n    background: {\n      fill: '#fff',\n    },\n  },\n\n  line: {},\n  polyline: {},\n\n  bezier: {\n    fill: 'none',\n    adjustLine: {\n      stroke: '#949494',\n    },\n    adjustAnchor: {\n      r: 4,\n      fill: '#949494',\n      fillOpacity: 1,\n      stroke: '#949494',\n    },\n  },\n\n  arrow: {\n    offset: 10,\n    verticalLength: 5, // 箭头垂直于边的距离\n  },\n\n  snapline: {\n    stroke: '#949494',\n    strokeWidth: 1,\n  },\n\n  edgeAdjust: {\n    r: 4,\n    fill: '#fff',\n    stroke: '#949494',\n    strokeWidth: 2,\n  },\n\n  outline: {\n    fill: 'transparent',\n    stroke: '#949494',\n    strokeDasharray: '3,3',\n    hover: {\n      stroke: '#949494',\n    },\n  },\n\n  edgeAnimation: {\n    stroke: 'red',\n    strokeDasharray: '10,10',\n    strokeDashoffset: '100%',\n    animationName: 'lf_animate_dash',\n    animationDuration: '20s',\n    animationIterationCount: 'infinite',\n    animationTimingFunction: 'linear',\n    animationDirection: 'normal',\n  },\n\n  rotateControl: {\n    stroke: '#000',\n    fill: '#fff',\n    strokeWidth: 1.5,\n  },\n\n  resizeControl: {\n    width: 7,\n    height: 7,\n    fill: '#fff',\n    stroke: '#000',\n  },\n\n  resizeOutline: {\n    fill: 'none',\n    stroke: 'transparent', // 矩形默认不显示调整边框\n    strokeWidth: 1,\n    strokeDasharray: '3,3',\n  },\n}\n\n/* 主题（全局样式）相关工具方法 */\nexport const setupTheme = (\n  customTheme?: Partial<LogicFlow.Theme>,\n): LogicFlow.Theme => {\n  let theme = cloneDeep(defaultTheme)\n\n  if (customTheme) {\n    /**\n     * 为了不让默认样式被覆盖，使用 merge 方法\n     * @docs https://lodash.com/docs/4.17.15#merge\n     * 例如：锚点主题 hover，用户传入如下 ->\n     * lf.setTheme({\n     *   anchor: {\n     *     fill: 'red'\n     *   }\n     * })\n     *\n     * 预期得到的结果如下：\n     * {\n     *   // ...\n     *   anchor: {\n     *     stroke: '#000',\n     *     fill: 'red',\n     *     r: 4,\n     *     hover: {\n     *       r: 10,\n     *       fill: '#949494',\n     *       fillOpacity: 0.5,\n     *       stroke: '#949494',\n     *     },\n     *   },\n     *   // ...\n     * }\n     */\n    theme = merge(theme, customTheme)\n  }\n\n  return theme\n}\n\n/* 更新 theme 方法 */\nexport const updateTheme = setupTheme\n", "let maxIndex = 1000\nlet minIndex = 999\n\nexport const getZIndex = () => ++maxIndex\n\nexport const getMinIndex = () => --minIndex\n", "import { assign, cloneDeep, find, isUndefined } from 'lodash-es'\nimport { action, computed, observable, toJS } from 'mobx'\nimport { BaseNodeModel, GraphModel, Model } from '..'\nimport LogicFlow from '../../LogicFlow'\nimport {\n  createUuid,\n  formatData,\n  getAnchors,\n  getZIndex,\n  pickEdgeConfig,\n  twoPointDistance,\n} from '../../util'\nimport {\n  ElementState,\n  ElementType,\n  ModelType,\n  OverlapMode,\n} from '../../constant'\n\nimport Point = LogicFlow.Point\nimport EdgeData = LogicFlow.EdgeData\nimport EdgeConfig = LogicFlow.EdgeConfig\nimport TextConfig = LogicFlow.TextConfig\n\nexport interface IBaseEdgeModel extends Model.BaseModel {\n  /**\n   * model 基础类型，固定为 edge\n   */\n  readonly BaseType: ElementType.EDGE\n\n  sourceNodeId: string\n  targetNodeId: string\n\n  startPoint?: Point\n  endPoint?: Point\n  points: string\n  pointsList: Point[]\n\n  isAnimation: boolean\n  isDragging?: boolean\n  isShowAdjustPoint: boolean // 是否显示边两端的调整点\n\n  sourceAnchorId?: string\n  targetAnchorId?: string\n  arrowConfig?: LogicFlow.ArrowConfig\n}\n\nexport class BaseEdgeModel implements IBaseEdgeModel {\n  readonly BaseType = ElementType.EDGE\n  static BaseType: ElementType = ElementType.EDGE\n\n  // 数据属性\n  public id = ''\n  @observable type = ''\n  @observable sourceNodeId = ''\n  @observable targetNodeId = ''\n  @observable startPoint!: Point\n  @observable endPoint!: Point\n\n  @observable text: Required<TextConfig> = {\n    value: '',\n    x: 0,\n    y: 0,\n    draggable: false,\n    editable: true,\n  }\n  @observable properties: Record<string, unknown> = {}\n  @observable points = ''\n  @observable pointsList: Point[] = []\n\n  // 状态属性\n  virtual = false\n  @observable isSelected = false\n  @observable isHovered = false\n  @observable isHitable = true // 细粒度控制边是否对用户操作进行反应\n  @observable isHittable = true // 细粒度控制边是否对用户操作进行反应\n  @observable draggable = true\n  @observable visible = true\n\n  // 边特有属性，动画及调整点\n  @observable isAnimation = false\n  @observable isShowAdjustPoint = false // 是否显示边两端的调整点\n  // 引用属性\n  graphModel: GraphModel\n  @observable zIndex: number = 0\n  @observable state = ElementState.DEFAULT\n\n  modelType = ModelType.EDGE\n  additionStateData?: Model.AdditionStateDataType\n\n  sourceAnchorId?: string\n  targetAnchorId?: string\n\n  menu?: LogicFlow.MenuConfig[]\n  customTextPosition = false // 是否自定义边文本位置\n  @observable style: LogicFlow.CommonTheme = {} // 每条边自己的样式，动态修改\n\n  // TODO: 每个边独立生成一个marker没必要\n  // 箭头属性\n  @observable arrowConfig: LogicFlow.ArrowConfig = {\n    markerEnd: `url(#marker-end-${this.id})`,\n    markerStart: `url(#marker-start-${this.id})`,\n  };\n  [propName: string]: unknown // 支持自定义\n\n  constructor(data: EdgeConfig, graphModel: GraphModel) {\n    this.graphModel = graphModel\n    this.initEdgeData(data)\n    this.setAttributes()\n  }\n\n  /**\n   * 初始化边数据\n   * @overridable 支持重写\n   * initNodeData和setAttributes的区别在于\n   * initNodeData只在节点初始化的时候调用，用于初始化节点的所有属性。\n   * setAttributes除了初始化调用外，还会在properties发生变化后调用。\n   */\n  initEdgeData(data: EdgeConfig) {\n    if (!data.properties) {\n      data.properties = {}\n    }\n\n    if (!data.id) {\n      // 自定义边id > 全局定义边id > 内置\n      const { idGenerator } = this.graphModel\n      const globalId = idGenerator && idGenerator(data.type)\n      const nodeId = this.createId()\n      data.id = nodeId || globalId || createUuid()\n    }\n    this.arrowConfig.markerEnd = `url(#marker-end-${data.id})`\n    this.arrowConfig.markerStart = `url(#marker-start-${data.id})`\n    const {\n      editConfigModel: { adjustEdgeStartAndEnd },\n    } = this.graphModel\n    this.isShowAdjustPoint = adjustEdgeStartAndEnd\n    assign(this, pickEdgeConfig(data))\n    const { overlapMode } = this.graphModel\n    if (overlapMode === OverlapMode.INCREASE) {\n      this.zIndex = data.zIndex || getZIndex()\n    }\n    // 设置边的 anchors，也就是边的两个端点\n    // 端点依赖于 edgeData 的 sourceNode 和 targetNode\n    this.setAnchors()\n    // 边的拐点依赖于两个端点\n    this.initPoints()\n    // 文本位置依赖于边上的所有拐点\n    this.formatText(data)\n  }\n\n  /**\n   * 设置model属性\n   * @overridable 支持重写\n   * 每次properties发生变化会触发\n   */\n  setAttributes() {}\n\n  createId(): string | null {\n    return null\n  }\n\n  /**\n   * 自定义边样式\n   *\n   * @overridable 支持重写\n   * @returns 自定义边样式\n   */\n  getEdgeStyle(): LogicFlow.EdgeTheme {\n    return {\n      ...this.graphModel.theme.baseEdge,\n      ...this.style,\n    }\n  }\n\n  /**\n   * 自定义边调整点样式\n   *\n   * @overridable 支持重写\n   * 在isShowAdjustPoint为true时会显示调整点。\n   */\n  getAdjustPointStyle() {\n    return {\n      ...this.graphModel.theme.edgeAdjust,\n    }\n  }\n\n  /**\n   * 自定义边文本样式\n   *\n   * @overridable 支持重写\n   */\n  getTextStyle() {\n    // 透传 edgeText\n    const { edgeText } = this.graphModel.theme\n    return cloneDeep(edgeText)\n  }\n\n  /**\n   * 自定义边动画样式\n   *\n   * @overridable 支持重写\n   * @example\n   * getEdgeAnimationStyle() {\n   *   const style = super.getEdgeAnimationStyle()\n   *   style.stroke = 'blue'\n   *   style.animationDuration = '30s'\n   *   style.animationDirection = 'reverse'\n   *   return style\n   * }\n   */\n  getEdgeAnimationStyle() {\n    const { edgeAnimation } = this.graphModel.theme\n    return cloneDeep(edgeAnimation)\n  }\n\n  /**\n   * 自定义边箭头样式\n   *\n   * @overridable 支持重写\n   * @example\n   * getArrowStyle() {\n   *   const style = super.getArrowStyle()\n   *   style.stroke = 'green'\n   *   return style\n   * }\n   */\n  getArrowStyle(): LogicFlow.ArrowTheme {\n    const edgeStyle = this.getEdgeStyle()\n    const edgeAnimationStyle = this.getEdgeAnimationStyle()\n    const { arrow } = this.graphModel.theme\n    const stroke = this.isAnimation\n      ? edgeAnimationStyle.stroke\n      : edgeStyle.stroke\n    return {\n      ...edgeStyle,\n      fill: stroke,\n      stroke,\n      ...arrow,\n    }\n  }\n\n  /**\n   * 自定义边被选中时展示其范围的矩形框样式\n   *\n   * @overridable 支持重写\n   * @example\n   * // 隐藏outline\n   * getOutlineStyle() {\n   *   const style = super.getOutlineStyle()\n   *   style.stroke = \"none\"\n   *   style.hover.stroke = \"none\"\n   *   return style\n   * }\n   */\n  getOutlineStyle(): LogicFlow.OutlineTheme {\n    const { graphModel } = this\n    const { outline } = graphModel.theme\n    return cloneDeep(outline)\n  }\n\n  /**\n   * 重新自定义文本位置\n   *\n   * @overridable 支持重写\n   */\n  getTextPosition(): Point {\n    return {\n      x: 0,\n      y: 0,\n    }\n  }\n\n  /**\n   * 边的前一个节点\n   */\n  @computed get sourceNode() {\n    return this.graphModel?.nodesMap[this.sourceNodeId]?.model\n  }\n\n  /**\n   * 边的后一个节点\n   */\n  @computed get targetNode() {\n    return this.graphModel?.nodesMap[this.targetNodeId]?.model\n  }\n\n  @computed get textPosition(): Point {\n    return this.getTextPosition()\n  }\n\n  /**\n   * 内部方法，计算两个节点相连时的起点位置\n   */\n  getBeginAnchor(\n    sourceNode: BaseNodeModel,\n    targetNode: BaseNodeModel,\n    sourceAnchorId?: string,\n  ): Point | undefined {\n    // https://github.com/didi/LogicFlow/issues/1077\n    // 可能拿到的sourceAnchors为空数组，因此position可能返回为undefined\n    let position: Point | undefined\n    let minDistance: number | undefined\n    const sourceAnchors = getAnchors(sourceNode)\n    if (sourceAnchorId) {\n      position = find(sourceAnchors, (anchor) => anchor.id === sourceAnchorId)\n      // 如果指定了起始锚点，且指定锚点是节点拥有的锚点时，就把该点设置为起点\n      if (position) {\n        return position\n      }\n      console.warn(\n        `未在节点上找到指定的起点锚点${sourceAnchorId}，已使用默认锚点作为起点`,\n      )\n    }\n    sourceAnchors.forEach((anchor) => {\n      const distance = twoPointDistance(anchor, targetNode)\n      if (minDistance === undefined) {\n        minDistance = distance\n        position = anchor\n      } else if (distance < minDistance) {\n        minDistance = distance\n        position = anchor\n      }\n    })\n    return position\n  }\n\n  /**\n   * 内部方法，计算两个节点相连时的终点位置\n   */\n  getEndAnchor(\n    targetNode: BaseNodeModel,\n    targetAnchorId?: string,\n  ): Point | undefined {\n    // https://github.com/didi/LogicFlow/issues/1077\n    // 可能拿到的targetAnchors为空数组，因此position可能返回为undefined\n    let position: Point | undefined\n    let minDistance: number | undefined\n    const targetAnchors = getAnchors(targetNode)\n    if (targetAnchorId) {\n      position = find(targetAnchors, (anchor) => anchor.id === targetAnchorId)\n      // 如果指定了终点锚点，且指定锚点是节点拥有的锚点时，就把该点设置为终点\n      if (position) {\n        return position\n      }\n      console.warn(\n        `未在节点上找到指定的终点锚点${targetAnchorId}，已使用默认锚点作为终点`,\n      )\n    }\n    targetAnchors.forEach((anchor) => {\n      if (!this.startPoint) return // 如果此时 this.startPoint 为 undefined，直接返回\n\n      const distance = twoPointDistance(anchor, this.startPoint)\n      if (minDistance === undefined) {\n        minDistance = distance\n        position = anchor\n      } else if (distance < minDistance) {\n        minDistance = distance\n        position = anchor\n      }\n    })\n    return position\n  }\n\n  /**\n   * 获取当前边的properties\n   */\n  getProperties() {\n    return toJS(this.properties)\n  }\n\n  /**\n   * 获取被保存时返回的数据\n   *\n   * @overridable 支持重写\n   */\n  getData(): EdgeData {\n    const { x, y, value } = this.text\n    const data: EdgeData = {\n      id: this.id,\n      type: this.type,\n      sourceNodeId: this.sourceNode.id,\n      targetNodeId: this.targetNode.id,\n      startPoint: assign({}, this.startPoint),\n      endPoint: assign({}, this.endPoint),\n      properties: toJS(this.properties),\n    }\n    if (value) {\n      data.text = {\n        x,\n        y,\n        value,\n      }\n    }\n    if (this.graphModel.overlapMode === OverlapMode.INCREASE) {\n      data.zIndex = this.zIndex\n    }\n    return data\n  }\n\n  /**\n   * 获取边的数据\n   *\n   * @overridable 支持重写\n   * 用于在历史记录时获取节点数据。\n   * 在某些情况下，如果希望某个属性变化不引起history的变化，\n   * 可以重写此方法。\n   */\n  getHistoryData(): EdgeData {\n    return this.getData()\n  }\n\n  /**\n   * 设置边的属性，会触发重新渲染\n   * @param key 属性名\n   * @param val 属性值\n   */\n  @action\n  setProperty(key: string, val: any): void {\n    this.properties[key] = formatData(val)\n    this.setAttributes()\n  }\n\n  /**\n   * 删除边的属性，会触发重新渲染\n   * @param key 属性名\n   */\n  @action\n  deleteProperty(key: string): void {\n    delete this.properties[key]\n    this.setAttributes()\n  }\n\n  /**\n   * 设置边的属性，会触发重新渲染\n   * @param properties 要更新的 properties，会做合并\n   */\n  @action\n  setProperties(properties: Record<string, any>): void {\n    this.properties = {\n      ...toJS(this.properties),\n      ...formatData(properties),\n    }\n    this.setAttributes()\n  }\n\n  /**\n   * 修改边的id\n   */\n  @action\n  changeEdgeId(id: string) {\n    const { markerEnd, markerStart } = this.arrowConfig\n    if (markerStart && markerStart === `url(#marker-start-${this.id})`) {\n      this.arrowConfig.markerStart = `url(#marker-start-${id})`\n    }\n    if (markerEnd && markerEnd === `url(#marker-end-${this.id})`) {\n      this.arrowConfig.markerEnd = `url(#marker-end-${id})`\n    }\n    this.id = id\n  }\n\n  /**\n   * 设置边样式，用于插件开发时跳过自定义边的渲染。大多数情况下，不需要使用此方法。\n   * 如果需要设置边的样式，请使用 getEdgeStyle 方法自定义边样式。\n   */\n  @action\n  setStyle(key: string, val): void {\n    this.style = {\n      ...this.style,\n      [key]: formatData(val),\n    }\n  }\n\n  /**\n   * 设置边样式，用于插件开发时跳过自定义边的渲染。大多数情况下，不需要使用此方法。\n   * 如果需要设置边的样式，请使用 getEdgeStyle 方法自定义边样式。\n   */\n  @action\n  setStyles(styles): void {\n    this.style = {\n      ...this.style,\n      ...formatData(styles),\n    }\n  }\n\n  /**\n   * 设置边样式，用于插件开发时跳过自定义边的渲染。大多数情况下，不需要使用此方法。\n   * 如果需要设置边的样式，请使用 getEdgeStyle 方法自定义边样式。\n   */\n  @action\n  updateStyles(styles): void {\n    this.style = {\n      ...formatData(styles),\n    }\n  }\n\n  /**\n   * 内部方法，处理初始化文本格式\n   */\n  @action formatText(data: EdgeConfig) {\n    const { x, y } = this.textPosition\n    const { text } = data\n    let textConfig: Required<TextConfig> = {\n      value: '',\n      x,\n      y,\n      draggable: false,\n      editable: true,\n    }\n\n    if (text) {\n      if (typeof text === 'string') {\n        textConfig = {\n          ...textConfig,\n          value: text,\n        }\n      } else {\n        textConfig = {\n          ...textConfig,\n          x: text.x ?? x,\n          y: text.y ?? y,\n          value: text.value ?? '',\n        }\n        if (!isUndefined(text.draggable)) {\n          textConfig.draggable = text.draggable\n        }\n        if (!isUndefined(text.editable)) {\n          textConfig.editable = text.editable\n        }\n      }\n    }\n    this.text = textConfig\n  }\n\n  /**\n   * 重置文本位置\n   */\n  @action resetTextPosition() {\n    const { x, y } = this.textPosition\n    this.text.x = x\n    this.text.y = y\n  }\n\n  /**\n   * 移动边上的文本\n   */\n  @action moveText(deltaX: number, deltaY: number): void {\n    if (this.text) {\n      const { x, y, value, draggable, editable } = this.text\n      this.text = {\n        value,\n        draggable,\n        x: x + deltaX,\n        y: y + deltaY,\n        editable,\n      }\n    }\n  }\n\n  /**\n   * 设置文本位置和值\n   */\n  @action setText(textConfig: LogicFlow.TextConfig): void {\n    if (textConfig) {\n      assign(this.text, textConfig)\n    }\n  }\n\n  /**\n   * 更新文本的值\n   */\n  @action updateText(value: string): void {\n    this.text = {\n      ...toJS(this.text),\n      value,\n    }\n  }\n\n  /**\n   * 内部方法，计算边的起点和终点和其对于的锚点Id\n   */\n  @action\n  setAnchors(): void {\n    if (!this.sourceAnchorId || !this.startPoint) {\n      const anchor = this.getBeginAnchor(\n        this.sourceNode,\n        this.targetNode,\n        this.sourceAnchorId,\n      )\n      if (!anchor) {\n        // https://github.com/didi/LogicFlow/issues/1077\n        // 当用户自定义getDefaultAnchor(){return []}时，表示：不显示锚点，也不允许其他节点连接到此节点\n        // 此时拿到的anchor=undefined，下面会直接报错\n        throw new Error(\n          '无法获取beginAnchor，请检查anchors相关逻辑，anchors不能为空',\n        )\n      }\n      if (!this.startPoint) {\n        this.startPoint = {\n          x: anchor.x,\n          y: anchor.y,\n        }\n      }\n      if (!this.sourceAnchorId) {\n        this.sourceAnchorId = anchor.id\n      }\n    }\n    if (!this.targetAnchorId || !this.endPoint) {\n      const anchor = this.getEndAnchor(this.targetNode, this.targetAnchorId)\n      if (!anchor) {\n        // https://github.com/didi/LogicFlow/issues/1077\n        // 当用户自定义getDefaultAnchor(){return []}时，表示：不显示锚点，也不允许其他节点连接到此节点\n        // 此时拿到的anchor=undefined，下面会直接报错\n        throw new Error(\n          '无法获取endAnchor，请检查anchors相关逻辑，anchors不能为空',\n        )\n      }\n      if (!this.endPoint) {\n        this.endPoint = {\n          x: anchor.x,\n          y: anchor.y,\n        }\n      }\n      if (!this.targetAnchorId) {\n        this.targetAnchorId = anchor.id\n      }\n    }\n  }\n\n  @action\n  setSelected(flag = true): void {\n    this.isSelected = flag\n  }\n\n  @action\n  setHovered(flag = true): void {\n    this.isHovered = flag\n  }\n\n  @action\n  setHitable(flag = true): void {\n    this.isHitable = flag\n  }\n\n  @action\n  setHittable(flag = true): void {\n    this.isHittable = flag\n  }\n\n  @action\n  openEdgeAnimation(): void {\n    this.isAnimation = true\n  }\n\n  @action\n  closeEdgeAnimation(): void {\n    this.isAnimation = false\n  }\n\n  @action\n  setElementState(\n    state: ElementState,\n    additionStateData?: Model.AdditionStateDataType,\n  ): void {\n    this.state = state\n    this.additionStateData = additionStateData\n  }\n\n  @action\n  updateStartPoint(anchor: Point): void {\n    this.startPoint = anchor\n  }\n\n  @action\n  moveStartPoint(deltaX: number, deltaY: number): void {\n    if (this.startPoint) {\n      this.startPoint.x += deltaX\n      this.startPoint.y += deltaY\n    }\n  }\n\n  @action\n  updateEndPoint(anchor: Point): void {\n    this.endPoint = anchor\n  }\n\n  @action\n  moveEndPoint(deltaX: number, deltaY: number): void {\n    if (this.endPoint) {\n      this.endPoint.x += deltaX\n      this.endPoint.y += deltaY\n    }\n  }\n\n  @action\n  setZIndex(zIndex = 0): void {\n    this.zIndex = zIndex\n  }\n\n  @action\n  initPoints() {}\n\n  @action\n  updateAttributes(attributes) {\n    assign(this, attributes)\n  }\n\n  // 获取边调整的起点\n  @action\n  getAdjustStart() {\n    return this.startPoint\n  }\n\n  // 获取边调整的终点\n  @action\n  getAdjustEnd() {\n    return this.endPoint\n  }\n\n  // 起终点拖拽调整过程中，进行直线路径更新\n  @action\n  updateAfterAdjustStartAndEnd({\n    startPoint,\n    endPoint,\n  }: Record<'startPoint' | 'endPoint', Point>) {\n    this.updateStartPoint({ x: startPoint.x, y: startPoint.y })\n    this.updateEndPoint({ x: endPoint.x, y: endPoint.y })\n  }\n}\n\nexport default BaseEdgeModel\n", "import { cloneDeep } from 'lodash-es'\nimport { action, observable } from 'mobx'\nimport BaseEdgeModel from './BaseEdgeModel'\nimport { BaseNodeModel } from '../node'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType } from '../../constant'\nimport { getBezierControlPoints, IBezierControls } from '../../util'\nimport GraphModel from '../GraphModel'\n\nimport Point = LogicFlow.Point\nimport EdgeConfig = LogicFlow.EdgeConfig\n\nexport class BezierEdgeModel extends BaseEdgeModel {\n  modelType = ModelType.BEZIER_EDGE\n\n  offset!: number\n  @observable path = ''\n\n  constructor(data: EdgeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n\n    this.initEdgeData(data)\n    this.setAttributes()\n  }\n\n  initEdgeData(data: EdgeConfig): void {\n    this.offset = 100\n    super.initEdgeData(data)\n  }\n  getEdgeStyle() {\n    const { bezier } = this.graphModel.theme\n    const style = super.getEdgeStyle()\n    return {\n      ...style,\n      ...cloneDeep(bezier),\n    }\n  }\n  getTextPosition(): Point {\n    if (this.pointsList && this.pointsList.length > 0) {\n      let pointsXSum = 0\n      let pointsYSum = 0\n      this.pointsList.forEach(({ x, y }) => {\n        pointsXSum += x\n        pointsYSum += y\n      })\n      return {\n        x: pointsXSum / this.pointsList.length,\n        y: pointsYSum / this.pointsList.length,\n      }\n    }\n    return {\n      x: (this.startPoint.x + this.endPoint.x) / 2,\n      y: (this.startPoint.y + this.endPoint.y) / 2,\n    }\n  }\n  getData() {\n    const data = super.getData()\n    const pointsList = this.pointsList.map(({ x, y }) => ({ x, y }))\n    return {\n      ...data,\n      pointsList,\n    }\n  }\n\n  /* 获取贝塞尔曲线的控制点 */\n  private getControls(): IBezierControls {\n    const start = this.startPoint\n    const end = this.endPoint\n    const points = getBezierControlPoints({\n      start,\n      end,\n      sourceNode: this.sourceNode,\n      targetNode: this.targetNode,\n      offset: this.offset,\n    })\n    return points\n  }\n  /* 获取贝塞尔曲线的path */\n  private getPath(points: Point[]): string {\n    const [start, sNext, ePre, end] = points\n    return `M ${start.x} ${start.y}\n    C ${sNext.x} ${sNext.y},\n    ${ePre.x} ${ePre.y},\n    ${end.x} ${end.y}`\n  }\n  @action\n  initPoints() {\n    if (this.pointsList.length > 0) {\n      this.path = this.getPath(this.pointsList)\n    } else {\n      this.updatePoints()\n    }\n  }\n\n  @action\n  updatePoints() {\n    const { sNext, ePre } = this.getControls()\n    this.updatePath(sNext, ePre)\n  }\n  updatePath(sNext: Point, ePre: Point) {\n    sNext = cloneDeep(sNext)\n    ePre = cloneDeep(ePre)\n    const start = {\n      x: this.startPoint.x,\n      y: this.startPoint.y,\n    }\n    const end = {\n      x: this.endPoint.x,\n      y: this.endPoint.y,\n    }\n    if (!sNext || !ePre) {\n      const control = this.getControls()\n      sNext = control.sNext\n      ePre = control.ePre\n    }\n    this.pointsList = [start, sNext, ePre, end]\n    this.path = this.getPath(this.pointsList)\n  }\n  @action\n  updateStartPoint(anchor: Point) {\n    this.startPoint = Object.assign({}, anchor)\n    this.updatePoints()\n  }\n\n  @action\n  updateEndPoint(anchor: Point) {\n    this.endPoint = Object.assign({}, anchor)\n    this.updatePoints()\n  }\n  @action\n  moveStartPoint(deltaX: number, deltaY: number): void {\n    this.startPoint.x += deltaX\n    this.startPoint.y += deltaY\n    const [, sNext, ePre] = this.pointsList\n    // 保持调整点一起移动\n    sNext.x += deltaX\n    sNext.y += deltaY\n    this.updatePath(sNext, ePre)\n  }\n  @action\n  moveEndPoint(deltaX: number, deltaY: number): void {\n    this.endPoint.x += deltaX\n    this.endPoint.y += deltaY\n    const [, sNext, ePre] = this.pointsList\n    // 保持调整点一起移动\n    ePre.x += deltaX\n    ePre.y += deltaY\n    this.updatePath(sNext, ePre)\n  }\n  @action\n  updateAdjustAnchor(anchor: Point, type: string) {\n    if (type === 'sNext') {\n      this.pointsList[1] = anchor\n    } else if (type === 'ePre') {\n      this.pointsList[2] = anchor\n    }\n    this.path = this.getPath(this.pointsList)\n    this.setText(Object.assign({}, this.text, this.textPosition))\n  }\n  // 获取边调整的起点\n  @action\n  getAdjustStart() {\n    return this.pointsList[0] || this.startPoint\n  }\n  // 获取边调整的终点\n  @action\n  getAdjustEnd() {\n    const { pointsList } = this\n    return pointsList[pointsList.length - 1] || this.endPoint\n  }\n  // 起终点拖拽调整过程中，进行曲线路径更新\n  @action\n  updateAfterAdjustStartAndEnd({\n    startPoint,\n    endPoint,\n    sourceNode,\n    targetNode,\n  }: {\n    startPoint: Point\n    endPoint: Point\n    sourceNode: BaseNodeModel\n    targetNode: BaseNodeModel\n  }) {\n    const { sNext, ePre } = getBezierControlPoints({\n      start: startPoint,\n      end: endPoint,\n      sourceNode,\n      targetNode,\n      offset: this.offset,\n    })\n    this.pointsList = [startPoint, sNext, ePre, endPoint]\n    this.initPoints()\n  }\n}\n\nexport default BezierEdgeModel\n", "import { cloneDeep } from 'lodash-es'\nimport LogicFlow from '../../LogicFlow'\nimport BaseEdgeModel from './BaseEdgeModel'\nimport { ModelType } from '../../constant'\n\nimport Point = LogicFlow.Point\n\nexport class LineEdgeModel extends BaseEdgeModel {\n  modelType = ModelType.LINE_EDGE\n  getEdgeStyle() {\n    const { line } = this.graphModel.theme\n    const style = super.getEdgeStyle()\n    return {\n      ...style,\n      ...cloneDeep(line),\n    }\n  }\n  getTextPosition(): Point {\n    return {\n      x: (this.startPoint.x + this.endPoint.x) / 2,\n      y: (this.startPoint.y + this.endPoint.y) / 2,\n    }\n  }\n}\n\nexport default LineEdgeModel\n", "import { cloneDeep } from 'lodash-es'\nimport { observable, action } from 'mobx'\nimport { BaseEdgeModel } from '.'\nimport { BaseNodeModel, RectNodeModel, CircleNodeModel, Model } from '..'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType, SegmentDirection } from '../../constant'\nimport {\n  isInNode,\n  distance,\n  getClosestRadiusCenter,\n  inStraightLineOfRect,\n  getCrossPointWithCircle,\n  getCrossPointWithEllipse,\n  getCrossPointWithPolygon,\n  getPolylinePoints,\n  getLongestEdge,\n  getCrossPointInRect,\n  isSegmentsInNode,\n  isSegmentsCrossNode,\n  segmentDirection,\n  points2PointsList,\n  pointFilter,\n} from '../../util'\n\nimport Point = LogicFlow.Point\nimport Position = LogicFlow.Position\nimport AppendConfig = LogicFlow.AppendConfig\nimport ArchorConfig = Model.AnchorConfig\n\nexport class PolylineEdgeModel extends BaseEdgeModel {\n  modelType = ModelType.POLYLINE_EDGE\n  draggingPointList: Point[] = []\n  offset?: number\n  @observable dbClickPosition?: Point\n\n  initEdgeData(data: LogicFlow.EdgeConfig): void {\n    this.offset = 30\n    super.initEdgeData(data)\n  }\n\n  getEdgeStyle() {\n    const { polyline } = this.graphModel.theme\n    const style = super.getEdgeStyle()\n    return {\n      ...style,\n      ...cloneDeep(polyline),\n    }\n  }\n\n  getTextPosition() {\n    // 在文案为空的情况下，文案位置为双击位置\n    const textValue = this.text?.value\n    if (this.dbClickPosition && !textValue) {\n      const { x, y } = this.dbClickPosition\n      return {\n        x,\n        y,\n      }\n    }\n    const currentPositionList = points2PointsList(this.points)\n    const [p1, p2] = getLongestEdge(currentPositionList)\n    return {\n      x: (p1.x + p2.x) / 2,\n      y: (p1.y + p2.y) / 2,\n    }\n  }\n\n  // 获取下一个锚点\n  getAfterAnchor(\n    direction: SegmentDirection,\n    position: Position,\n    anchorList: ArchorConfig[],\n  ) {\n    let anchor: ArchorConfig\n    let minDistance: number\n    anchorList.forEach((item) => {\n      let distanceX: number\n      if (direction === SegmentDirection.HORIZONTAL) {\n        distanceX = Math.abs(position.y - item.y)\n      } else if (direction === SegmentDirection.VERTICAL) {\n        distanceX = Math.abs(position.x - item.x)\n      }\n      if (!minDistance || minDistance > distanceX!) {\n        minDistance = distanceX!\n        anchor = item\n      }\n    })\n    return anchor!\n  }\n\n  /* 获取拖拽过程中产生的交点 */\n  getCrossPoint(direction: SegmentDirection, start: Position, end: Position) {\n    let position: Point\n    if (direction === SegmentDirection.HORIZONTAL) {\n      position = {\n        x: end.x,\n        y: start.y,\n      }\n    } else if (direction === SegmentDirection.VERTICAL) {\n      position = {\n        x: start.x,\n        y: end.y,\n      }\n    }\n    return position!\n  }\n\n  // 删除在图形内的过个交点\n  removeCrossPoints(startIndex: number, endIndex: number, pointList: Point[]) {\n    const list = pointList.map((i) => i)\n    if (startIndex === 1) {\n      const start = list[startIndex]\n      const end = list[endIndex]\n      const pre = list[startIndex - 1]\n      const isInStartNode = isSegmentsInNode(pre, start, this.sourceNode)\n      if (isInStartNode) {\n        const isSegmentsCrossStartNode = isSegmentsCrossNode(\n          start,\n          end,\n          this.sourceNode,\n        )\n        if (isSegmentsCrossStartNode) {\n          const point = getCrossPointInRect(start, end, this.sourceNode)\n          if (point) {\n            list[startIndex] = point\n            list.splice(startIndex - 1, 1)\n            startIndex--\n            endIndex--\n          }\n        }\n      } else {\n        const anchorList = this.sourceNode.anchors\n        anchorList.forEach((item) => {\n          if (\n            (item.x === pre.x && item.x === start.x) ||\n            (item.y === pre.y && item.y === start.y)\n          ) {\n            const distance1 = distance(item.x, item.y, start.x, start.y)\n            const distance2 = distance(pre.x, pre.y, start.x, start.y)\n            if (distance1 < distance2) {\n              list[startIndex - 1] = item\n            }\n          }\n        })\n      }\n    }\n    if (endIndex === pointList.length - 2) {\n      const start = list[startIndex]\n      const end = list[endIndex]\n      const next = list[endIndex + 1]\n      const isInEndNode = isSegmentsInNode(end, next, this.targetNode)\n      if (isInEndNode) {\n        const isSegmentsCrossStartNode = isSegmentsCrossNode(\n          start,\n          end,\n          this.targetNode,\n        )\n        if (isSegmentsCrossStartNode) {\n          const point = getCrossPointInRect(start, end, this.targetNode)\n          if (point) {\n            list[endIndex] = point\n            list.splice(endIndex + 1, 1)\n          }\n        }\n      } else {\n        const anchorList = this.targetNode.anchors\n        anchorList.forEach((item) => {\n          if (\n            (item.x === next.x && item.x === end.x) ||\n            (item.y === next.y && item.y === end.y)\n          ) {\n            const distance1 = distance(item.x, item.y, end.x, end.y)\n            const distance2 = distance(next.x, next.y, end.x, end.y)\n            if (distance1 < distance2) {\n              list[endIndex + 1] = item\n            }\n          }\n        })\n      }\n    }\n    return list\n  }\n\n  // 获取在拖拽过程中可能产生的点\n  getDraggingPoints(\n    direction: SegmentDirection,\n    positionType: string,\n    position: Position,\n    anchorList: ArchorConfig[],\n    draggingPointList: Point[],\n  ) {\n    const pointList = draggingPointList.map((i) => i)\n    const anchor = this.getAfterAnchor(direction, position, anchorList)\n    const crossPoint = this.getCrossPoint(direction, position, anchor)\n    if (positionType === 'start') {\n      pointList.unshift(crossPoint)\n      pointList.unshift(anchor)\n    } else {\n      pointList.push(crossPoint)\n      pointList.push(anchor)\n    }\n    return pointList\n  }\n\n  // 更新相交点[起点，终点]，更加贴近图形, 未修改observable不作为action\n  updateCrossPoints(pointList: Point[]) {\n    const list = pointList.map((i) => i)\n    const start = pointList[0]\n    const next = pointList[1]\n    const pre = pointList[list.length - 2]\n    const end = pointList[list.length - 1]\n    const { sourceNode, targetNode } = this\n    const sourceModelType = sourceNode.modelType\n    const targetModelType = targetNode.modelType\n    const startPointDirection = segmentDirection(start, next)!\n    let startCrossPoint = list[0]\n    switch (sourceModelType) {\n      case ModelType.RECT_NODE:\n        if ((sourceNode as RectNodeModel).radius !== 0) {\n          const inInnerNode = inStraightLineOfRect(start, sourceNode)\n          if (!inInnerNode) {\n            startCrossPoint = getClosestRadiusCenter(\n              start,\n              startPointDirection,\n              sourceNode,\n            )\n          }\n        }\n        break\n      case ModelType.CIRCLE_NODE:\n        startCrossPoint = getCrossPointWithCircle(\n          start,\n          startPointDirection,\n          sourceNode as CircleNodeModel,\n        )\n        break\n      case ModelType.ELLIPSE_NODE:\n        startCrossPoint = getCrossPointWithEllipse(\n          start,\n          startPointDirection,\n          sourceNode,\n        )\n        break\n      case ModelType.DIAMOND_NODE:\n        startCrossPoint = getCrossPointWithPolygon(\n          start,\n          startPointDirection,\n          sourceNode,\n        )\n        break\n      case ModelType.POLYGON_NODE:\n        startCrossPoint = getCrossPointWithPolygon(\n          start,\n          startPointDirection,\n          sourceNode,\n        )\n        break\n      default:\n        break\n    }\n    // 如果线段和形状没有交点时startCrossPoint会为undefined导致后续计算报错\n    if (startCrossPoint) {\n      list[0] = startCrossPoint\n    }\n    const endPointDirection = segmentDirection(pre, end)!\n    let endCrossPoint = list[list.length - 1]\n    switch (targetModelType) {\n      case ModelType.RECT_NODE:\n        if ((targetNode as RectNodeModel).radius !== 0) {\n          const inInnerNode = inStraightLineOfRect(end, targetNode)\n          if (!inInnerNode) {\n            endCrossPoint = getClosestRadiusCenter(\n              end,\n              endPointDirection,\n              targetNode,\n            )\n          }\n        }\n        break\n      case ModelType.CIRCLE_NODE:\n        endCrossPoint = getCrossPointWithCircle(\n          end,\n          endPointDirection,\n          targetNode as CircleNodeModel,\n        )\n        break\n      case ModelType.ELLIPSE_NODE:\n        endCrossPoint = getCrossPointWithEllipse(\n          end,\n          endPointDirection,\n          targetNode,\n        )\n        break\n      case ModelType.DIAMOND_NODE:\n        endCrossPoint = getCrossPointWithPolygon(\n          end,\n          endPointDirection,\n          targetNode,\n        )\n        break\n      case ModelType.POLYGON_NODE:\n        endCrossPoint = getCrossPointWithPolygon(\n          end,\n          endPointDirection,\n          targetNode,\n        )\n        break\n      default:\n        break\n    }\n    // 如果线段和形状没有交点时startCrossPoint会为undefined导致后续计算报错\n    if (endCrossPoint) {\n      list[list.length - 1] = endCrossPoint\n    }\n    return list\n  }\n\n  getData() {\n    const data = super.getData()\n    const pointsList = this.pointsList.map(({ x, y }) => ({\n      x,\n      y,\n    }))\n    return Object.assign({}, data, {\n      pointsList,\n    })\n  }\n\n  @action\n  initPoints() {\n    if (this.pointsList.length > 0) {\n      this.points = this.pointsList\n        .map((point) => `${point.x},${point.y}`)\n        .join(' ')\n    } else {\n      this.updatePoints()\n    }\n  }\n\n  @action\n  updatePoints() {\n    const pointsList = getPolylinePoints(\n      {\n        x: this.startPoint.x,\n        y: this.startPoint.y,\n      },\n      {\n        x: this.endPoint.x,\n        y: this.endPoint.y,\n      },\n      this.sourceNode,\n      this.targetNode,\n      this.offset || 0,\n    )\n    this.pointsList = pointsList\n    this.points = pointsList.map((point) => `${point.x},${point.y}`).join(' ')\n  }\n\n  @action\n  updateStartPoint(anchor: Point) {\n    this.startPoint = Object.assign({}, anchor)\n    this.updatePoints()\n  }\n\n  @action\n  moveStartPoint(deltaX: number, deltaY: number): void {\n    this.startPoint.x += deltaX\n    this.startPoint.y += deltaY\n    this.updatePoints()\n    // todo: 尽量保持边的整体轮廓, 通过deltaX和deltaY更新pointsList，而不是重新计算。\n  }\n\n  @action\n  updateEndPoint(anchor: Point) {\n    this.endPoint = Object.assign({}, anchor)\n    this.updatePoints()\n  }\n\n  @action\n  moveEndPoint(deltaX: number, deltaY: number): void {\n    this.endPoint.x += deltaX\n    this.endPoint.y += deltaY\n    this.updatePoints()\n  }\n\n  @action\n  updatePointsList(deltaX: number, deltaY: number): void {\n    this.pointsList.forEach((item) => {\n      item.x += deltaX\n      item.y += deltaY\n    })\n    const startPoint = this.pointsList[0]\n    this.startPoint = Object.assign({}, startPoint)\n    const endPoint = this.pointsList[this.pointsList.length - 1]\n    this.endPoint = Object.assign({}, endPoint)\n    this.initPoints()\n  }\n\n  @action\n  dragAppendStart() {\n    // mobx observer 对象被iterator处理会有问题\n    this.draggingPointList = this.pointsList.map((i) => i)\n  }\n\n  @action\n  dragAppendSimple(\n    appendInfo: AppendConfig,\n    dragInfo: Record<'x' | 'y', number>,\n  ) {\n    // 因为drag事件是mouseDown事件触发的，因此当真实拖拽之后再设置isDragging\n    // 避免因为点击事件造成，在dragStart触发之后，没有触发dragEnd错误设置了isDragging状态，对history计算造成错误\n    this.isDragging = true\n    const { start, end, startIndex, endIndex, direction } = appendInfo\n    const { pointsList } = this\n    let draggingPointList = pointsList\n    if (direction === SegmentDirection.HORIZONTAL) {\n      // 水平，仅调整y坐标，拿到当前线段两个端点移动后的坐标\n      pointsList[startIndex] = {\n        x: start.x,\n        y: start.y + dragInfo.y,\n      }\n      pointsList[endIndex] = {\n        x: end.x,\n        y: end.y + dragInfo.y,\n      }\n      draggingPointList = this.pointsList.map((i) => i)\n    } else if (direction === SegmentDirection.VERTICAL) {\n      // 垂直，仅调整x坐标， 与水平调整同理\n      pointsList[startIndex] = {\n        x: start.x + dragInfo.x,\n        y: start.y,\n      }\n      pointsList[endIndex] = {\n        x: end.x + dragInfo.x,\n        y: end.y,\n      }\n      draggingPointList = this.pointsList.map((i) => i)\n    }\n    this.updatePointsAfterDrag(draggingPointList)\n    this.draggingPointList = draggingPointList\n    this.setText(Object.assign({}, this.text, this.textPosition))\n    return {\n      start: Object.assign({}, pointsList[startIndex]),\n      end: Object.assign({}, pointsList[endIndex]),\n      startIndex,\n      endIndex,\n      direction,\n    }\n  }\n\n  @action\n  dragAppend(appendInfo: AppendConfig, dragInfo: Record<'x' | 'y', number>) {\n    this.isDragging = true\n    const { start, end, startIndex, endIndex, direction } = appendInfo\n    const { pointsList } = this\n    if (direction === SegmentDirection.HORIZONTAL) {\n      // 水平，仅调整y坐标\n      // step1: 拿到当前线段两个端点移动后的坐标\n      pointsList[startIndex] = {\n        x: start.x,\n        y: start.y + dragInfo.y,\n      }\n      pointsList[endIndex] = {\n        x: end.x,\n        y: end.y + dragInfo.y,\n      }\n      // step2: 计算拖拽后,两个端点与节点外框的交点\n      // 定义一个拖住中节点list\n      let draggingPointList = this.pointsList.map((i) => i)\n      if (startIndex !== 0 && endIndex !== this.pointsList.length - 1) {\n        // 2.1)如果线段没有连接起终点，过滤会穿插在图形内部的线段，取整个图形离线段最近的点\n        draggingPointList = this.removeCrossPoints(\n          startIndex,\n          endIndex,\n          draggingPointList,\n        )\n      }\n      if (startIndex === 0) {\n        // 2.2)如果线段连接了起点, 判断起点是否在节点内部\n        const startPosition = {\n          x: start.x,\n          y: start.y + dragInfo.y,\n        }\n        const inNode = isInNode(startPosition, this.sourceNode)\n        if (!inNode) {\n          // 如果不在节点内部，更换起点为线段与节点的交点\n          const anchorList = this.sourceNode.anchors\n          draggingPointList = this.getDraggingPoints(\n            direction,\n            'start',\n            startPosition,\n            anchorList,\n            draggingPointList,\n          )\n        }\n      }\n      if (endIndex === this.pointsList.length - 1) {\n        // 2.2)如果线段连接了终点, 判断起点是否在节点内部\n        const endPosition = {\n          x: end.x,\n          y: end.y + dragInfo.y,\n        }\n        const inNode = isInNode(endPosition, this.targetNode)\n        if (!inNode) {\n          // 如果不在节点内部，更换终点为线段与节点的交点\n          const anchorList = this.targetNode.anchors\n          draggingPointList = this.getDraggingPoints(\n            direction,\n            'end',\n            endPosition,\n            anchorList,\n            draggingPointList,\n          )\n        }\n      }\n      this.updatePointsAfterDrag(draggingPointList)\n      // step3: 调整到对应外框的位置后，执行updatePointsAfterDrag，找到当前线段和图形的准确交点\n      this.draggingPointList = draggingPointList\n    } else if (direction === SegmentDirection.VERTICAL) {\n      // 垂直，仅调整x坐标， 与水平调整同理\n      pointsList[startIndex] = {\n        x: start.x + dragInfo.x,\n        y: start.y,\n      }\n      pointsList[endIndex] = {\n        x: end.x + dragInfo.x,\n        y: end.y,\n      }\n      let draggingPointList = this.pointsList.map((i) => i)\n      if (startIndex !== 0 && endIndex !== this.pointsList.length - 1) {\n        draggingPointList = this.removeCrossPoints(\n          startIndex,\n          endIndex,\n          draggingPointList,\n        )\n      }\n      if (startIndex === 0) {\n        const startPosition = {\n          x: start.x + dragInfo.x,\n          y: start.y,\n        }\n        const inNode = isInNode(startPosition, this.sourceNode)\n        if (!inNode) {\n          const anchorList = this.sourceNode.anchors\n          draggingPointList = this.getDraggingPoints(\n            direction,\n            'start',\n            startPosition,\n            anchorList,\n            draggingPointList,\n          )\n        }\n      }\n      if (endIndex === this.pointsList.length - 1) {\n        const endPosition = {\n          x: end.x + dragInfo.x,\n          y: end.y,\n        }\n        const inNode = isInNode(endPosition, this.targetNode)\n        if (!inNode) {\n          const anchorList = this.targetNode.anchors\n          draggingPointList = this.getDraggingPoints(\n            direction,\n            'end',\n            endPosition,\n            anchorList,\n            draggingPointList,\n          )\n        }\n      }\n      this.updatePointsAfterDrag(draggingPointList)\n      this.draggingPointList = draggingPointList\n    }\n    this.setText(Object.assign({}, this.text, this.textPosition))\n    return {\n      start: Object.assign({}, pointsList[startIndex]),\n      end: Object.assign({}, pointsList[endIndex]),\n      startIndex,\n      endIndex,\n      direction,\n    }\n  }\n\n  @action\n  dragAppendEnd() {\n    if (this.draggingPointList) {\n      const pointsList = pointFilter(points2PointsList(this.points))\n      // 更新pointsList，重新渲染appendWidth\n      this.pointsList = pointsList.map((i) => i)\n      // draggingPointList清空\n      this.draggingPointList = []\n      // 更新起终点\n      const startPoint = pointsList[0]\n      this.startPoint = Object.assign({}, startPoint)\n      const endPoint = pointsList[pointsList.length - 1]\n      this.endPoint = Object.assign({}, endPoint)\n    }\n    this.isDragging = false\n  }\n\n  /* 拖拽之后个更新points，仅更新边，不更新pointsList，\n     appendWidth会依赖pointsList,更新pointsList会重新渲染appendWidth，从而导致不能继续拖拽\n     在拖拽结束后再进行pointsList的更新\n  */\n  @action\n  updatePointsAfterDrag(pointsList: Point[]) {\n    // 找到准确的连接点后,更新points, 更新边，同时更新依赖points的箭头\n    const list = this.updateCrossPoints(pointsList)\n    this.points = list.map((point) => `${point.x},${point.y}`).join(' ')\n  }\n\n  // 获取边调整的起点\n  @action\n  getAdjustStart() {\n    return this.pointsList[0] || this.startPoint\n  }\n\n  // 获取边调整的终点\n  @action\n  getAdjustEnd() {\n    const { pointsList } = this\n    return pointsList[pointsList.length - 1] || this.endPoint\n  }\n\n  // 起终点拖拽调整过程中，进行折线路径更新\n  @action\n  updateAfterAdjustStartAndEnd({\n    startPoint,\n    endPoint,\n    sourceNode,\n    targetNode,\n  }: {\n    startPoint: Point\n    endPoint: Point\n    sourceNode: BaseNodeModel\n    targetNode: BaseNodeModel\n  }) {\n    this.pointsList = getPolylinePoints(\n      {\n        x: startPoint.x,\n        y: startPoint.y,\n      },\n      {\n        x: endPoint.x,\n        y: endPoint.y,\n      },\n      sourceNode,\n      targetNode,\n      this.offset || 0,\n    )\n\n    this.initPoints()\n  }\n}\n\nexport default PolylineEdgeModel\n", "import { action, computed, isObservable, observable, toJS } from 'mobx'\nimport { assign, cloneDeep, has, isNil, isUndefined, mapKeys } from 'lodash-es'\nimport { GraphModel, Model } from '..'\nimport LogicFlow from '../../LogicFlow'\nimport {\n  createUuid,\n  formatData,\n  getClosestAnchor,\n  getZIndex,\n  Matrix,\n  pickNodeConfig,\n  TranslateMatrix,\n} from '../../util'\nimport {\n  ElementState,\n  ElementType,\n  EventType,\n  ModelType,\n  OverlapMode,\n} from '../../constant'\nimport { ResizeControl } from '../../view/Control'\nimport AnchorConfig = Model.AnchorConfig\nimport GraphElements = LogicFlow.GraphElements\nimport TextConfig = LogicFlow.TextConfig\nimport NodeConfig = LogicFlow.NodeConfig\nimport NodeData = LogicFlow.NodeData\nimport Point = LogicFlow.Point\nimport CommonTheme = LogicFlow.CommonTheme\n\nimport ResizeInfo = ResizeControl.ResizeInfo\nimport ResizeNodeData = ResizeControl.ResizeNodeData\nimport PCTResizeParams = ResizeControl.PCTResizeParams\n\nexport interface IBaseNodeModel extends Model.BaseModel {\n  /**\n   * model基础类型，固定为node\n   */\n  readonly BaseType: ElementType.NODE\n\n  isDragging: boolean\n  isShowAnchor: boolean\n  getNodeStyle: () => CommonTheme\n  getTextStyle: () => LogicFlow.TextNodeTheme\n\n  setIsShowAnchor: (isShowAnchor: boolean) => void\n}\n\nexport class BaseNodeModel implements IBaseNodeModel {\n  readonly BaseType = ElementType.NODE\n  static BaseType: ElementType = ElementType.NODE\n\n  // 数据属性\n  public id = ''\n  @observable readonly type = ''\n  @observable x = 0\n  @observable y = 0\n  @observable text: TextConfig = {\n    value: '',\n    x: 0,\n    y: 0,\n    draggable: false,\n    editable: true,\n  }\n  @observable properties: Record<string, unknown> = {}\n  // 形状属性\n  @observable private _width = 100\n  public get width() {\n    return this._width\n  }\n\n  public set width(value: number) {\n    this._width = value\n  }\n\n  @observable private _height = 80\n  public get height() {\n    return this._height\n  }\n\n  public set height(value: number) {\n    this._height = value\n  }\n\n  minWidth: number = 30\n  minHeight: number = 30\n  maxWidth: number = 2000\n  maxHeight: number = 2000\n  PCTResizeInfo?: PCTResizeParams\n\n  // 根据与 (x, y) 的偏移量计算 anchors 的坐标\n  @observable anchorsOffset: BaseNodeModel.AnchorsOffsetItem[] = []\n\n  // 状态属性\n  readonly virtual: boolean = false\n  @observable isSelected = false\n  @observable isHovered = false\n  @observable isShowAnchor = false\n  @observable isDragging = false\n  @observable isHitable = true // TODO: 兼容拼写错误的情况 Remove\n  @observable isHittable = true // 细粒度控制节点是否对用户操作进行反应\n  @observable draggable = true\n  @observable visible = true\n  @observable enableRotate = true\n  @observable enableResize = true\n\n  // 其它属性\n  graphModel: GraphModel\n  @observable zIndex = 1\n  @observable state = ElementState.DEFAULT\n  @observable autoToFront = true // 节点选中时是否自动置顶，默认为true.\n  @observable style: CommonTheme = {} // 每个节点自己的样式，动态修改\n\n  // TODO: 利用向量计算实现 平移、旋转、缩放 等操作，利用 svg 的 transform 属性\n  @observable transform!: string // 节点的transform属性\n  @observable private _rotate = 0\n  get rotate() {\n    return this._rotate\n  }\n\n  set rotate(value: number) {\n    this._rotate = value\n    const { x = 0, y = 0 } = this\n    this.transform = new TranslateMatrix(-x, -y)\n      .rotate(value)\n      .translate(x, y)\n      .toString()\n  }\n\n  modelType = ModelType.NODE\n  additionStateData?: Model.AdditionStateDataType = {}\n\n  // 节点连入、练出、移动等规则\n  targetRules: Model.ConnectRule[] = []\n  sourceRules: Model.ConnectRule[] = []\n  moveRules: Model.NodeMoveRule[] = [] // 节点移动之前的hook\n  hasSetTargetRules = false // 用来限制rules的重复值\n  hasSetSourceRules = false; // 用来限制rules的重复值\n  [propName: string]: any // 支持用户自定义属性\n\n  constructor(data: NodeConfig, graphModel: GraphModel) {\n    this.graphModel = graphModel\n    this.properties = data.properties || {}\n\n    this.initNodeData(data)\n    this.setAttributes()\n  }\n\n  /**\n   * 获取进入当前节点的边和节点\n   */\n  @computed get incoming(): GraphElements {\n    return {\n      nodes: this.graphModel.getNodeIncomingNode(this.id),\n      edges: this.graphModel.getNodeIncomingEdge(this.id),\n    }\n  }\n\n  /*\n   * 获取离开当前节点的边和节点\n   */\n  @computed get outgoing(): GraphElements {\n    return {\n      nodes: this.graphModel.getNodeOutgoingNode(this.id),\n      edges: this.graphModel.getNodeOutgoingEdge(this.id),\n    }\n  }\n\n  /**\n   * @overridable 可以重写\n   * 初始化节点数据\n   * initNodeData和setAttributes的区别在于\n   * initNodeData只在节点初始化的时候调用，用于初始化节点的所有属性。\n   * setAttributes除了初始化调用外，还会在properties发生变化了调用。\n   */\n  public initNodeData(data: NodeConfig) {\n    if (!data.properties) {\n      data.properties = {}\n    }\n\n    if (!data.id) {\n      // 自定义节点id > 全局定义id > 内置\n      const { idGenerator } = this.graphModel\n      const globalId = idGenerator && idGenerator(data.type)\n      const nodeId = this.createId()\n      data.id = nodeId || globalId || createUuid()\n    }\n\n    this.formatText(data)\n    // 在下面又将 NodeConfig 中的数据赋值给了 this，应该会触发 setAttributes，确认是否符合预期\n    assign(this, pickNodeConfig(data)) // TODO: 确认 constructor 中赋值 properties 是否必要\n    const { overlapMode } = this.graphModel\n    if (overlapMode === OverlapMode.INCREASE) {\n      this.zIndex = data.zIndex || getZIndex()\n    }\n  }\n\n  /**\n   * 设置model属性，每次properties发生变化会触发\n   * 例如设置节点的宽度\n   * @example\n   *\n   * setAttributes () {\n   *   this.width = 300\n   *   this.height = 200\n   * }\n   *\n   * @overridable 支持重写\n   */\n  public setAttributes() {}\n\n  /**\n   * @overridable 支持重写，自定义此类型节点默认生成方式\n   * @returns string | null\n   */\n  public createId(): string | null {\n    return null\n  }\n\n  /**\n   * 始化文本属性\n   */\n  private formatText(data: NodeConfig): void {\n    const { x, y, text } = data\n    let textConfig: TextConfig = {\n      value: '',\n      x,\n      y,\n      draggable: false,\n      editable: true,\n    }\n    if (text) {\n      if (typeof text === 'string') {\n        textConfig.value = text\n      } else {\n        textConfig = {\n          ...textConfig,\n          x: text.x ?? x,\n          y: text.y ?? y,\n          value: text.value ?? '',\n        }\n        if (!isUndefined(text.draggable)) {\n          textConfig.draggable = text.draggable\n        }\n        if (!isUndefined(text.editable)) {\n          textConfig.draggable = text.draggable\n        }\n      }\n    }\n\n    data.text = textConfig\n  }\n\n  /**\n   * @overridable 支持重写\n   * 计算节点 resize 时\n   */\n  resize(resizeInfo: ResizeInfo): ResizeNodeData {\n    const { width, height, deltaX, deltaY } = resizeInfo\n    // 移动节点以及文本内容\n    this.move(deltaX / 2, deltaY / 2)\n\n    this.width = width\n    this.height = height\n    this.setProperties({\n      width,\n      height,\n    })\n\n    return this.getData()\n  }\n\n  // TODO: 等比例缩放\n  proportionalResize() {}\n\n  /**\n   * 获取被保存时返回的数据\n   * @overridable 支持重写\n   */\n  getData(): NodeData {\n    const { x, y, value } = this.text\n    let { properties } = this\n    if (isObservable(properties)) {\n      properties = toJS(properties)\n    }\n    const data: NodeData = {\n      id: this.id,\n      type: this.type,\n      x: this.x,\n      y: this.y,\n      properties,\n    }\n    if (this.rotate) {\n      data.rotate = this.rotate\n    }\n    if (this.graphModel.overlapMode === OverlapMode.INCREASE) {\n      data.zIndex = this.zIndex\n    }\n    if (value) {\n      data.text = {\n        x,\n        y,\n        value,\n      }\n    }\n    return data\n  }\n\n  /**\n   * 用于在历史记录时获取节点数据，\n   * 在某些情况下，如果希望某个属性变化不引起history的变化，\n   * 可以重写此方法。\n   */\n  getHistoryData(): NodeData {\n    return this.getData()\n  }\n\n  /**\n   * 获取当前节点的properties\n   */\n  getProperties() {\n    return toJS(this.properties)\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取当前节点最外层g标签Attributes, 例如 className\n   * @returns 自定义节点样式\n   */\n  getOuterGAttributes(): LogicFlow.DomAttributes {\n    return {\n      className: '',\n    }\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取当前节点样式\n   * @returns 自定义节点样式\n   */\n  getNodeStyle(): CommonTheme {\n    return {\n      ...this.graphModel.theme.baseNode,\n      ...this.style,\n    }\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取当前节点文本样式\n   */\n  getTextStyle() {\n    // 透传 nodeText\n    const { nodeText } = this.graphModel.theme\n    return cloneDeep(nodeText)\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取当前节点旋转控制点的样式\n   */\n  getRotateControlStyle(): CommonTheme {\n    const { rotateControl } = this.graphModel.theme\n    return cloneDeep(rotateControl)\n  }\n\n  /**\n   * @overrideable 支持重写\n   * 获取当前节点缩放控制节点的样式\n   */\n  getResizeControlStyle() {\n    const { resizeControl } = this.graphModel.theme\n    return cloneDeep(resizeControl)\n  }\n\n  getResizeOutlineStyle() {\n    const { resizeOutline } = this.graphModel.theme\n    return cloneDeep(resizeOutline)\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取当前节点锚点样式\n   * @returns 自定义样式\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getAnchorStyle(_anchorInfo?: Point): LogicFlow.AnchorTheme {\n    const { anchor } = this.graphModel.theme\n    // 防止被重写覆盖主题。\n    return cloneDeep(anchor)\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取当前节点锚点拖出连线样式\n   * @returns 自定义锚点拖出样式\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getAnchorLineStyle(_anchorInfo?: Point): LogicFlow.AnchorLineTheme {\n    const { anchorLine } = this.graphModel.theme\n    return cloneDeep(anchorLine)\n  }\n\n  /**\n   * @overridable 支持重写\n   * 获取outline样式，重写可以定义此类型节点outline样式， 默认使用主题样式\n   * @returns 自定义outline样式\n   */\n  getOutlineStyle(): LogicFlow.OutlineTheme {\n    const { outline } = this.graphModel.theme\n    return cloneDeep(outline)\n  }\n\n  /**\n   * @overridable 在连接边时，是否允许这个节点为 source 节点，边到 target 节点\n   * @param target 目标节点\n   * @param sourceAnchor 源锚点\n   * @param targetAnchor 目标锚点\n   * @param edgeId 调整后边的 id，在开启 adjustEdgeStartAndEnd 后调整边连接的节点时会传入\n   * 详见：https://github.com/didi/LogicFlow/issues/926#issuecomment-1371823306\n   */\n  isAllowConnectedAsSource(\n    target: BaseNodeModel,\n    sourceAnchor?: Model.AnchorConfig,\n    targetAnchor?: Model.AnchorConfig,\n    edgeId?: string,\n  ): Model.ConnectRuleResult {\n    const rules = !this.hasSetSourceRules\n      ? this.getConnectedSourceRules()\n      : this.sourceRules\n    this.hasSetSourceRules = true\n    let isAllPass = true\n    let msg: string = ''\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i]\n      if (\n        !rule.validate.call(\n          this,\n          this,\n          target,\n          sourceAnchor,\n          targetAnchor,\n          edgeId,\n        )\n      ) {\n        isAllPass = false\n        msg = rule.message\n        break\n      }\n    }\n    return {\n      isAllPass,\n      msg,\n    }\n  }\n\n  /**\n   * 获取当前节点作为连接的起始节点规则。\n   */\n  getConnectedSourceRules(): Model.ConnectRule[] {\n    return this.sourceRules\n  }\n\n  /**\n   * @overridable 在连线时，判断是否允许这个节点为 target 节点\n   * @param source 源节点\n   * @param sourceAnchor 源锚点\n   * @param targetAnchor 目标锚点\n   * @param edgeId 调整后边的 id，在开启 adjustEdgeStartAndEnd 后调整边连接的节点时会传入\n   * 详见：https://github.com/didi/LogicFlow/issues/926#issuecomment-1371823306\n   */\n  isAllowConnectedAsTarget(\n    source: BaseNodeModel,\n    sourceAnchor?: Model.AnchorConfig,\n    targetAnchor?: Model.AnchorConfig,\n    edgeId?: string,\n  ): Model.ConnectRuleResult {\n    const rules = !this.hasSetTargetRules\n      ? this.getConnectedTargetRules()\n      : this.targetRules\n    this.hasSetTargetRules = true\n    let isAllPass = true\n    let msg: string = ''\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i]\n      if (\n        !rule.validate.call(\n          this,\n          source,\n          this,\n          sourceAnchor,\n          targetAnchor,\n          edgeId,\n        )\n      ) {\n        isAllPass = false\n        msg = rule.message\n        break\n      }\n    }\n    return {\n      isAllPass,\n      msg,\n    }\n  }\n\n  /**\n   * 内部方法\n   * 是否允许移动节点到新的位置\n   */\n  isAllowMoveNode(deltaX: number, deltaY: number): boolean | Model.IsAllowMove {\n    let isAllowMoveX = true\n    let isAllowMoveY = true\n    const rules = this.moveRules.concat(this.graphModel.nodeMoveRules)\n    for (const rule of rules) {\n      const r = rule(this, deltaX, deltaY)\n      if (!r) return false\n      if (typeof r === 'object') {\n        const r1 = r as Model.IsAllowMove\n        if (!r1.x && !r1.y) {\n          return false\n        }\n        isAllowMoveX = isAllowMoveX && r1.x\n        isAllowMoveY = isAllowMoveY && r1.y\n      }\n    }\n    return {\n      x: isAllowMoveX,\n      y: isAllowMoveY,\n    }\n  }\n\n  /**\n   * 获取作为连线终点时的所有规则。\n   */\n  getConnectedTargetRules(): Model.ConnectRule[] {\n    return this.targetRules\n  }\n\n  /**\n   * @returns Point[] 锚点坐标构成的数组\n   */\n  getAnchorsByOffset(): Model.AnchorConfig[] {\n    const { anchorsOffset, id, x, y } = this\n    if (anchorsOffset && anchorsOffset.length > 0) {\n      return anchorsOffset.map((el, idx) => {\n        if (el.length) {\n          el = el as LogicFlow.PointTuple // 历史数据格式\n          return {\n            id: `${id}_${idx}`,\n            x: x + el[0],\n            y: y + el[1],\n          }\n        }\n        el = el as Model.AnchorConfig\n        return {\n          ...el,\n          x: x + el.x,\n          y: y + el.y,\n          id: el.id || `${id}_${idx}`,\n        }\n      })\n    }\n    return this.getDefaultAnchor()\n  }\n\n  /**\n   * @overridable 子类重写此方法设置默认锚点\n   * 获取节点默认情况下的锚点\n   */\n  public getDefaultAnchor(): Model.AnchorConfig[] {\n    return []\n  }\n\n  /**\n   * @overridable 子类重写此方法获取手动连接边到节点时，需要连接的锚点\n   * 手动连接边到节点时，需要连接的锚点\n   */\n  public getTargetAnchor(position: Point): Model.AnchorInfo {\n    return getClosestAnchor(position, this)\n  }\n\n  /**\n   * 获取节点BBox\n   */\n  public getBounds(): Model.BoxBoundsPoint {\n    return {\n      x1: this.x - this.width / 2,\n      y1: this.y - this.height / 2,\n      x2: this.x + this.width / 2,\n      y2: this.y + this.height / 2,\n    }\n  }\n\n  get anchors(): Model.AnchorConfig[] {\n    const anchors = this.getAnchorsByOffset()\n    const { x, y, rotate } = this\n    anchors.forEach((anchor) => {\n      const { x: anchorX, y: anchorY } = anchor\n      const [e, f] = new Matrix([anchorX, anchorY, 1])\n        .translate(-x, -y)\n        .rotate(rotate)\n        .translate(x, y)[0]\n      anchor.x = e\n      anchor.y = f\n    })\n    return anchors\n  }\n\n  getAnchorInfo(anchorId: string | undefined): AnchorConfig | undefined {\n    if (isNil(anchorId)) return undefined\n\n    for (let i = 0; i < this.anchors.length; i++) {\n      const anchor = this.anchors[i]\n      if (anchor.id === anchorId) {\n        return anchor\n      }\n    }\n  }\n\n  @action addNodeMoveRules(fn: Model.NodeMoveRule) {\n    if (!this.moveRules.includes(fn)) {\n      this.moveRules.push(fn)\n    }\n  }\n\n  isAllowMoveByXORY(deltaX: number, deltaY: number, isIgnoreRule: boolean) {\n    let isAllowMoveX: boolean\n    let isAllowMoveY: boolean\n    if (isIgnoreRule) {\n      isAllowMoveX = true\n      isAllowMoveY = true\n    } else {\n      const r = this.isAllowMoveNode(deltaX, deltaY)\n      if (typeof r === 'boolean') {\n        isAllowMoveX = r\n        isAllowMoveY = r\n      } else {\n        isAllowMoveX = r.x\n        isAllowMoveY = r.y\n      }\n    }\n    return {\n      isAllowMoveX,\n      isAllowMoveY,\n    }\n  }\n\n  @action move(deltaX: number, deltaY: number, isIgnoreRule = false): boolean {\n    const { isAllowMoveX, isAllowMoveY } = this.isAllowMoveByXORY(\n      deltaX,\n      deltaY,\n      isIgnoreRule,\n    )\n    if (isAllowMoveX) {\n      this.x = this.x + deltaX\n      this.text && this.moveText(deltaX, 0)\n    }\n    if (isAllowMoveY) {\n      this.y = this.y + deltaY\n      this.text && this.moveText(0, deltaY)\n    }\n    return isAllowMoveX || isAllowMoveY\n  }\n\n  @action getMoveDistance(\n    deltaX: number,\n    deltaY: number,\n    isIgnoreRule = false,\n  ): [number, number] {\n    const { isAllowMoveX, isAllowMoveY } = this.isAllowMoveByXORY(\n      deltaX,\n      deltaY,\n      isIgnoreRule,\n    )\n    let moveX = 0\n    let moveY = 0\n\n    if (isAllowMoveX && deltaX) {\n      this.x = this.x + deltaX\n      this.text && this.moveText(deltaX, 0)\n      moveX = deltaX\n    }\n    if (isAllowMoveY && deltaY) {\n      this.y = this.y + deltaY\n      this.text && this.moveText(0, deltaY)\n      moveY = deltaY\n    }\n    return [moveX, moveY]\n  }\n\n  @action moveTo(x: number, y: number, isIgnoreRule = false): boolean {\n    const deltaX = x - this.x\n    const deltaY = y - this.y\n    if (!isIgnoreRule && !this.isAllowMoveNode(deltaX, deltaY)) {\n      return false\n    }\n    if (this.text) {\n      this.text && this.moveText(deltaX, deltaY)\n    }\n    this.x = x\n    this.y = y\n    return true\n  }\n\n  @action moveText(deltaX: number, deltaY: number): void {\n    const { x, y, value, draggable, editable } = this.text\n    this.text = {\n      value,\n      editable,\n      draggable,\n      x: x + deltaX,\n      y: y + deltaY,\n    }\n  }\n\n  @action updateText(value: string): void {\n    this.text = {\n      ...toJS(this.text),\n      value,\n    }\n  }\n\n  @action setSelected(flag = true): void {\n    this.isSelected = flag\n  }\n\n  @action setHovered(flag = true): void {\n    this.isHovered = flag\n    this.setIsShowAnchor(flag)\n  }\n\n  @action setIsShowAnchor(flag = true): void {\n    this.isShowAnchor = flag\n  }\n\n  @action setEnableRotate(flag = true): void {\n    this.enableRotate = flag\n  }\n\n  @action setEnableResize(flag = true): void {\n    this.enableResize = flag\n  }\n\n  @action setHitable(flag = true): void {\n    this.isHitable = flag\n  }\n\n  @action setHittable(flag = true): void {\n    this.isHittable = flag\n  }\n\n  @action setElementState(\n    state: number,\n    additionStateData?: Model.AdditionStateDataType,\n  ): void {\n    this.state = state\n    this.additionStateData = additionStateData\n  }\n\n  // TODO: 处理重复代码，setProperty 和 setProperties  -> 公用代码提到 updateProperties 中？\n  @action setProperty(key: string, val: any): void {\n    const preProperties = toJS(this.properties)\n    const nextProperties = {\n      ...preProperties,\n      [key]: formatData(val),\n    }\n    this.properties = nextProperties\n    this.setAttributes()\n\n    // 触发更新节点 properties:change 的事件\n    this.graphModel.eventCenter.emit(EventType.NODE_PROPERTIES_CHANGE, {\n      id: this.id,\n      keys: [key],\n      preProperties,\n      properties: nextProperties,\n    })\n  }\n\n  @action setProperties(properties: Record<string, any>): void {\n    const preProperties = toJS(this.properties)\n    const nextProperties = {\n      ...preProperties,\n      ...formatData(properties),\n    }\n    this.properties = nextProperties\n    this.setAttributes()\n\n    const updateKeys: string[] = []\n    mapKeys(properties, (val, key) => {\n      // key 存在于上一个 properties 并且与传入的值不相等 或者 key 不存在于上一个 properties\n      if (\n        (has(preProperties, key) && preProperties[key] !== val) ||\n        !has(preProperties, key)\n      ) {\n        updateKeys.push(key)\n      }\n    })\n\n    // 触发更新节点 properties:change 的事件\n    this.graphModel.eventCenter.emit(EventType.NODE_PROPERTIES_CHANGE, {\n      id: this.id,\n      keys: updateKeys,\n      preProperties,\n      properties: nextProperties,\n    })\n  }\n\n  @action deleteProperty(key: string): void {\n    delete this.properties[key]\n    this.setAttributes()\n  }\n\n  @action setStyle(key: string, val: any): void {\n    this.style = {\n      ...this.style,\n      [key]: formatData(val),\n    }\n  }\n\n  @action setStyles(styles: Record<string, any>): void {\n    this.style = {\n      ...this.style,\n      ...formatData(styles),\n    }\n  }\n\n  @action updateStyles(styles: Record<string, any>): void {\n    this.style = {\n      ...formatData(styles),\n    }\n  }\n\n  @action setZIndex(zIndex = 1): void {\n    this.zIndex = zIndex\n  }\n\n  @action updateAttributes(attributes: any) {\n    assign(this, attributes)\n  }\n}\n\nexport namespace BaseNodeModel {\n  export type PointTuple = [number, number]\n  export type AnchorsOffsetItem = PointTuple | Point\n}\n\nexport default BaseNodeModel\n", "import { cloneDeep } from 'lodash-es'\nimport { computed, observable } from 'mobx'\nimport BaseNodeModel from './BaseNodeModel'\nimport GraphModel from '../GraphModel'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType } from '../../constant'\nimport { ResizeControl } from '../../view/Control'\n\nimport NodeConfig = LogicFlow.NodeConfig\nimport ResizeInfo = ResizeControl.ResizeInfo\nimport ResizeNodeData = ResizeControl.ResizeNodeData\n\nexport type ICircleNodeProperties = {\n  r?: number\n  style?: LogicFlow.CommonTheme\n  textStyle?: LogicFlow.CommonTheme\n\n  [key: string]: any\n}\n\nexport class CircleNodeModel extends BaseNodeModel {\n  modelType = ModelType.CIRCLE_NODE\n  @observable properties: ICircleNodeProperties = {}\n  @observable r = 50\n\n  @computed get width(): number {\n    return this.r * 2\n  }\n\n  @computed get height(): number {\n    return this.r * 2\n  }\n\n  constructor(data: NodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    this.properties = data.properties || {}\n\n    this.setAttributes()\n  }\n\n  setAttributes() {\n    super.setAttributes()\n\n    const { r } = this.properties\n    if (r) {\n      this.r = r\n    }\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle()\n    const {\n      graphModel: {\n        theme: { circle },\n      },\n    } = this\n    const { style: customStyle = {} } = this.properties\n    return {\n      ...style,\n      ...cloneDeep(circle),\n      ...cloneDeep(customStyle),\n    }\n  }\n\n  getDefaultAnchor() {\n    const { x, y, r } = this\n    return [\n      { x, y: y - r, id: `${this.id}_0` },\n      { x: x + r, y, id: `${this.id}_1` },\n      { x, y: y + r, id: `${this.id}_2` },\n      { x: x - r, y, id: `${this.id}_3` },\n    ]\n  }\n\n  resize(resizeInfo: ResizeInfo): ResizeNodeData {\n    const { width, deltaX, deltaY } = resizeInfo\n    // 移动节点以及文本内容\n    this.move(deltaX / 2, deltaY / 2)\n\n    this.r = width\n    this.setProperties({\n      r: width,\n    })\n\n    return this.getData()\n  }\n}\n\nexport default CircleNodeModel\n", "import { cloneDeep, forEach, map } from 'lodash-es'\nimport { computed, observable } from 'mobx'\nimport GraphModel from '../GraphModel'\nimport BaseNodeModel from './BaseNodeModel'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType } from '../../constant'\nimport { ResizeControl } from '../../view/Control'\n\nimport Point = LogicFlow.Point\nimport PointTuple = LogicFlow.PointTuple\nimport NodeConfig = LogicFlow.NodeConfig\nimport ResizeInfo = ResizeControl.ResizeInfo\nimport ResizeNodeData = ResizeControl.ResizeNodeData\n\nexport type IDiamondNodeProperties = {\n  rx?: number\n  ry?: number\n  style?: LogicFlow.CommonTheme\n  textStyle?: LogicFlow.CommonTheme\n\n  [key: string]: any\n}\n\nexport class DiamondNodeModel extends BaseNodeModel {\n  modelType = ModelType.DIAMOND_NODE\n  @observable rx = 30\n  @observable ry = 50\n  @observable properties: IDiamondNodeProperties = {}\n\n  constructor(data: NodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    this.properties = data.properties || {}\n\n    this.setAttributes()\n  }\n\n  setAttributes() {\n    super.setAttributes()\n\n    const { rx, ry } = this.properties\n    if (rx) {\n      this.rx = rx\n    }\n    if (ry) {\n      this.ry = ry\n    }\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle()\n    const {\n      graphModel: {\n        theme: { diamond },\n      },\n    } = this\n    const { style: customStyle = {} } = this.properties\n    return {\n      ...style,\n      ...cloneDeep(diamond),\n      ...cloneDeep(customStyle),\n    }\n  }\n\n  @computed get points(): PointTuple[] {\n    const { x, y, rx, ry } = this\n    return [\n      [x, y - ry],\n      [x + rx, y],\n      [x, y + ry],\n      [x - rx, y],\n    ]\n  }\n\n  @computed get pointsPosition(): Point[] {\n    return map(this.points, ([x, y]) => ({ x, y }))\n  }\n\n  @computed get width(): number {\n    let min = Number.MAX_SAFE_INTEGER\n    let max = Number.MIN_SAFE_INTEGER\n    forEach(this.points, ([x]) => {\n      if (x < min) {\n        min = x\n      }\n      if (x > max) {\n        max = x\n      }\n    })\n    return max - min\n  }\n\n  @computed get height(): number {\n    let min = Number.MAX_SAFE_INTEGER\n    let max = Number.MIN_SAFE_INTEGER\n    forEach(this.points, ([, y]) => {\n      if (y < min) {\n        min = y\n      }\n      if (y > max) {\n        max = y\n      }\n    })\n    return max - min\n  }\n\n  getDefaultAnchor() {\n    return map(this.points, ([x, y], idx) => ({\n      x,\n      y,\n      id: `${this.id}_${idx}`,\n    }))\n  }\n\n  resize(resizeInfo: ResizeInfo): ResizeNodeData {\n    const { width, height, deltaX, deltaY } = resizeInfo\n    // 移动节点以及文本内容\n    this.move(deltaX / 2, deltaY / 2)\n\n    this.rx = width\n    this.ry = height\n    this.setProperties({\n      rx: width,\n      ry: height,\n    })\n\n    return this.getData()\n  }\n}\n\nexport default DiamondNodeModel\n", "import { cloneDeep } from 'lodash-es'\nimport { computed, observable } from 'mobx'\nimport BaseNodeModel from './BaseNodeModel'\nimport GraphModel from '../GraphModel'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType } from '../../constant'\nimport { ResizeControl } from '../../view/Control'\n\nimport NodeConfig = LogicFlow.NodeConfig\nimport ResizeInfo = ResizeControl.ResizeInfo\nimport ResizeNodeData = ResizeControl.ResizeNodeData\n\nexport type IEllipseNodeProperties = {\n  rx?: number\n  ry?: number\n  style?: LogicFlow.CommonTheme\n  textStyle?: LogicFlow.CommonTheme\n\n  [key: string]: any\n}\n\nexport class EllipseNodeModel extends BaseNodeModel {\n  modelType = ModelType.ELLIPSE_NODE\n  @observable rx = 30\n  @observable ry = 45\n  @observable properties: IEllipseNodeProperties = {}\n\n  constructor(data: NodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    this.properties = data.properties || {}\n\n    this.setAttributes()\n  }\n\n  setAttributes() {\n    super.setAttributes()\n\n    const { rx, ry } = this.properties\n    if (rx) {\n      this.rx = rx\n    }\n    if (ry) {\n      this.ry = ry\n    }\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle()\n    const {\n      graphModel: {\n        theme: { ellipse },\n      },\n    } = this\n    const { style: customStyle = {} } = this.properties\n    return {\n      ...style,\n      ...cloneDeep(ellipse),\n      ...cloneDeep(customStyle),\n    }\n  }\n\n  @computed get width(): number {\n    return this.rx * 2\n  }\n\n  @computed get height(): number {\n    return this.ry * 2\n  }\n\n  getDefaultAnchor() {\n    const { x, y, rx, ry } = this\n    return [\n      { x, y: y - ry, id: `${this.id}_0` },\n      { x: x + rx, y, id: `${this.id}_1` },\n      { x, y: y + ry, id: `${this.id}_2` },\n      { x: x - rx, y, id: `${this.id}_3` },\n    ]\n  }\n\n  resize(resizeInfo: ResizeInfo): ResizeNodeData {\n    const { width, height, deltaX, deltaY } = resizeInfo\n    // 移动节点以及文本内容\n    this.move(deltaX / 2, deltaY / 2)\n\n    this.rx = width\n    this.ry = height\n    this.setProperties({\n      rx: width,\n      ry: height,\n    })\n\n    return this.getData()\n  }\n}\n\nexport default EllipseNodeModel\n", "import { cloneDeep, map } from 'lodash-es'\nimport { computed, observable } from 'mobx'\nimport BaseNodeModel from './BaseNodeModel'\nimport GraphModel from '../GraphModel'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType } from '../../constant'\nimport { ResizeControl } from '../../view/Control'\nimport Point = LogicFlow.Point\nimport PointTuple = LogicFlow.PointTuple\nimport NodeConfig = LogicFlow.NodeConfig\nimport ResizeInfo = ResizeControl.ResizeInfo\nimport ResizeNodeData = ResizeControl.ResizeNodeData\nimport { normalizePolygon } from '../../util'\n\nexport type IPolygonNodeProperties = {\n  points?: PointTuple[]\n  width?: number\n  height?: number\n  style?: LogicFlow.CommonTheme\n  textStyle?: LogicFlow.CommonTheme\n\n  [key: string]: any\n}\n\nexport class PolygonNodeModel extends BaseNodeModel {\n  modelType = ModelType.POLYGON_NODE\n  @observable points: PointTuple[] = [\n    [50, 0],\n    [100, 50],\n    [50, 100],\n    [0, 50], // 菱形\n    // [0,100], [50,25], [50,75], [100,0] // 闪电\n    // [100, 10],\n    // [40, 198],\n    // [190, 78],\n    // [10, 78],\n    // [160, 198], // 五角星\n  ]\n  @observable properties: IPolygonNodeProperties = {}\n\n  constructor(data: NodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    this.properties = data.properties || {}\n\n    this.setAttributes()\n  }\n\n  setAttributes() {\n    super.setAttributes()\n\n    const { points, width, height } = this.properties\n    // DONE: 如果设置了 points，又设置了节点的宽高，则需要做如下操作\n    // 1. 将 points 的位置置零，即将图形向原点移动（找到 points 中 x,y 的最小值，所有坐标值减掉该值）\n    // 2. 按宽高的比例重新计算最新的 points\n    // if (points) {\n    //   this.points = points\n    // }\n    const nextPoints = points || this.points\n    this.points = normalizePolygon(nextPoints, width, height)\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle()\n    const {\n      graphModel: {\n        theme: { polygon },\n      },\n    } = this\n    const { style: customStyle = {} } = this.properties\n    return {\n      ...style,\n      ...cloneDeep(polygon),\n      ...cloneDeep(customStyle),\n    }\n  }\n\n  /**\n   * 由于大多数情况下，我们初始化拿到的多边形坐标都是基于原点的（例如绘图工具到处的svg）。\n   * 在logicflow中对多边形进行移动，我们不需要去更新points，\n   * 而是去更新多边形中心点即可。\n   */\n  @computed get pointsPosition(): Point[] {\n    const { x, y, width, height } = this\n    return this.points.map((item) => ({\n      x: item[0] + x - width / 2,\n      y: item[1] + y - height / 2,\n    }))\n  }\n\n  @computed get width(): number {\n    let min = Number.MAX_SAFE_INTEGER\n    let max = Number.MIN_SAFE_INTEGER\n    this.points.forEach(([x]) => {\n      if (x < min) {\n        min = x\n      }\n      if (x > max) {\n        max = x\n      }\n    })\n    return max - min\n  }\n\n  @computed get height(): number {\n    let min = Number.MAX_SAFE_INTEGER\n    let max = Number.MIN_SAFE_INTEGER\n    this.points.forEach(([, y]) => {\n      if (y < min) {\n        min = y\n      }\n      if (y > max) {\n        max = y\n      }\n    })\n    return max - min\n  }\n\n  getDefaultAnchor() {\n    const { x, y, width, height, points } = this\n    return points.map(([x1, y1], idx) => ({\n      x: x + x1 - width / 2,\n      y: y + y1 - height / 2,\n      id: `${this.id}_${idx}`,\n    }))\n  }\n\n  resize(resizeInfo: ResizeInfo): ResizeNodeData {\n    const { width, height, deltaX, deltaY } = resizeInfo\n    // 移动节点以及文本内容\n    this.move(deltaX / 2, deltaY / 2)\n\n    const nextPoints: PointTuple[] = map(this.points, ([x, y]) => [\n      (x * width) / this.width,\n      (y * height) / this.height,\n    ])\n    this.points = nextPoints\n\n    this.properties.points = nextPoints\n    // this.setProperties({\n    //   points: toJS(nextPoints),\n    // })\n\n    return this.getData()\n  }\n}\n\nexport default PolygonNodeModel\n", "import { cloneDeep } from 'lodash-es'\nimport { observable } from 'mobx'\nimport BaseNodeModel from './BaseNodeModel'\nimport GraphModel from '../GraphModel'\nimport LogicFlow from '../../LogicFlow'\nimport { ModelType } from '../../constant'\n\nexport type IRectNodeModel = {\n  width?: number\n  height?: number\n  radius?: number\n  style?: LogicFlow.CommonTheme\n  textStyle?: LogicFlow.CommonTheme\n\n  [key: string]: any\n}\n\nexport class RectNodeModel extends BaseNodeModel {\n  modelType = ModelType.RECT_NODE\n  @observable radius = 0\n  @observable properties: IRectNodeModel = {}\n\n  constructor(data: LogicFlow.NodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n\n    // TODO：类字段初始化会覆盖 super、setAttributes 中设置的属性\n    this.properties = data.properties || {}\n    // TODO: bug here, 上面更新 properties 会触发 setAttributes，下面再主动调用，会导致触发两次\n    this.setAttributes()\n  }\n\n  setAttributes() {\n    super.setAttributes()\n\n    const { width, height, radius } = this.properties\n    if (width) this.width = width\n    if (height) this.height = height\n    // 矩形特有\n    if (radius) this.radius = radius\n  }\n\n  getDefaultAnchor() {\n    const { x, y, width, height } = this\n    return [\n      { x, y: y - height / 2, id: `${this.id}_0` },\n      { x: x + width / 2, y, id: `${this.id}_1` },\n      { x, y: y + height / 2, id: `${this.id}_2` },\n      { x: x - width / 2, y, id: `${this.id}_3` },\n    ]\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle()\n    const { rect } = this.graphModel.theme\n    const { style: customStyle = {} } = this.properties\n    return {\n      ...style,\n      ...cloneDeep(rect),\n      ...cloneDeep(customStyle),\n    }\n  }\n}\n\nexport default RectNodeModel\n", "import { cloneDeep } from 'lodash-es'\nimport { computed } from 'mobx'\nimport BaseNodeModel from './BaseNodeModel'\nimport { ModelType } from '../../constant'\nimport { getSvgTextWidthHeight } from '../../util'\n\nexport class TextNodeModel extends BaseNodeModel {\n  modelType = ModelType.TEXT_NODE\n\n  getTextStyle() {\n    const style = super.getTextStyle()\n    const { text } = this.graphModel.theme\n    return {\n      ...style,\n      ...cloneDeep(text),\n    }\n  }\n  @computed get width(): number {\n    const rows = String(this.text.value).split(/[\\r\\n]/g)\n    const { fontSize } = this.getTextStyle()\n    const { width } = getSvgTextWidthHeight({\n      rows,\n      fontSize,\n      rowsLength: rows.length,\n    })\n    return width\n  }\n\n  @computed get height(): number {\n    const rows = String(this.text.value).split(/[\\r\\n]/g)\n    const { fontSize } = this.getTextStyle()\n    const { height } = getSvgTextWidthHeight({\n      rows,\n      fontSize,\n      rowsLength: rows.length,\n    })\n    return height\n  }\n}\n\nexport default TextNodeModel\n", "import BaseNodeModel from './BaseNodeModel'\nimport { Model } from '../BaseModel'\nimport { ModelType } from '../../constant'\n\nimport AnchorConfig = Model.AnchorConfig\nimport { observable } from 'mobx'\nimport LogicFlow from '../../LogicFlow'\nimport GraphModel from '../GraphModel'\n\nexport type IHtmlNodeProperties = {\n  width?: number\n  height?: number\n  style?: LogicFlow.CommonTheme\n  textStyle?: LogicFlow.CommonTheme\n\n  [key: string]: any\n}\n\nexport class HtmlNodeModel extends BaseNodeModel {\n  modelType = ModelType.HTML_NODE\n  @observable properties: IHtmlNodeProperties = {}\n\n  constructor(data: LogicFlow.NodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    this.properties = data.properties || {}\n\n    this.setAttributes()\n  }\n\n  setAttributes() {\n    super.setAttributes()\n\n    const { width, height } = this.properties\n    if (width) this.width = width\n    if (height) this.height = height\n  }\n\n  getDefaultAnchor(): AnchorConfig[] {\n    const { x, y, width, height } = this\n    return [\n      { x, y: y - height / 2, id: `${this.id}_0` },\n      { x: x + width / 2, y, id: `${this.id}_1` },\n      { x, y: y + height / 2, id: `${this.id}_2` },\n      { x: x - width / 2, y, id: `${this.id}_3` },\n    ]\n  }\n}\n\nexport default HtmlNodeModel\n", "import { assign, pick } from 'lodash-es'\nimport { observable, action } from '../util/mobx'\n\nexport interface EditConfigInterface {\n  /**\n   * 是否为静默模式\n   */\n  isSilentMode?: boolean\n  /**\n   * 禁止缩放画布\n   */\n  stopZoomGraph?: boolean\n  /**\n   * 禁止鼠标滚动移动画布\n   */\n  stopScrollGraph?: boolean\n  /**\n   * 禁止拖动画布，默认为false\n   * - true：完全禁止移动\n   * - vertical： 禁止垂直方向拖动\n   * - horizontal：禁止水平方向拖动\n   * - [number, number, number, number]：[minX, minY, maxX, maxY] 画布可拖动范围\n   */\n  stopMoveGraph?:\n    | boolean\n    | 'vertical'\n    | 'horizontal'\n    | [number, number, number, number]\n  /**\n   * 允许调整边\n   */\n  adjustEdge?: boolean\n  /**\n   * 允许调整边起点和终点\n   */\n  adjustEdgeStartAndEnd?: boolean\n  /**\n   * 允许拖动节点\n   */\n  adjustNodePosition?: boolean\n  /**\n   * 隐藏节点所有锚点\n   */\n  hideAnchors?: boolean\n  /**\n   * 是否允许节点旋转（旋转点的显隐）\n   */\n  allowRotate?: boolean\n  /**\n   * 是否允许节点缩放（缩放调整点的显隐）\n   */\n  allowResize?: boolean\n  /**\n   * 显示节点悬浮时的外框\n   */\n  hoverOutline?: boolean\n  /**\n   * 节点被选中时是否显示outline\n   */\n  nodeSelectedOutline?: boolean\n  /**\n   * 边被选中时是否显示outline\n   */\n  edgeSelectedOutline?: boolean\n  /**\n   * 允许节点文本可以编辑\n   */\n  nodeTextEdit?: boolean\n  /**\n   * 允许边文本可以编辑\n   */\n  edgeTextEdit?: boolean\n  /**\n   * 允许文本编辑\n   */\n  textEdit?: boolean\n  /**\n   * 允许节点文本可以拖拽\n   */\n  nodeTextDraggable?: boolean\n  /**\n   * 允许边文本可以拖拽\n   */\n  edgeTextDraggable?: boolean\n  /**\n   * 多选按键, 支持meta(cmd)、shift、alt\n   * 不支持ctrl，ctrl会触发contextmenu\n   */\n  multipleSelectKey?: string\n}\n\nconst SilentConfig = {\n  stopZoomGraph: false,\n  stopScrollGraph: false,\n  stopMoveGraph: false,\n  adjustEdge: false,\n  adjustEdgeStartAndEnd: false,\n  adjustNodePosition: false,\n  hideAnchors: true,\n  allowRotate: false,\n  allowResize: false,\n  nodeSelectedOutline: true,\n  nodeTextEdit: false,\n  edgeTextEdit: false,\n  nodeTextDraggable: false,\n  edgeTextDraggable: false,\n}\n\nconst keys = [\n  'isSilentMode',\n  'stopZoomGraph',\n  'stopScrollGraph',\n  'stopMoveGraph',\n  'adjustEdge',\n  'adjustEdgeMiddle',\n  'adjustEdgeStartAndEnd',\n  'adjustNodePosition',\n  'hideAnchors',\n  'allowRotate',\n  'allowResize',\n  'hoverOutline',\n  'nodeSelectedOutline',\n  'edgeSelectedOutline',\n  'nodeTextEdit',\n  'edgeTextEdit',\n  'nodeTextDraggable',\n  'edgeTextDraggable',\n  'multipleSelectKey',\n  'autoExpand',\n]\n/**\n * 页面编辑配置\n */\nexport class EditConfigModel {\n  @observable isSilentMode = false\n  @observable stopZoomGraph = false\n  @observable stopScrollGraph = false\n  @observable stopMoveGraph = false\n  @observable adjustEdge = true\n  @observable adjustEdgeMiddle = false\n  @observable adjustEdgeStartAndEnd = false\n  @observable adjustNodePosition = true\n  @observable hideAnchors = false\n  @observable allowRotate = false\n  @observable allowResize = false\n  @observable hoverOutline = true\n  @observable nodeSelectedOutline = true\n  @observable edgeSelectedOutline = true\n  @observable nodeTextEdit = true\n  @observable edgeTextEdit = true\n  @observable nodeTextDraggable = false\n  @observable edgeTextDraggable = false\n  @observable autoExpand = false\n  multipleSelectKey = ''\n  defaultConfig = {} // 设置为静默模式之前的配置，在取消静默模式后恢复\n  constructor(config: EditConfigInterface) {\n    assign(this, this.getConfigDetail(config))\n  }\n  @action\n  updateEditConfig(config) {\n    const newConfig = this.getConfigDetail(config)\n    assign(this, newConfig)\n  }\n  getConfigDetail(config) {\n    const { isSilentMode, textEdit } = config\n    const conf = {}\n    // false表示从静默模式恢复\n    if (isSilentMode === false) {\n      assign(conf, this.defaultConfig)\n    }\n    // 如果不传，默认undefined表示非静默模式\n    if (isSilentMode === true && isSilentMode !== this.isSilentMode) {\n      // https://github.com/didi/LogicFlow/issues/1180\n      // 如果重复调用isSilentMode=true多次，会导致this.defaultConfig状态保存错误：保存为修改之后的Config\n      // 因此需要阻止重复赋值为true，使用config.isSilentMode !== this.isSilentMode\n      const silentConfig = pick(SilentConfig, keys)\n      // 在修改之前，\n      this.defaultConfig = {\n        stopZoomGraph: this.stopZoomGraph,\n        stopScrollGraph: this.stopScrollGraph,\n        stopMoveGraph: this.stopMoveGraph,\n        adjustEdge: this.adjustEdge,\n        adjustEdgeMiddle: this.adjustEdgeMiddle,\n        adjustEdgeStartAndEnd: this.adjustEdgeStartAndEnd,\n        adjustNodePosition: this.adjustNodePosition,\n        hideAnchors: this.hideAnchors,\n        allowRotate: this.allowRotate,\n        allowResize: this.allowResize,\n        hoverOutline: this.hoverOutline,\n        nodeSelectedOutline: this.nodeSelectedOutline,\n        edgeSelectedOutline: this.edgeSelectedOutline,\n        nodeTextEdit: this.nodeTextEdit,\n        edgeTextEdit: this.edgeTextEdit,\n        nodeTextDraggable: this.nodeTextDraggable,\n        edgeTextDraggable: this.edgeTextDraggable,\n        autoExpand: this.autoExpand,\n      }\n      assign(conf, silentConfig)\n    }\n    // 如果不传，默认undefined表示允许文本编辑\n    if (textEdit === false) {\n      assign(conf, {\n        nodeTextEdit: false,\n        edgeTextEdit: false,\n      })\n    }\n    const userConfig = pick(config, keys)\n    return assign(conf, userConfig)\n  }\n  getConfig() {\n    return pick(this, keys)\n  }\n}\n\nexport default EditConfigModel\n", "import { EventArgs } from './eventArgs'\n\nexport interface EventType<T extends string = string> {\n  readonly callback: EventCallback<T>\n  readonly once: boolean\n}\n\nexport type EventsType<T extends string = string> = {\n  [k in T]?: EventType<k>[]\n}\n\nexport type CallbackArgs<T extends string = string> = T extends keyof EventArgs\n  ? EventArgs[T]\n  : // 如果不是内部定义的事件类型，那么允许用户抛出任何类型的参数\n    // 这部分的类型定义由用户自己来保证\n    any\n\nexport type EventCallback<T extends string = string> = (\n  args: CallbackArgs<T>,\n) => void\n\nconst WILDCARD = '*'\n\n/* event-emitter */\nexport default class EventEmitter {\n  private _events: EventsType = {}\n\n  /**\n   * 监听一个事件\n   * @param evt 事件名称\n   * @param callback 回调函数\n   * @param once 是否只监听一次\n   */\n  on<T extends keyof EventArgs>(\n    evt: T,\n    callback: EventCallback<T>,\n    once?: boolean,\n  ): void\n  on<T extends string>(evt: T, callback: EventCallback<T>, once?: boolean): void\n  on(evt: string, callback: EventCallback, once?: boolean) {\n    evt?.split(',').forEach((evKey) => {\n      evKey = evKey.trim()\n      if (!this._events[evKey]) {\n        this._events[evKey] = []\n      }\n      this._events[evKey]!.push({\n        callback,\n        once: !!once,\n      })\n    })\n  }\n\n  /**\n   * 监听一个事件一次\n   * @param evt 事件名称\n   * @param callback 回调函数\n   */\n  once<T extends keyof EventArgs>(\n    evt: T,\n    callback: (args: EventArgs[T]) => void,\n  ): void\n  once<T extends string>(evt: T, callback: EventCallback<T>): void\n  once(evt: string, callback: EventCallback) {\n    evt?.split(',').forEach((evKey) => {\n      evKey = evKey.trim()\n      this.on(evKey, callback, true)\n    })\n  }\n\n  /**\n   * 触发一个事件\n   * @param evts\n   * @param eventArgs\n   */\n  emit<T extends keyof EventArgs>(evts: T, eventArgs: CallbackArgs<T>): void\n  emit<T extends string>(evts: T, eventArgs: CallbackArgs<T>): void\n  emit(evts: string, eventArgs?: EventCallback) {\n    evts?.split(',').forEach((evt) => {\n      const events = this._events[evt] || []\n      const wildcardEvents = this._events[WILDCARD] || []\n      // 实际的处理 emit 方法\n      const doEmit = (es: EventType[]) => {\n        let { length } = es\n        for (let i = 0; i < length; i++) {\n          if (!es[i]) {\n            continue\n          }\n          const { callback, once } = es[i]\n          if (once) {\n            es.splice(i, 1)\n            if (es.length === 0) {\n              delete this._events[evt]\n            }\n            length--\n            i--\n          }\n          callback.apply(this, [eventArgs])\n        }\n      }\n      doEmit(events)\n      doEmit(wildcardEvents)\n    })\n  }\n\n  /**\n   * 取消事件监听\n   * @param evts 事件名称\n   * @param callback 回调函数\n   *\n   * - evts 为空时，清除所有事件的监听器\n   * - evts 非空，callback 为空时，清除指定事件的所有监听器\n   * - evts 非空，callback 非空，进行对象比较，清除指定事件的指定监听器\n   */\n  off<T extends keyof EventArgs>(\n    evts: T,\n    callback?: (args: EventArgs[T]) => void,\n  ): void\n  off<T extends string>(evts: T, callback?: EventCallback<T>): void\n  off(evts: string, callback?: EventCallback) {\n    if (!evts) {\n      // evt 为空全部清除\n      this._events = {}\n    }\n    evts.split(',').forEach((evt) => {\n      if (!callback) {\n        // evt 存在，callback 为空，清除事件所有方法\n        delete this._events[evt]\n      } else {\n        // evt 存在，callback 存在，清除匹配的\n        const events = this._events[evt] || []\n        let { length } = events\n        for (let i = 0; i < length; i++) {\n          if (events[i].callback === callback) {\n            events.splice(i, 1)\n            length--\n            i--\n          }\n        }\n        if (events.length === 0) {\n          delete this._events[evt]\n        }\n      }\n    })\n  }\n\n  /* 当前所有的事件 */\n  getEvents() {\n    return this._events\n  }\n}\n\nexport { EventEmitter, EventArgs }\n", "import { find, forEach, map } from 'lodash-es'\nimport { action, computed, observable } from 'mobx'\nimport {\n  BaseEdgeModel,\n  BaseNodeModel,\n  EditConfigModel,\n  Model,\n  PolylineEdgeModel,\n  TransformModel,\n} from '.'\nimport {\n  DEFAULT_VISIBLE_SPACE,\n  ELEMENT_MAX_Z_INDEX,\n  ElementState,\n  ElementType,\n  EventType,\n  ModelType,\n  OverlapMode,\n} from '../constant'\nimport LogicFlow from '../LogicFlow'\nimport { Options as LFOptions } from '../options'\nimport {\n  createEdgeGenerator,\n  createUuid,\n  formatData,\n  getClosestPointOfPolyline,\n  getMinIndex,\n  getNodeAnchorPosition,\n  getNodeBBox,\n  getZIndex,\n  isPointInArea,\n  setupAnimation,\n  setupTheme,\n  snapToGrid,\n  updateTheme,\n} from '../util'\nimport EventEmitter from '../event/eventEmitter'\n\nimport Position = LogicFlow.Position\nimport PointTuple = LogicFlow.PointTuple\nimport GraphData = LogicFlow.GraphData\nimport NodeConfig = LogicFlow.NodeConfig\nimport BaseNodeModelCtor = LogicFlow.BaseNodeModelCtor\nimport BaseEdgeModelCtor = LogicFlow.BaseEdgeModelCtor\n\nexport interface Constructable<T> {\n  new (...args: any): T\n}\n\nexport class GraphModel {\n  /**\n   * LogicFlow画布挂载元素\n   * 也就是初始化LogicFlow实例时传入的container\n   */\n  public readonly rootEl: HTMLElement\n  readonly flowId?: string // 流程图 ID\n  @observable width: number // 画布宽度\n  @observable height: number // 画布高度\n\n  // 流程图主题配置\n  theme: LogicFlow.Theme\n  // 事件中心\n  readonly eventCenter: EventEmitter\n  // 维护所有节点和边类型对应的 model\n  readonly modelMap: Map<string, LogicFlow.GraphElementCtor> = new Map()\n  /**\n   * 位于当前画布顶部的元素\n   * 此元素只在堆叠模式为默认模式下存在\n   * 用于在默认模式下将之前的顶部元素回复初始高度\n   */\n  topElement?: BaseNodeModel | BaseEdgeModel\n  // 控制是否开启动画\n  animation?: boolean | LFOptions.AnimationConfig\n  // 自定义全局 id 生成器\n  idGenerator?: (type?: string) => string | undefined\n  // 节点间连线、连线变更时的边的生成规则\n  edgeGenerator: LFOptions.Definition['edgeGenerator']\n\n  /**\n   * 节点移动规则判断\n   * 在节点移动的时候，会出发此数组中的所有规则判断\n   */\n\n  nodeMoveRules: Model.NodeMoveRule[] = []\n  /**\n   * 获取自定义连线轨迹\n   */\n  customTrajectory: LFOptions.Definition['customTrajectory']\n\n  // 在图上操作创建边时，默认使用的边类型.\n  @observable edgeType: string\n  // 当前图上所有节点的model\n  @observable nodes: BaseNodeModel[] = []\n  // 当前图上所有边的model\n  @observable edges: BaseEdgeModel[] = []\n  // 外部拖动节点进入画布的过程中，用fakeNode来和画布上正是的节点区分开\n  @observable fakeNode?: BaseNodeModel | null\n\n  /**\n   * 元素重合时堆叠模式：\n   * - DEFAULT（默认模式）：节点和边被选中，会被显示在最上面。当取消选中后，元素会恢复之前的层级\n   * - INCREASE（递增模式）：节点和边被选中，会被显示在最上面。当取消选中后，元素会保持当前层级\n   */\n  @observable overlapMode = OverlapMode.DEFAULT\n  // 背景配置\n  @observable background?: boolean | LFOptions.BackgroundConfig\n  // 网格大小\n  @observable gridSize: number = 1\n  // 控制画布的缩放、平移\n  @observable transformModel: TransformModel\n  // 控制流程图编辑相关配置项 Model\n  @observable editConfigModel: EditConfigModel\n  // 控制是否开启局部渲染\n  @observable partial: boolean = false;\n\n  // 用户自定义属性\n  [propName: string]: any\n\n  constructor(options: LFOptions.Common) {\n    const {\n      container,\n      partial,\n      background = {},\n      grid,\n      idGenerator,\n      edgeGenerator,\n      animation,\n      customTrajectory,\n    } = options\n    this.rootEl = container\n    this.partial = !!partial\n    this.background = background\n    if (typeof grid === 'object') {\n      this.gridSize = grid.size || 1 // 默认 gridSize 设置为 1\n    }\n    this.theme = setupTheme(options.style)\n    this.edgeType = options.edgeType || 'polyline'\n    this.animation = setupAnimation(animation)\n    this.overlapMode = options.overlapMode || OverlapMode.DEFAULT\n\n    this.width = options.width || this.rootEl.getBoundingClientRect().width\n    this.height = options.height || this.rootEl.getBoundingClientRect().height\n\n    this.eventCenter = new EventEmitter()\n    this.editConfigModel = new EditConfigModel(options)\n    this.transformModel = new TransformModel(this.eventCenter, options)\n\n    this.flowId = createUuid()\n    this.idGenerator = idGenerator\n    this.edgeGenerator = createEdgeGenerator(this, edgeGenerator)\n    this.customTrajectory = customTrajectory\n  }\n\n  @computed get nodesMap(): GraphModel.NodesMapType {\n    return this.nodes.reduce((nMap, model, index) => {\n      nMap[model.id] = {\n        index,\n        model,\n      }\n      return nMap\n    }, {} as GraphModel.NodesMapType)\n  }\n\n  @computed get edgesMap(): {\n    [key: string]: { index: number; model: BaseEdgeModel }\n  } {\n    return this.edges.reduce((eMap, model, index) => {\n      eMap[model.id] = {\n        index,\n        model,\n      }\n      return eMap\n    }, {})\n  }\n\n  @computed get modelsMap(): GraphModel.ModelsMapType {\n    return [...this.nodes, ...this.edges].reduce((eMap, model) => {\n      eMap[model.id] = model\n      return eMap\n    }, {})\n  }\n\n  /**\n   * 基于zIndex对元素进行排序。\n   * todo: 性能优化\n   */\n  @computed get sortElements() {\n    const elements = [...this.nodes, ...this.edges].sort(\n      (a, b) => a.zIndex - b.zIndex,\n    )\n\n    // 只显示可见区域的节点和边\n    const visibleElements: (BaseNodeModel | BaseEdgeModel)[] = []\n    // TODO: 缓存，优化计算效率 by xutao. So what to do?\n    const visibleLt: PointTuple = [\n      -DEFAULT_VISIBLE_SPACE,\n      -DEFAULT_VISIBLE_SPACE,\n    ]\n    const visibleRb: PointTuple = [\n      this.width + DEFAULT_VISIBLE_SPACE,\n      this.height + DEFAULT_VISIBLE_SPACE,\n    ]\n    for (let i = 0; i < elements.length; i++) {\n      const currentItem = elements[i]\n      // 如果节点不在可见区域，且不是全元素显示模式，则隐藏节点。\n      if (\n        currentItem.visible &&\n        (!this.partial ||\n          currentItem.isSelected ||\n          this.isElementInArea(currentItem, visibleLt, visibleRb, false, false))\n      ) {\n        visibleElements.push(currentItem)\n      }\n    }\n    return visibleElements\n  }\n\n  /**\n   * 当前编辑的元素，低频操作，先循环找。\n   */\n  @computed get textEditElement() {\n    const textEditNode = this.nodes.find(\n      (node) => node.state === ElementState.TEXT_EDIT,\n    )\n    const textEditEdge = this.edges.find(\n      (edge) => edge.state === ElementState.TEXT_EDIT,\n    )\n    return textEditNode || textEditEdge\n  }\n\n  /**\n   * 当前画布所有被选中的元素\n   */\n  @computed get selectElements() {\n    const elements = new Map<string, BaseNodeModel | BaseEdgeModel>()\n    this.nodes.forEach((node) => {\n      if (node.isSelected) {\n        elements.set(node.id, node)\n      }\n    })\n    this.edges.forEach((edge) => {\n      if (edge.isSelected) {\n        elements.set(edge.id, edge)\n      }\n    })\n    return elements\n  }\n\n  @computed get selectNodes() {\n    const nodes: BaseNodeModel[] = []\n    this.nodes.forEach((node) => {\n      if (node.isSelected) {\n        nodes.push(node)\n      }\n    })\n    return nodes\n  }\n\n  /**\n   * 获取指定区域内的所有元素\n   * @param leftTopPoint 表示区域左上角的点\n   * @param rightBottomPoint 表示区域右下角的点\n   * @param wholeEdge 是否要整个边都在区域内部\n   * @param wholeNode 是否要整个节点都在区域内部\n   * @param ignoreHideElement 是否忽略隐藏的节点\n   */\n  // TODO: rename getAreaElement to getElementsInArea or getAreaElements\n  getAreaElement(\n    leftTopPoint: PointTuple,\n    rightBottomPoint: PointTuple,\n    wholeEdge = true,\n    wholeNode = true,\n    ignoreHideElement = false,\n  ) {\n    const areaElements: LogicFlow.GraphElement[] = []\n    forEach([...this.nodes, ...this.edges], (element) => {\n      const isElementInArea = this.isElementInArea(\n        element,\n        leftTopPoint,\n        rightBottomPoint,\n        wholeEdge,\n        wholeNode,\n      )\n      if ((!ignoreHideElement || element.visible) && isElementInArea) {\n        areaElements.push(element)\n      }\n    })\n    return areaElements\n  }\n\n  /**\n   * 获取指定类型元素对应的Model\n   */\n  getModel(type: string) {\n    return this.modelMap.get(type)\n  }\n\n  /**\n   * 基于Id获取节点的model\n   */\n  getNodeModelById(nodeId: string): BaseNodeModel | undefined {\n    if (this.fakeNode && nodeId === this.fakeNode.id) {\n      return this.fakeNode\n    }\n    return this.nodesMap[nodeId]?.model\n  }\n\n  /**\n   * 因为流程图所在的位置可以是页面任何地方\n   * 当内部事件需要获取触发事件时，其相对于画布左上角的位置\n   * 需要事件触发位置减去画布相对于client的位置\n   */\n  getPointByClient({\n    x: x1,\n    y: y1,\n  }: LogicFlow.Point): LogicFlow.ClientPosition {\n    const bbox = this.rootEl.getBoundingClientRect()\n    const domOverlayPosition: Position = {\n      x: x1 - bbox.left,\n      y: y1 - bbox.top,\n    }\n    const [x, y] = this.transformModel.HtmlPointToCanvasPoint([\n      domOverlayPosition.x,\n      domOverlayPosition.y,\n    ])\n    const canvasOverlayPosition: Position = { x, y }\n    return {\n      domOverlayPosition,\n      canvasOverlayPosition,\n    }\n  }\n\n  /**\n   * 判断一个元素是否在指定矩形区域内。\n   * @param element 节点或者边\n   * @param lt 左上角点\n   * @param rb 右下角点\n   * @param wholeEdge 边的起点和终点都在区域内才算\n   * @param wholeNode 节点的box都在区域内才算\n   */\n  isElementInArea(\n    element: BaseEdgeModel | BaseNodeModel,\n    lt: PointTuple,\n    rb: PointTuple,\n    wholeEdge = true,\n    wholeNode = true,\n  ) {\n    if (element.BaseType === ElementType.NODE) {\n      element = element as BaseNodeModel\n      // 节点是否在选区内，判断逻辑为如果节点的bbox的四个角上的点都在选区内，则判断节点在选区内\n      const { minX, minY, maxX, maxY } = getNodeBBox(element)\n      const bboxPointsList: Position[] = [\n        {\n          x: minX,\n          y: minY,\n        },\n        {\n          x: maxX,\n          y: minY,\n        },\n        {\n          x: maxX,\n          y: maxY,\n        },\n        {\n          x: minX,\n          y: maxY,\n        },\n      ]\n      let inArea = wholeNode\n      for (let i = 0; i < bboxPointsList.length; i++) {\n        let { x, y } = bboxPointsList[i]\n        ;[x, y] = this.transformModel.CanvasPointToHtmlPoint([x, y])\n        if (isPointInArea([x, y], lt, rb) !== wholeNode) {\n          inArea = !wholeNode\n          break\n        }\n      }\n      return inArea\n    }\n    if (element.BaseType === ElementType.EDGE) {\n      element = element as BaseEdgeModel\n      const { startPoint, endPoint } = element\n      const startHtmlPoint = this.transformModel.CanvasPointToHtmlPoint([\n        startPoint.x,\n        startPoint.y,\n      ])\n      const endHtmlPoint = this.transformModel.CanvasPointToHtmlPoint([\n        endPoint.x,\n        endPoint.y,\n      ])\n      const isStartInArea = isPointInArea(startHtmlPoint, lt, rb)\n      const isEndInArea = isPointInArea(endHtmlPoint, lt, rb)\n      return wholeEdge\n        ? isStartInArea && isEndInArea\n        : isStartInArea || isEndInArea\n    }\n    return false\n  }\n\n  /**\n   * 使用新的数据重新设置整个画布的元素\n   * 注意：将会清除画布上所有已有的节点和边\n   * @param { object } graphData 图数据\n   */\n  graphDataToModel(graphData: Partial<LogicFlow.GraphConfigData>) {\n    if (!this.width || !this.height) {\n      this.resize()\n    }\n    if (!graphData) {\n      this.nodes = []\n      this.edges = []\n      return\n    }\n    if (graphData.nodes) {\n      this.nodes = map(graphData.nodes, (node: NodeConfig) =>\n        this.getModelAfterSnapToGrid(node),\n      )\n    } else {\n      this.nodes = []\n    }\n    if (graphData.edges) {\n      const currEdgeType = this.edgeType\n      this.edges = map(graphData.edges, (edge) => {\n        const Model = this.getModel(\n          edge.type ?? currEdgeType,\n        ) as BaseEdgeModelCtor\n        if (!Model) {\n          throw new Error(`找不到${edge.type}对应的边。`)\n        }\n        return new Model(edge, this)\n      })\n    } else {\n      this.edges = []\n    }\n  }\n\n  /**\n   * 获取画布数据\n   */\n  modelToGraphData(): GraphData {\n    const edges: LogicFlow.EdgeData[] = []\n    this.edges.forEach((edge) => {\n      const data = edge.getData()\n      if (data && !edge.virtual) edges.push(data)\n    })\n    const nodes: LogicFlow.NodeData[] = []\n    this.nodes.forEach((node) => {\n      const data = node.getData()\n      if (data && !node.virtual) nodes.push(data)\n    })\n    return {\n      nodes,\n      edges,\n    }\n  }\n\n  // 用户history记录的数据，忽略拖拽过程中的数据变更\n  modelToHistoryData(): GraphData | false {\n    let nodeDragging = false\n    const nodes: LogicFlow.NodeData[] = []\n    // 如果有节点在拖拽中，不更新history\n    for (let i = 0; i < this.nodes.length; i++) {\n      const nodeModel = this.nodes[i]\n      if (nodeModel.isDragging) {\n        nodeDragging = true\n        break\n      } else {\n        nodes.push(nodeModel.getHistoryData())\n      }\n    }\n    if (nodeDragging) {\n      return false\n    }\n    // 如果有边在拖拽中，不更新history\n    let edgeDragging = false\n    const edges: LogicFlow.EdgeData[] = []\n    for (let j = 0; j < this.edges.length; j++) {\n      const edgeMode = this.edges[j]\n      if (edgeMode.isDragging) {\n        edgeDragging = true\n        break\n      } else {\n        edges.push(edgeMode.getHistoryData())\n      }\n    }\n    if (edgeDragging) {\n      return false\n    }\n    return {\n      nodes,\n      edges,\n    }\n  }\n\n  /**\n   * 获取边的model\n   */\n  getEdgeModelById(edgeId: string): BaseEdgeModel | undefined {\n    return this.edgesMap[edgeId]?.model\n  }\n\n  /**\n   * 获取节点或者边的model\n   */\n  getElement(id: string): BaseNodeModel | BaseEdgeModel | undefined {\n    return this.modelsMap[id]\n  }\n\n  /**\n   * 所有节点上所有边的model\n   */\n  getNodeEdges(nodeId: string): BaseEdgeModel[] {\n    const edges: BaseEdgeModel[] = []\n    for (let i = 0; i < this.edges.length; i++) {\n      const edgeModel = this.edges[i]\n      const nodeAsSource = edgeModel.sourceNodeId === nodeId\n      const nodeAsTarget = edgeModel.targetNodeId === nodeId\n      if (nodeAsSource || nodeAsTarget) {\n        edges.push(edgeModel)\n      }\n    }\n    return edges\n  }\n\n  /**\n   * 获取选中的元素数据\n   * @param isIgnoreCheck 是否包括sourceNode和targetNode没有被选中的边,默认包括。\n   * 复制的时候不能包括此类边, 因为复制的时候不允许悬空的边\n   */\n  getSelectElements(isIgnoreCheck = true): GraphData {\n    const elements = this.selectElements\n    const graphData: GraphData = {\n      nodes: [],\n      edges: [],\n    }\n    elements.forEach((element) => {\n      if (element.BaseType === ElementType.NODE) {\n        graphData.nodes.push(element.getData())\n      }\n      if (element.BaseType === ElementType.EDGE) {\n        const edgeData = element.getData()\n        const isNodeSelected =\n          elements.get(edgeData.sourceNodeId) &&\n          elements.get(edgeData.targetNodeId)\n\n        if (isIgnoreCheck || isNodeSelected) {\n          graphData.edges.push(edgeData)\n        }\n      }\n    })\n    return graphData\n  }\n\n  /**\n   * 修改对应元素 model 中的属性\n   * 注意：此方法慎用，除非您对logicflow内部有足够的了解。\n   * 大多数情况下，请使用setProperties、updateText、changeNodeId等方法。\n   * 例如直接使用此方法修改节点的id,那么就是会导致连接到此节点的边的sourceNodeId出现找不到的情况。\n   * @param {string} id 元素id\n   * @param {object} attributes 需要更新的属性\n   */\n  updateAttributes(id: string, attributes: object) {\n    const element = this.getElement(id)\n    element?.updateAttributes(attributes)\n  }\n\n  /**\n   * 修改节点的id， 如果不传新的id，会内部自动创建一个。\n   * @param { string } nodeId 将要被修改的id\n   * @param { string } newId 可选，修改后的id\n   * @returns 修改后的节点id, 如果传入的oldId不存在，返回空字符串\n   */\n  changeNodeId(nodeId: string, newId?: string): string {\n    if (!newId) {\n      newId = createUuid()\n    }\n    if (this.nodesMap[newId]) {\n      console.warn(`当前流程图已存在节点${newId}, 修改失败`)\n      return ''\n    }\n    if (!this.nodesMap[nodeId]) {\n      console.warn(`当前流程图找不到节点${nodeId}, 修改失败`)\n      return ''\n    }\n    this.edges.forEach((edge) => {\n      if (edge.sourceNodeId === nodeId) {\n        edge.sourceNodeId = newId as string\n      }\n      if (edge.targetNodeId === nodeId) {\n        edge.targetNodeId = newId as string\n      }\n    })\n    this.nodesMap[nodeId].model.id = newId\n    this.nodesMap[newId] = this.nodesMap[nodeId]\n    return newId\n  }\n\n  /**\n   * 修改边的id， 如果不传新的id，会内部自动创建一个。\n   * @param { string } oldId 将要被修改的id\n   * @param { string } newId 可选，修改后的id\n   * @returns 修改后的节点id, 如果传入的oldId不存在，返回空字符串\n   */\n  changeEdgeId<T extends string>(oldId: string, newId?: string): T | string {\n    if (!newId) {\n      newId = createUuid()\n    }\n    if (this.edgesMap[newId]) {\n      console.warn(`当前流程图已存在边: ${newId}, 修改失败`)\n      return ''\n    }\n    if (!this.edgesMap[oldId]) {\n      console.warn(`当前流程图找不到边: ${newId}, 修改失败`)\n      return ''\n    }\n    this.edges.forEach((edge) => {\n      if (edge.id === oldId) {\n        // edge.id = newId\n        edge.changeEdgeId(newId as string)\n      }\n    })\n    return newId\n  }\n\n  /**\n   * 内部保留方法，请勿直接使用\n   */\n  @action\n  setFakeNode(nodeModel: BaseNodeModel) {\n    this.fakeNode = nodeModel\n  }\n\n  /**\n   * 内部保留方法，请勿直接使用\n   */\n  @action\n  removeFakeNode() {\n    this.fakeNode = null\n  }\n\n  /**\n   * 设置指定类型的Model,请勿直接使用\n   */\n  @action\n  setModel(type: string, ModelClass: LogicFlow.GraphElementCtor) {\n    return this.modelMap.set(type, ModelClass)\n  }\n\n  /**\n   * 将某个元素放置到顶部。\n   * 如果堆叠模式为默认模式，则将原置顶元素重新恢复原有层级。\n   * 如果堆叠模式为递增模式，则将需指定元素zIndex设置为当前最大zIndex + 1。\n   * @see todo link 堆叠模式\n   * @param id 元素Id\n   */\n  @action\n  toFront(id: string) {\n    const element = this.nodesMap[id]?.model || this.edgesMap[id]?.model\n    if (element) {\n      if (this.overlapMode === OverlapMode.DEFAULT) {\n        this.topElement?.setZIndex()\n        element.setZIndex(ELEMENT_MAX_Z_INDEX)\n        this.topElement = element\n      }\n      if (this.overlapMode === OverlapMode.INCREASE) {\n        this.setElementZIndex(id, 'top')\n      }\n    }\n  }\n\n  /**\n   * 设置元素的zIndex.\n   * 注意：默认堆叠模式下，不建议使用此方法。\n   * @see todo link 堆叠模式\n   * @param id 元素id\n   * @param zIndex zIndex的值，可以传数字，也支持传入 'top' 和 'bottom'\n   */\n  @action\n  setElementZIndex(id: string, zIndex: number | 'top' | 'bottom') {\n    const element = this.nodesMap[id]?.model || this.edgesMap[id]?.model\n    if (element) {\n      let index: number\n      if (typeof zIndex === 'number') {\n        index = zIndex\n      } else {\n        if (zIndex === 'top') {\n          index = getZIndex()\n        }\n        if (zIndex === 'bottom') {\n          index = getMinIndex()\n        }\n      }\n      element.setZIndex(index!)\n    }\n  }\n\n  /**\n   * 删除节点\n   * @param {string} nodeId 节点Id\n   */\n  @action\n  deleteNode(nodeId: string) {\n    const nodeData = this.nodesMap[nodeId].model.getData()\n    this.deleteEdgeBySource(nodeId)\n    this.deleteEdgeByTarget(nodeId)\n    this.nodes.splice(this.nodesMap[nodeId].index, 1)\n    this.eventCenter.emit(EventType.NODE_DELETE, { data: nodeData })\n  }\n\n  /**\n   * 添加节点\n   * @param nodeConfig 节点配置\n   * @param eventType 新增节点事件类型，默认EventType.NODE_ADD, 在Dnd拖拽时，会传入EventType.NODE_DND_ADD\n   * @param event MouseEvent 鼠标事件\n   */\n  @action\n  addNode(\n    nodeConfig: NodeConfig,\n    eventType: EventType = EventType.NODE_ADD,\n    event?: MouseEvent,\n  ) {\n    const originNodeData = formatData(nodeConfig)\n    // 添加节点的时候，如果这个节点 id 已经存在，则采用新 id\n    const { id } = originNodeData\n    if (id && this.nodesMap[id]) {\n      delete originNodeData.id\n    }\n    const nodeModel = this.getModelAfterSnapToGrid(originNodeData)\n    this.nodes.push(nodeModel)\n    const nodeData = nodeModel.getData()\n    const eventData: Record<string, any> = { data: nodeData }\n    if (event) {\n      eventData.e = event\n    }\n    this.eventCenter.emit(eventType, eventData)\n    return nodeModel\n  }\n\n  /**\n   * 将node节点位置进行grid修正\n   * 同时处理node内文字的偏移量\n   * 返回一个位置修正过的复制节点NodeModel\n   * @param node\n   */\n  getModelAfterSnapToGrid(node: NodeConfig) {\n    const Model = this.getModel(node.type) as BaseNodeModelCtor\n    if (!Model) {\n      throw new Error(\n        `找不到${node.type}对应的节点，请确认是否已注册此类型节点。`,\n      )\n    }\n    const { x: nodeX, y: nodeY } = node\n    // 根据 grid 修正节点的 x, y\n    if (nodeX && nodeY) {\n      node.x = snapToGrid(nodeX, this.gridSize)\n      node.y = snapToGrid(nodeY, this.gridSize)\n      if (typeof node.text === 'object') {\n        // 原来的处理是：node.text.x -= getGridOffset(nodeX, this.gridSize)\n        // 由于snapToGrid()使用了Math.round()四舍五入的做法，因此无法判断需要执行\n        // node.text.x = node.text.x + getGridOffset()\n        // 还是\n        // node.text.x = node.text.x - getGridOffset()\n        // 直接改为node.x - nodeX就可以满足上面的要求\n        node.text.x += node.x - nodeX\n        node.text.y += node.y - nodeY\n      }\n    }\n    return new Model(node, this)\n  }\n\n  /**\n   * 克隆节点\n   * @param nodeId 节点Id\n   */\n  @action\n  cloneNode(nodeId: string) {\n    const targetNode = this.getNodeModelById(nodeId)\n    const data = targetNode?.getData()\n    if (data) {\n      data.x += 30\n      data.y += 30\n      data.id = ''\n      if (data.text) {\n        data.text.x += 30\n        data.text.y += 30\n      }\n      const nodeModel = this.addNode(data)\n      nodeModel.setSelected(true)\n      targetNode?.setSelected(false)\n      return nodeModel.getData()\n    }\n  }\n\n  /**\n   * 移动节点-相对位置\n   * @param nodeId 节点Id\n   * @param deltaX X轴移动距离\n   * @param deltaY Y轴移动距离\n   * @param isIgnoreRule 是否忽略移动规则限制\n   */\n  @action\n  moveNode(\n    nodeId: string,\n    deltaX: number,\n    deltaY: number,\n    isIgnoreRule = false,\n  ) {\n    // 1) 移动节点\n    const node = this.nodesMap[nodeId]\n    if (!node) {\n      console.warn(`不存在id为${nodeId}的节点`)\n      return\n    }\n    const nodeModel = node.model\n    ;[deltaX, deltaY] = nodeModel.getMoveDistance(deltaX, deltaY, isIgnoreRule)\n    // 2) 移动边\n    this.moveEdge(nodeId, deltaX, deltaY)\n  }\n\n  /**\n   * 移动节点-绝对位置\n   * @param nodeId 节点Id\n   * @param x X轴目标位置\n   * @param y Y轴目标位置\n   * @param isIgnoreRule 是否忽略条件，默认为 false\n   */\n  @action\n  moveNode2Coordinate(\n    nodeId: string,\n    x: number,\n    y: number,\n    isIgnoreRule = false,\n  ) {\n    // 1) 移动节点\n    const node = this.nodesMap[nodeId]\n    if (!node) {\n      console.warn(`不存在id为${nodeId}的节点`)\n      return\n    }\n    const nodeModel = node.model\n    const { x: originX, y: originY } = nodeModel\n    const deltaX = x - originX\n    const deltaY = y - originY\n    this.moveNode(nodeId, deltaX, deltaY, isIgnoreRule)\n  }\n\n  /**\n   * 显示节点、连线文本编辑框\n   * @param id 节点 or 连线 id\n   */\n  @action\n  editText(id: string) {\n    this.setElementStateById(id, ElementState.TEXT_EDIT)\n  }\n\n  /**\n   * 给两个节点之间添加一条边\n   * @param {object} edgeConfig\n   */\n  @action\n  addEdge(edgeConfig: LogicFlow.EdgeConfig): BaseEdgeModel {\n    const edgeOriginData = formatData(edgeConfig)\n    // 边的类型优先级：自定义>全局>默认\n    let { type } = edgeOriginData\n    if (!type) {\n      type = this.edgeType\n    }\n    if (edgeOriginData.id && this.edgesMap[edgeOriginData.id]) {\n      delete edgeOriginData.id\n    }\n    const Model = this.getModel(type) as BaseEdgeModelCtor\n    if (!Model) {\n      throw new Error(`找不到${type}对应的边，请确认是否已注册此类型边。`)\n    }\n    const edgeModel = new Model(\n      {\n        ...edgeOriginData,\n        type,\n      },\n      this,\n    )\n\n    const edgeData = edgeModel.getData()\n    this.edges.push(edgeModel)\n    this.eventCenter.emit(EventType.EDGE_ADD, { data: edgeData })\n    return edgeModel\n  }\n\n  /**\n   * 移动边，内部方法，请勿直接使用\n   */\n  @action\n  moveEdge(nodeId: string, deltaX: number, deltaY: number) {\n    /* 更新相关边位置 */\n    for (let i = 0; i < this.edges.length; i++) {\n      const edgeModel = this.edges[i]\n      const { x, y } = edgeModel.textPosition\n      const nodeAsSource = this.edges[i].sourceNodeId === nodeId\n      const nodeAsTarget = this.edges[i].targetNodeId === nodeId\n      if (nodeAsSource) {\n        edgeModel.moveStartPoint(deltaX, deltaY)\n      }\n      if (nodeAsTarget) {\n        edgeModel.moveEndPoint(deltaX, deltaY)\n      }\n      // 如果有文案了，当节点移动引起文案位置修改时，找出当前文案位置与最新边距离最短距离的点\n      // 最大程度保持节点位置不变且在边上\n      if (nodeAsSource || nodeAsTarget) {\n        this.handleEdgeTextMove(edgeModel, x, y)\n      }\n    }\n  }\n\n  /**\n   * 如果有文案了，当节点移动引起文案位置修改时，找出当前文案位置与最新边距离最短距离的点\n   * 最大程度保持节点位置不变且在边上\n   * @param edgeModel 边的数据管理类\n   * @param x X轴移动距离\n   * @param y Y轴移动距离\n   */\n  handleEdgeTextMove(edgeModel: BaseEdgeModel, x: number, y: number) {\n    // todo: 找到更好的边位置移动处理方式\n    // 如果是自定义边文本位置，则移动节点的时候重新计算其位置\n    if (edgeModel.customTextPosition) {\n      edgeModel.resetTextPosition()\n    } else if (\n      edgeModel.modelType === ModelType.POLYLINE_EDGE &&\n      edgeModel.text?.value\n    ) {\n      const textPosition = edgeModel.text\n      const newPoint = getClosestPointOfPolyline(textPosition, edgeModel.points)\n      edgeModel.moveText(\n        newPoint.x - textPosition.x,\n        newPoint.y - textPosition.y,\n      )\n    } else {\n      const { x: x1, y: y1 } = edgeModel.textPosition\n      edgeModel.moveText(x1 - x, y1 - y)\n    }\n  }\n\n  /**\n   * 删除两节点之间的边\n   * @param sourceNodeId 边的起始节点\n   * @param targetNodeId 边的目的节点\n   */\n  @action\n  deleteEdgeBySourceAndTarget(sourceNodeId: string, targetNodeId: string) {\n    for (let i = 0; i < this.edges.length; i++) {\n      if (\n        this.edges[i].sourceNodeId === sourceNodeId &&\n        this.edges[i].targetNodeId === targetNodeId\n      ) {\n        const edgeData = this.edges[i].getData()\n        this.edges.splice(i, 1)\n        i--\n        this.eventCenter.emit(EventType.EDGE_DELETE, { data: edgeData })\n      }\n    }\n  }\n\n  /**\n   * 基于边Id删除边\n   */\n  @action\n  deleteEdgeById(id: string) {\n    const edge = this.edgesMap[id]\n    if (!edge) {\n      return\n    }\n    const idx = this.edgesMap[id].index\n    const edgeData = this.edgesMap[id].model.getData()\n    this.edges.splice(idx, 1)\n    this.eventCenter.emit(EventType.EDGE_DELETE, { data: edgeData })\n  }\n\n  /**\n   * 删除以节点Id为起点的所有边\n   */\n  @action\n  deleteEdgeBySource(sourceNodeId: string) {\n    for (let i = 0; i < this.edges.length; i++) {\n      if (this.edges[i].sourceNodeId === sourceNodeId) {\n        const edgeData = this.edges[i].getData()\n        this.edges.splice(i, 1)\n        i--\n        this.eventCenter.emit(EventType.EDGE_DELETE, { data: edgeData })\n      }\n    }\n  }\n\n  /**\n   * 删除以节点Id为终点的所有边\n   */\n  @action\n  deleteEdgeByTarget(targetNodeId: string) {\n    for (let i = 0; i < this.edges.length; i++) {\n      if (this.edges[i].targetNodeId === targetNodeId) {\n        const edgeData = this.edges[i].getData()\n        this.edges.splice(i, 1)\n        i--\n        this.eventCenter.emit(EventType.EDGE_DELETE, { data: edgeData })\n      }\n    }\n  }\n\n  /**\n   * 设置元素的状态，在需要保证整个画布上所有的元素只有一个元素拥有此状态时可以调用此方法。\n   * 例如文本编辑、菜单显示等。\n   * additionStateData: 传递的额外值，如菜单显示的时候，需要传递期望菜单显示的位置。\n   */\n  @action\n  setElementStateById(\n    id: string,\n    state: ElementState,\n    additionStateData?: Model.AdditionStateDataType,\n  ) {\n    this.nodes.forEach((node) => {\n      if (node.id === id) {\n        node.setElementState(state, additionStateData)\n      } else {\n        node.setElementState(ElementState.DEFAULT)\n      }\n    })\n    this.edges.forEach((edge) => {\n      if (edge.id === id) {\n        edge.setElementState(state, additionStateData)\n      } else {\n        edge.setElementState(ElementState.DEFAULT)\n      }\n    })\n  }\n\n  /**\n   * 更新节点或边的文案\n   * @param id 节点或者边id\n   * @param value 文案内容\n   */\n  @action\n  updateText(id: string, value: string) {\n    const element = find(\n      [...this.nodes, ...this.edges],\n      (item) => item.id === id,\n    )\n    element?.updateText(value)\n  }\n\n  /**\n   * 选中节点\n   * @param id 节点Id\n   * @param multiple 是否为多选，如果为多选，则不去掉原有已选择节点的选中状态\n   */\n  @action selectNodeById(id: string, multiple = false) {\n    if (!multiple) {\n      this.clearSelectElements()\n    }\n    const selectElement = this.nodesMap[id]?.model\n    selectElement?.setSelected(true)\n  }\n\n  /**\n   * 选中边\n   * @param id 边Id\n   * @param multiple 是否为多选，如果为多选，则不去掉原已选中边的状态\n   */\n  @action selectEdgeById(id: string, multiple = false) {\n    if (!multiple) {\n      this.clearSelectElements()\n    }\n    const selectElement = this.edgesMap[id]?.model\n    selectElement?.setSelected(true)\n  }\n\n  /**\n   * 将图形选中\n   * @param id 选择元素ID\n   * @param multiple 是否允许多选，如果为true，不会将上一个选中的元素重置\n   */\n  @action\n  selectElementById(id: string, multiple = false) {\n    if (!multiple) {\n      this.clearSelectElements()\n    }\n    const selectElement = this.getElement(id)\n    selectElement?.setSelected(true)\n  }\n\n  /**\n   * 将所有选中的元素设置为非选中\n   */\n  @action\n  clearSelectElements() {\n    this.selectElements.forEach((element) => {\n      element?.setSelected(false)\n    })\n    this.selectElements.clear()\n    /**\n     * 如果堆叠模式为默认模式，则将置顶元素重新恢复原有层级\n     */\n    if (this.overlapMode === OverlapMode.DEFAULT) {\n      this.topElement?.setZIndex()\n    }\n  }\n\n  /**\n   * 批量移动节点，节点移动的时候，会动态计算所有节点与未移动节点的边位置\n   * 移动的节点之间的边会保持相对位置\n   */\n  @action\n  moveNodes(\n    nodeIds: string[],\n    deltaX: number,\n    deltaY: number,\n    isIgnoreRule = false,\n  ) {\n    // FIX: https://github.com/didi/LogicFlow/issues/1015\n    // 如果节点之间存在连线，则只移动连线一次。\n    const nodeIdMap: Record<string, [number, number]> = nodeIds.reduce(\n      (acc, cur) => {\n        const nodeModel = this.nodesMap[cur].model\n        acc[cur] = nodeModel.getMoveDistance(deltaX, deltaY, isIgnoreRule)\n        return acc\n      },\n      {},\n    )\n    for (let i = 0; i < this.edges.length; i++) {\n      const edgeModel = this.edges[i]\n      const { x, y } = edgeModel.textPosition\n      const sourceMoveDistance = nodeIdMap[edgeModel.sourceNodeId]\n      const targetMoveDistance = nodeIdMap[edgeModel.targetNodeId]\n      let textDistanceX: number\n      let textDistanceY: number\n      if (\n        sourceMoveDistance &&\n        targetMoveDistance &&\n        edgeModel.modelType === ModelType.POLYLINE_EDGE\n      ) {\n        // 移动框选区时，如果边polyline在框选范围内，则边的轨迹pointsList也要整体移动\n        ;[textDistanceX, textDistanceY] = sourceMoveDistance\n        ;(edgeModel as PolylineEdgeModel).updatePointsList(\n          textDistanceX,\n          textDistanceY,\n        )\n      } else {\n        if (sourceMoveDistance) {\n          ;[textDistanceX, textDistanceY] = sourceMoveDistance\n          edgeModel.moveStartPoint(textDistanceX, textDistanceY)\n        }\n        if (targetMoveDistance) {\n          ;[textDistanceX, textDistanceY] = targetMoveDistance\n          edgeModel.moveEndPoint(textDistanceX, textDistanceY)\n        }\n      }\n      if (sourceMoveDistance || targetMoveDistance) {\n        // https://github.com/didi/LogicFlow/issues/1191\n        // moveNode()跟moveNodes()没有统一处理方式，moveNodes()缺失了下面的逻辑\n        // moveNode()：当节点移动引起文案位置修改时，找出当前文案位置与最新边距离最短距离的点，最大程度保持节点位置不变且在边上\n        // 因此将moveNode()处理边文字的逻辑抽离出来，统一moveNode()跟moveNodes()的处理逻辑\n        this.handleEdgeTextMove(edgeModel, x, y)\n      }\n    }\n  }\n\n  /**\n   * 添加节点移动限制规则，在节点移动的时候触发。\n   * 如果方法返回false, 则会阻止节点移动。\n   * @param fn function\n   * @example\n   *\n   * graphModel.addNodeMoveRules((nodeModel, x, y) => {\n   *   if (nodeModel.properties.disabled) {\n   *     return false\n   *   }\n   *   return true\n   * })\n   *\n   */\n  addNodeMoveRules(fn: Model.NodeMoveRule) {\n    if (!this.nodeMoveRules.includes(fn)) {\n      this.nodeMoveRules.push(fn)\n    }\n  }\n\n  /**\n   * 设置默认的边类型\n   * 也就是设置在节点直接有用户手动绘制的连线类型。\n   * @param type LFOptions.EdgeType\n   */\n  @action\n  setDefaultEdgeType(type: LFOptions.EdgeType): void {\n    this.edgeType = type\n  }\n\n  /**\n   * 修改指定节点类型\n   * @param id 节点id\n   * @param type 节点类型\n   */\n  @action\n  changeNodeType(id: string, type: string): void {\n    const nodeModel = this.getNodeModelById(id)\n    if (!nodeModel) {\n      console.warn(`找不到id为${id}的节点`)\n      return\n    }\n    const data = nodeModel.getData()\n    data.type = type\n    const Model = this.getModel(type) as BaseNodeModelCtor\n    if (!Model) {\n      throw new Error(`找不到${type}对应的节点，请确认是否已注册此类型节点。`)\n    }\n    const newNodeModel = new Model(data, this)\n    this.nodes.splice(this.nodesMap[id].index, 1, newNodeModel)\n    // 微调边\n    const edgeModels = this.getNodeEdges(id)\n    edgeModels.forEach((edge) => {\n      if (edge.sourceNodeId === id) {\n        const point = getNodeAnchorPosition(\n          newNodeModel,\n          edge.startPoint,\n          newNodeModel.width,\n          newNodeModel.height,\n        )\n        edge.updateStartPoint(point)\n      }\n      if (edge.targetNodeId === id) {\n        const point = getNodeAnchorPosition(\n          newNodeModel,\n          edge.endPoint,\n          newNodeModel.width,\n          newNodeModel.height,\n        )\n        edge.updateEndPoint(point)\n      }\n    })\n  }\n\n  /**\n   * 切换边的类型\n   * @param id 边Id\n   * @param type 边类型\n   */\n  @action changeEdgeType(id: string, type: LFOptions.EdgeType) {\n    const edgeModel = this.getEdgeModelById(id)\n    if (!edgeModel) {\n      console.warn(`找不到id为${id}的边`)\n      return\n    }\n    if (edgeModel.type === type) {\n      return\n    }\n    const data = edgeModel.getData()\n    data.type = type\n    const Model = this.getModel(type) as BaseEdgeModelCtor\n    if (!Model) {\n      throw new Error(`找不到${type}对应的节点，请确认是否已注册此类型节点。`)\n    }\n    // 为了保持切换类型时不复用上一个类型的轨迹\n    delete data.pointsList\n    const newEdgeModel = new Model(data, this)\n    this.edges.splice(this.edgesMap[id].index, 1, newEdgeModel)\n  }\n\n  /**\n   * 获取所有以此节点为终点的边\n   */\n  @action getNodeIncomingEdge(nodeId: string) {\n    const edges: BaseEdgeModel[] = []\n    this.edges.forEach((edge) => {\n      if (edge.targetNodeId === nodeId) {\n        edges.push(edge)\n      }\n    })\n    return edges\n  }\n\n  /**\n   * 获取所有以此节点为起点的边\n   */\n  @action getNodeOutgoingEdge(nodeId: string) {\n    const edges: BaseEdgeModel[] = []\n    this.edges.forEach((edge) => {\n      if (edge.sourceNodeId === nodeId) {\n        edges.push(edge)\n      }\n    })\n    return edges\n  }\n\n  /**\n   * 获取所有以此锚点为终点的边\n   */\n  @action getAnchorIncomingEdge(anchorId?: string) {\n    const edges: BaseEdgeModel[] = []\n    this.edges.forEach((edge) => {\n      if (edge.targetAnchorId === anchorId) {\n        edges.push(edge)\n      }\n    })\n    return edges\n  }\n\n  /**\n   * TODO: 命名问题 outcoming -> outgoing or incoming\n   * 获取所有以此锚点为起点的边\n   */\n  @action getAnchorOutcomingEdge(anchorId?: string) {\n    const edges: BaseEdgeModel[] = []\n    this.edges.forEach((edge) => {\n      if (edge.sourceAnchorId === anchorId) {\n        edges.push(edge)\n      }\n    })\n    return edges\n  }\n\n  /**\n   * 获取节点连接到的所有起始节点\n   */\n  @action getNodeIncomingNode(nodeId?: string) {\n    const nodes: BaseNodeModel[] = []\n    this.edges.forEach((edge) => {\n      if (edge.targetNodeId === nodeId) {\n        nodes.push(this.nodesMap[edge.sourceNodeId]?.model)\n      }\n    })\n    return nodes\n  }\n\n  /**\n   * 获取节点所有的下一级节点\n   */\n  @action getNodeOutgoingNode(nodeId?: string) {\n    const nodes: BaseNodeModel[] = []\n    this.edges.forEach((edge) => {\n      if (edge.sourceNodeId === nodeId) {\n        nodes.push(this.nodesMap[edge.targetNodeId].model)\n      }\n    })\n    return nodes\n  }\n\n  /**\n   * 设置主题\n   * todo docs link\n   */\n  @action setTheme(style: Partial<LogicFlow.Theme>) {\n    this.theme = updateTheme({ ...this.theme, ...style })\n  }\n\n  /**\n   * 重新设置画布的宽高\n   */\n  @action resize(width?: number, height?: number): void {\n    this.width = width || this.rootEl.getBoundingClientRect().width\n    this.height = height || this.rootEl.getBoundingClientRect().height\n    if (!this.width || !this.height) {\n      console.warn(\n        '渲染画布的时候无法获取画布宽高，请确认在container已挂载到DOM。@see https://github.com/didi/LogicFlow/issues/675',\n      )\n    }\n  }\n\n  /**\n   * 清空画布\n   */\n  @action clearData(): void {\n    this.nodes = []\n    this.edges = []\n  }\n\n  /**\n   * 获取图形区域虚拟矩型的尺寸和中心坐标\n   * @returns\n   */\n  getVirtualRectSize(): GraphModel.VirtualRectProps {\n    const { nodes } = this\n    let nodesX: number[] = []\n    let nodesY: number[] = []\n    // 获取所有节点组成的x，y轴最大最小值，这里考虑了图形的长宽和边框\n    nodes.forEach((node) => {\n      const { x, y, width, height } = node\n      const { strokeWidth = 0 } = node.getNodeStyle()\n      const maxX = x + width / 2 + strokeWidth\n      const minX = x - width / 2 - strokeWidth\n      const maxY = y + height / 2 + strokeWidth\n      const minY = y - height / 2 - strokeWidth\n      nodesX = nodesX.concat([maxX, minX].filter((num) => !Number.isNaN(num)))\n      nodesY = nodesY.concat([maxY, minY].filter((num) => !Number.isNaN(num)))\n    })\n\n    const minX = Math.min(...nodesX)\n    const maxX = Math.max(...nodesX)\n    const minY = Math.min(...nodesY)\n    const maxY = Math.max(...nodesY)\n\n    const virtualRectWidth = maxX - minX || 0\n    const virtualRectHeight = maxY - minY || 0\n\n    // 获取虚拟矩型的中心坐标\n    const virtualRectCenterPositionX = minX + virtualRectWidth / 2\n    const virtualRectCenterPositionY = minY + virtualRectHeight / 2\n\n    return {\n      width: virtualRectWidth,\n      height: virtualRectHeight,\n      x: virtualRectCenterPositionX,\n      y: virtualRectCenterPositionY,\n    }\n  }\n\n  /**\n   * 将图形整体移动到画布中心\n   */\n  @action translateCenter(): void {\n    const { nodes, width, height, rootEl, transformModel } = this\n    if (!nodes.length) {\n      return\n    }\n\n    const containerWidth = width || rootEl.clientWidth\n    const containerHeight = height || rootEl.clientHeight\n\n    const { x: virtualRectCenterPositionX, y: virtualRectCenterPositionY } =\n      this.getVirtualRectSize()\n\n    // 将虚拟矩型移动到画布中心\n    transformModel.focusOn(\n      virtualRectCenterPositionX,\n      virtualRectCenterPositionY,\n      containerWidth,\n      containerHeight,\n    )\n  }\n\n  /**\n   * 画布图形适应屏幕大小\n   * @param verticalOffset number 距离盒子上下的距离， 默认为20\n   * @param horizontalOffset number 距离盒子左右的距离， 默认为20\n   */\n  @action fitView(verticalOffset = 20, horizontalOffset = 20): void {\n    const { nodes, width, height, rootEl, transformModel } = this\n    if (!nodes.length) {\n      return\n    }\n    const containerWidth = width || rootEl.clientWidth\n    const containerHeight = height || rootEl.clientHeight\n\n    const {\n      width: virtualRectWidth,\n      height: virtualRectHeight,\n      x: virtualRectCenterPositionX,\n      y: virtualRectCenterPositionY,\n    } = this.getVirtualRectSize()\n\n    const zoomRatioX = (virtualRectWidth + horizontalOffset) / containerWidth\n    const zoomRatioY = (virtualRectHeight + verticalOffset) / containerHeight\n    const zoomRatio = 1 / Math.max(zoomRatioX, zoomRatioY)\n\n    const point: PointTuple = [containerWidth / 2, containerHeight / 2]\n    // 适应画布大小\n    transformModel.zoom(zoomRatio, point)\n    // 将虚拟矩型移动到画布中心\n    transformModel.focusOn(\n      virtualRectCenterPositionX,\n      virtualRectCenterPositionY,\n      containerWidth,\n      containerHeight,\n    )\n  }\n\n  /**\n   * 开启边的动画\n   * @param edgeId string\n   */\n  @action openEdgeAnimation(edgeId: string): void {\n    const edgeModel = this.getEdgeModelById(edgeId)\n    edgeModel?.openEdgeAnimation()\n  }\n\n  /**\n   * 关闭边的动画\n   * @param edgeId string\n   */\n  @action closeEdgeAnimation(edgeId: string): void {\n    const edgeModel = this.getEdgeModelById(edgeId)\n    edgeModel?.closeEdgeAnimation()\n  }\n\n  /**\n   * 获取当前局部渲染模式\n   * @returns boolean\n   */\n  getPartial(): boolean {\n    return this.partial\n  }\n\n  /**\n   * 设置是否开启局部渲染模式\n   * @param partial boolean\n   * @returns\n   */\n  @action setPartial(partial: boolean): void {\n    this.partial = partial\n  }\n}\n\nexport namespace GraphModel {\n  export type NodesMapType = Record<\n    string,\n    {\n      index: number\n      model: BaseNodeModel\n    }\n  >\n  export type EdgesMapType = Record<\n    string,\n    {\n      index: number\n      model: BaseEdgeModel\n    }\n  >\n\n  export type ModelsMapType = Record<string, BaseNodeModel | BaseEdgeModel>\n\n  // 虚拟矩阵信息类型\n  export type VirtualRectProps = {\n    width: number\n    height: number\n    x: number\n    y: number\n  }\n}\n\nexport default GraphModel\n", "import { action, observable } from 'mobx'\nimport { GraphModel, BaseNodeModel } from '.'\nimport LogicFlow from '../LogicFlow'\nimport { getNodeBBox } from '../util'\nimport Position = LogicFlow.Position\nimport NodeData = LogicFlow.NodeData\n\nexport type ISnaplineInfo = {\n  isShowHorizontal: boolean\n  isShowVertical: boolean\n  position: Position\n}\n\nexport class SnaplineModel {\n  graphModel: GraphModel\n  // 是否展示水平对齐线\n  @observable isShowHorizontal: boolean\n  // 是否展示垂直对齐线\n  @observable isShowVertical: boolean\n  // 对齐线的中心位置，目前仅展示中心对齐的情况，后面可以考虑多种对齐策略\n  @observable position: Position\n\n  constructor(graphModel: GraphModel) {\n    this.isShowHorizontal = false\n    this.isShowVertical = false\n    this.position = {\n      x: 0,\n      y: 0,\n    }\n    this.graphModel = graphModel\n  }\n\n  getStyle() {\n    return {\n      ...this.graphModel.theme.snapline,\n    }\n  }\n\n  // 计算节点中心线与其他节点的对齐信息\n  private getCenterSnapLine(\n    draggingNode: NodeData,\n    nodes: BaseNodeModel[],\n  ): ISnaplineInfo {\n    const { x, y } = draggingNode\n    let isShowVertical = false\n    let isShowHorizontal = false\n    for (let i = 0; i < nodes.length; i++) {\n      const item = nodes[i]\n      // 排除当前节点\n      if (item.id !== draggingNode.id) {\n        if (x === item.x) {\n          isShowVertical = true\n        }\n        if (y === item.y) {\n          isShowHorizontal = true\n        }\n        // 如果水平垂直都显示，则停止循环。减少不必要的遍历\n        if (isShowVertical && isShowHorizontal) {\n          break\n        }\n      }\n    }\n    return {\n      isShowVertical,\n      isShowHorizontal,\n      position: {\n        x,\n        y,\n      },\n    }\n  }\n\n  // 计算节点上下边框与其他节点的上下边框的对齐信息\n  private getHorizontalSnapline(\n    draggingNode: NodeData,\n    nodes: BaseNodeModel[],\n  ): ISnaplineInfo {\n    let isShowHorizontal = false\n    let horizontalY: number = 0\n    const { id } = draggingNode\n    let draggingData\n    if (id) {\n      const { fakeNode } = this.graphModel\n      if (fakeNode && fakeNode.id === id) {\n        draggingData = getNodeBBox(fakeNode)\n      } else {\n        const nodeModel = this.graphModel.getNodeModelById(id)\n        if (nodeModel) {\n          draggingData = getNodeBBox(nodeModel)\n        }\n      }\n    }\n    for (let i = 0; i < nodes.length; i++) {\n      const item = nodes[i]\n      // 排除当前节点\n      if (item.id !== draggingNode.id) {\n        const itemData = getNodeBBox(item)\n        // 如果节点的最大最小Y轴坐标与节点的最大最小Y轴坐标相等，展示水平线\n        if (\n          itemData.minY === draggingData?.minY ||\n          itemData.maxY === draggingData?.minY\n        ) {\n          // 找到则停止循环。减少不必要的遍历\n          isShowHorizontal = true\n          horizontalY = draggingData.minY\n          break\n        }\n        if (\n          itemData.minY === draggingData?.maxY ||\n          itemData.maxY === draggingData?.maxY\n        ) {\n          isShowHorizontal = true\n          horizontalY = draggingData.maxY\n          break\n        }\n      }\n    }\n    return {\n      isShowHorizontal,\n      isShowVertical: this.isShowVertical,\n      position: {\n        ...this.position,\n        y: horizontalY,\n      },\n    }\n  }\n\n  // 计算节点左右边框与其他节点的左右边框的对齐信息\n  private getVerticalSnapline(\n    draggingNode: NodeData,\n    nodes: BaseNodeModel[],\n  ): ISnaplineInfo {\n    let isShowVertical: boolean = false\n    let verticalX: number = 0\n    const { id } = draggingNode\n    let draggingData\n    if (id) {\n      const { fakeNode } = this.graphModel\n      if (fakeNode && fakeNode.id === id) {\n        draggingData = getNodeBBox(fakeNode)\n      } else {\n        const nodeModel = this.graphModel.getNodeModelById(id)\n        if (nodeModel) {\n          draggingData = getNodeBBox(nodeModel)\n        }\n      }\n    }\n    for (let i = 0; i < nodes.length; i++) {\n      const item = nodes[i]\n      // 排除当前节点\n      if (item.id !== draggingNode.id) {\n        const itemData = getNodeBBox(item)\n        // 如果节点的最大最小X轴坐标与节点的最大最小X轴坐标相等，展示垂直线\n        if (\n          itemData.minX === draggingData?.minX ||\n          itemData.maxX === draggingData?.minX\n        ) {\n          // 找到则停止循环。减少不必要的遍历\n          isShowVertical = true\n          verticalX = draggingData.minX\n          break\n        }\n        if (\n          itemData.minX === draggingData?.maxX ||\n          itemData.maxX === draggingData?.maxX\n        ) {\n          isShowVertical = true\n          verticalX = draggingData.maxX\n          break\n        }\n      }\n    }\n    return {\n      isShowHorizontal: this.isShowHorizontal,\n      isShowVertical,\n      position: {\n        ...this.position,\n        x: verticalX,\n      },\n    }\n  }\n\n  // 计算节点与其他节点的对齐信息\n  getSnapLinePosition(\n    draggingNode: NodeData,\n    nodes: BaseNodeModel[],\n  ): ISnaplineInfo {\n    const snaplineInfo = this.getCenterSnapLine(draggingNode, nodes)\n    const { isShowHorizontal, isShowVertical } = snaplineInfo\n    // 中心对齐优先级最高\n    // 如果没有中心坐标的水平对齐，计算上下边框的对齐\n    if (!isShowHorizontal) {\n      const horizontalSnapline = this.getHorizontalSnapline(draggingNode, nodes)\n      if (horizontalSnapline.isShowHorizontal) {\n        snaplineInfo.isShowHorizontal = horizontalSnapline.isShowHorizontal\n        snaplineInfo.position.y = horizontalSnapline.position.y\n      }\n    }\n    // 如果没有中心坐标的垂直对齐，计算左右边框的对齐\n    if (!isShowVertical) {\n      const verticalSnapline = this.getVerticalSnapline(draggingNode, nodes)\n      if (verticalSnapline.isShowVertical) {\n        snaplineInfo.isShowVertical = verticalSnapline.isShowVertical\n        snaplineInfo.position.x = verticalSnapline.position.x\n      }\n    }\n    return snaplineInfo\n  }\n\n  // 设置对齐信息\n  private setSnaplineInfo(snaplineInfo: ISnaplineInfo): void {\n    const { isShowHorizontal, isShowVertical, position } = snaplineInfo\n    this.position = position\n    this.isShowHorizontal = isShowHorizontal\n    this.isShowVertical = isShowVertical\n  }\n\n  // 清空对齐信息，对齐线消失\n  @action\n  clearSnapline(): void {\n    this.position = {\n      x: 0,\n      y: 0,\n    }\n    this.isShowHorizontal = false\n    this.isShowVertical = false\n  }\n\n  // 设置节点对齐线\n  @action\n  setNodeSnapLine(nodeData: NodeData): void {\n    const { nodes } = this.graphModel\n    const info = this.getSnapLinePosition(nodeData, nodes)\n    this.setSnaplineInfo(info)\n  }\n}\n\nexport default SnaplineModel\n", "import { observable, action } from 'mobx'\nimport LogicFlow from '../LogicFlow'\nimport { EventType } from '../constant'\nimport { Options as LFOptions } from '../options'\nimport EventEmitter from '../event/eventEmitter'\n\nimport PointTuple = LogicFlow.PointTuple\n\nexport type ZoomParamType = boolean | number\n\nexport type TransformData = Record<\n  'SCALE_X' | 'SCALE_Y' | 'SKEW_Y' | 'SKEW_X' | 'TRANSLATE_X' | 'TRANSLATE_Y',\n  number\n>\n\nexport type TransformType = 'zoom' | 'resetZoom' | 'translate' | 'focusOn'\n\nexport interface TransformInterface {\n  SCALE_X: number\n  SCALE_Y: number\n  SKEW_Y: number\n  SKEW_X: number\n  TRANSLATE_X: number\n  TRANSLATE_Y: number\n  ZOOM_SIZE: number\n  MINI_SCALE_SIZE: number // 缩小的最小值\n  MAX_SCALE_SIZE: number // 放大的最大值\n\n  translateLimitMinX: number\n  translateLimitMinY: number\n  translateLimitMaxX: number\n  translateLimitMaxY: number\n\n  zoom: (isZoomOut: ZoomParamType, point?: PointTuple) => string\n  HtmlPointToCanvasPoint: (point: PointTuple) => PointTuple\n  CanvasPointToHtmlPoint: (point: PointTuple) => PointTuple\n  moveCanvasPointByHtml: (point: PointTuple, x: number, y: number) => PointTuple\n  getTransformStyle: () => { transform: string }\n}\n\nconst translateLimitsMap = {\n  false: [-Infinity, -Infinity, Infinity, Infinity],\n  true: [0, 0, 0, 0],\n  vertical: [-Infinity, 0, Infinity, 0],\n  horizontal: [0, -Infinity, 0, Infinity],\n}\n\nexport class TransformModel implements TransformInterface {\n  MINI_SCALE_SIZE = 0.2\n  MAX_SCALE_SIZE = 16\n  @observable SCALE_X = 1\n  @observable SKEW_Y = 0\n  @observable SKEW_X = 0\n  @observable SCALE_Y = 1\n  @observable TRANSLATE_X = 0\n  @observable TRANSLATE_Y = 0\n  @observable ZOOM_SIZE = 0.04\n  eventCenter: EventEmitter\n\n  // 限制画布可移动区域\n  translateLimitMinX: number = -Infinity\n  translateLimitMinY: number = -Infinity\n  translateLimitMaxX: number = Infinity\n  translateLimitMaxY: number = Infinity\n\n  constructor(eventCenter: EventEmitter, options: LFOptions.Common) {\n    this.eventCenter = eventCenter\n    const { stopMoveGraph = false } = options\n    this.updateTranslateLimits(stopMoveGraph)\n  }\n\n  setZoomMiniSize(size: number): void {\n    this.MINI_SCALE_SIZE = size\n  }\n\n  setZoomMaxSize(size: number): void {\n    this.MAX_SCALE_SIZE = size\n  }\n\n  /**\n   * 将最外层graph上的点基于缩放转换为canvasOverlay层上的点。\n   * @param point HTML点\n   */\n  HtmlPointToCanvasPoint(point: PointTuple): PointTuple {\n    const [x, y] = point\n    return [\n      (x - this.TRANSLATE_X) / this.SCALE_X,\n      (y - this.TRANSLATE_Y) / this.SCALE_Y,\n    ]\n  }\n\n  /**\n   * 将最外层canvasOverlay层上的点基于缩放转换为graph上的点。\n   * @param point HTML点\n   */\n  CanvasPointToHtmlPoint(point: PointTuple): PointTuple {\n    const [x, y] = point\n    return [\n      x * this.SCALE_X + this.TRANSLATE_X,\n      y * this.SCALE_Y + this.TRANSLATE_Y,\n    ]\n  }\n\n  /**\n   * 将一个在canvas上的点，向x轴方向移动directionX距离，向y轴方向移动directionY距离。\n   * 因为canvas可能被缩小或者放大了，所以其在canvas层移动的距离需要计算上缩放的量。\n   * @param point 点\n   * @param directionX x轴距离\n   * @param directionY y轴距离\n   */\n  moveCanvasPointByHtml(\n    point: PointTuple,\n    directionX: number,\n    directionY: number,\n  ): PointTuple {\n    const [x, y] = point\n    return [x + directionX / this.SCALE_X, y + directionY / this.SCALE_Y]\n  }\n\n  /**\n   * 根据缩放情况，获取缩放后的delta距离\n   * @param deltaX x轴距离变化\n   * @param deltaY y轴距离变化\n   */\n  fixDeltaXY(deltaX: number, deltaY: number): PointTuple {\n    return [deltaX / this.SCALE_X, deltaY / this.SCALE_Y]\n  }\n\n  /**\n   * 基于当前的缩放，获取画布渲染样式transform值\n   */\n  getTransformStyle() {\n    const matrixString = [\n      this.SCALE_X,\n      this.SKEW_Y,\n      this.SKEW_X,\n      this.SCALE_Y,\n      this.TRANSLATE_X,\n      this.TRANSLATE_Y,\n    ].join(',')\n    return {\n      transform: `matrix(${matrixString})`,\n    }\n  }\n\n  /**\n   * 放大缩小图形\n   * @param zoomSize 放大缩小的值，支持传入0-n之间的数字。小于1表示缩小，大于1表示放大。也支持传入true和false按照内置的刻度放大缩小\n   * @param point 缩放的原点\n   * @returns {string} -放大缩小的比例\n   */\n  @action\n  zoom(zoomSize: ZoomParamType = false, point?: PointTuple): string {\n    let newScaleX = this.SCALE_X\n    let newScaleY = this.SCALE_Y\n    if (typeof zoomSize === 'number') {\n      newScaleX = zoomSize\n      newScaleY = zoomSize\n    } else {\n      if (zoomSize) {\n        newScaleX += this.ZOOM_SIZE\n        newScaleY += this.ZOOM_SIZE\n      } else {\n        newScaleX -= this.ZOOM_SIZE\n        newScaleY -= this.ZOOM_SIZE\n      }\n    }\n\n    if (newScaleX < this.MINI_SCALE_SIZE || newScaleX > this.MAX_SCALE_SIZE) {\n      return `${this.SCALE_X * 100}%`\n    }\n    if (point) {\n      this.TRANSLATE_X -= (newScaleX - this.SCALE_X) * point[0]\n      this.TRANSLATE_Y -= (newScaleY - this.SCALE_Y) * point[1]\n    }\n    this.SCALE_X = newScaleX\n    this.SCALE_Y = newScaleY\n    this.emitGraphTransform('zoom')\n    return `${this.SCALE_X * 100}%`\n  }\n\n  private emitGraphTransform(type: TransformType) {\n    this.eventCenter.emit(EventType.GRAPH_TRANSFORM, {\n      type,\n      transform: {\n        SCALE_X: this.SCALE_X,\n        SKEW_Y: this.SKEW_Y,\n        SKEW_X: this.SKEW_X,\n        SCALE_Y: this.SCALE_Y,\n        TRANSLATE_X: this.TRANSLATE_X,\n        TRANSLATE_Y: this.TRANSLATE_Y,\n      },\n    })\n  }\n\n  @action\n  resetZoom(): void {\n    this.SCALE_X = 1\n    this.SCALE_Y = 1\n    this.emitGraphTransform('resetZoom')\n  }\n\n  @action\n  translate(x: number, y: number) {\n    if (\n      this.TRANSLATE_X + x <= this.translateLimitMaxX &&\n      this.TRANSLATE_X + x >= this.translateLimitMinX\n    ) {\n      this.TRANSLATE_X += x\n    }\n    if (\n      this.TRANSLATE_Y + y <= this.translateLimitMaxY &&\n      this.TRANSLATE_Y + y >= this.translateLimitMinY\n    ) {\n      this.TRANSLATE_Y += y\n    }\n    this.emitGraphTransform('translate')\n  }\n\n  /**\n   * 将图形定位到画布中心\n   * @param targetX 图形当前x坐标\n   * @param targetY 图形当前y坐标\n   * @param width 画布宽\n   * @param height 画布高\n   */\n  @action\n  focusOn(targetX: number, targetY: number, width: number, height: number) {\n    const [x, y] = this.CanvasPointToHtmlPoint([targetX, targetY])\n    const [deltaX, deltaY] = [width / 2 - x, height / 2 - y]\n    this.TRANSLATE_X += deltaX\n    this.TRANSLATE_Y += deltaY\n    this.emitGraphTransform('focusOn')\n  }\n\n  /**\n   * 更新画布可以移动范围\n   */\n  updateTranslateLimits(\n    limit:\n      | boolean\n      | 'vertical'\n      | 'horizontal'\n      | [number, number, number, number],\n  ) {\n    ;[\n      this.translateLimitMinX,\n      this.translateLimitMinY,\n      this.translateLimitMaxX,\n      this.translateLimitMaxY,\n    ] =\n      Array.isArray(limit) && limit.length === 4\n        ? limit\n        : translateLimitsMap[limit.toString()]\n  }\n}\n\nexport default TransformModel\n", "import { Component } from 'preact/compat'\nimport Dnd from '../behavior/dnd'\nimport { observer } from '../..'\nimport GraphModel from '../../model/GraphModel'\nimport { EventType } from '../../constant'\nimport { StepDrag, IDragParams } from '../../util'\n\ntype IProps = {\n  graphModel: GraphModel\n  dnd: Dnd\n}\ntype IState = {\n  isDragging: boolean\n}\n\n@observer\nexport class CanvasOverlay extends Component<IProps, IState> {\n  stepDrag: StepDrag\n  stepScrollX = 0\n  stepScrollY = 0\n\n  constructor(props: IProps) {\n    super()\n    const {\n      graphModel: { gridSize, eventCenter },\n    } = props\n    this.stepDrag = new StepDrag({\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n      step: gridSize,\n      eventType: 'BLANK',\n      isStopPropagation: false,\n      eventCenter,\n      model: undefined,\n    })\n    // 当ctrl键被按住的时候，可以放大缩小。\n    this.state = {\n      isDragging: false,\n    }\n  }\n\n  // get InjectedProps() {\n  //   return this.props as InjectedProps;\n  // }\n  onDragging = ({ deltaX, deltaY }: IDragParams) => {\n    this.setState({\n      isDragging: true,\n    })\n    const {\n      graphModel: { transformModel, editConfigModel },\n    } = this.props\n    if (editConfigModel.stopMoveGraph === true) {\n      return\n    }\n    transformModel.translate(deltaX, deltaY)\n  }\n  onDragEnd = () => {\n    this.setState({\n      isDragging: false,\n    })\n  }\n  zoomHandler = (ev: WheelEvent) => {\n    const {\n      graphModel: { editConfigModel, transformModel, gridSize },\n      graphModel,\n    } = this.props\n    const { deltaX: eX, deltaY: eY } = ev\n    // 如果没有禁止滚动移动画布, 并且当前触发的时候ctrl键没有按住, 那么移动画布\n    if (!editConfigModel.stopScrollGraph && ev.ctrlKey !== true) {\n      ev.preventDefault()\n      this.stepScrollX += eX\n      this.stepScrollY += eY\n      if (Math.abs(this.stepScrollX) >= gridSize) {\n        const remainderX = this.stepScrollX % gridSize\n        const moveDistance = this.stepScrollX - remainderX\n        transformModel.translate(-moveDistance * transformModel.SCALE_X, 0)\n        this.stepScrollX = remainderX\n      }\n      if (Math.abs(this.stepScrollY) >= gridSize) {\n        const remainderY = this.stepScrollY % gridSize\n        const moveDistanceY = this.stepScrollY - remainderY\n        transformModel.translate(0, -moveDistanceY * transformModel.SCALE_Y)\n        this.stepScrollY = remainderY\n      }\n      return\n    }\n    // 如果没有禁止缩放画布，那么进行缩放. 在禁止缩放画布后，按住ctrl键也不能缩放了。\n    if (!editConfigModel.stopZoomGraph) {\n      ev.preventDefault()\n      const position = graphModel.getPointByClient({\n        x: ev.clientX,\n        y: ev.clientY,\n      })\n      const { x, y } = position.canvasOverlayPosition\n      transformModel.zoom(ev.deltaY < 0, [x, y])\n    }\n  }\n  clickHandler = (ev: MouseEvent) => {\n    // 点击空白处取消节点选中状态, 不包括冒泡过来的事件。\n    const target = ev.target as HTMLElement\n    if (target.getAttribute('name') === 'canvas-overlay') {\n      const { graphModel } = this.props\n      const { selectElements } = graphModel\n      if (selectElements.size > 0) {\n        graphModel.clearSelectElements()\n      }\n      graphModel.eventCenter.emit(EventType.BLANK_CLICK, { e: ev })\n    }\n  }\n  handleContextMenu = (ev: MouseEvent) => {\n    const target = ev.target as HTMLElement\n    if (target.getAttribute('name') === 'canvas-overlay') {\n      ev.preventDefault()\n      const { graphModel } = this.props\n      const position = graphModel.getPointByClient({\n        x: ev.clientX,\n        y: ev.clientY,\n      })\n      // graphModel.setElementState(ElementState.SHOW_MENU, position.domOverlayPosition);\n      graphModel.eventCenter.emit(EventType.BLANK_CONTEXTMENU, {\n        e: ev,\n        position,\n      })\n    }\n  }\n  mouseDownHandler = (ev: MouseEvent) => {\n    const {\n      graphModel: {\n        eventCenter,\n        editConfigModel,\n        transformModel: { SCALE_X },\n        gridSize,\n      },\n    } = this.props\n    const target = ev.target as HTMLElement\n    const isFrozenElement =\n      !editConfigModel.adjustEdge && !editConfigModel.adjustNodePosition\n    if (target.getAttribute('name') === 'canvas-overlay' || isFrozenElement) {\n      if (editConfigModel.stopMoveGraph !== true) {\n        this.stepDrag.setStep(gridSize * SCALE_X)\n        this.stepDrag.handleMouseDown(ev)\n      } else {\n        eventCenter.emit(EventType.BLANK_MOUSEDOWN, { e: ev })\n      }\n      // 为了处理画布移动的时候，编辑和菜单仍然存在的问题。\n      this.clickHandler(ev)\n    }\n  }\n\n  render() {\n    const {\n      graphModel: { transformModel },\n    } = this.props\n    const { transform } = transformModel.getTransformStyle()\n    const { children, dnd } = this.props\n    const { isDragging } = this.state\n\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100%\"\n        height=\"100%\"\n        name=\"canvas-overlay\"\n        onWheel={this.zoomHandler}\n        onMouseDown={this.mouseDownHandler}\n        onContextMenu={this.handleContextMenu}\n        className={\n          isDragging\n            ? 'lf-canvas-overlay lf-dragging'\n            : 'lf-canvas-overlay lf-drag-able'\n        }\n        {...dnd.eventMap()}\n      >\n        <g transform={transform}>{children}</g>\n      </svg>\n    )\n  }\n}\n\nexport default CanvasOverlay\n", "import { createElement as h } from 'preact/compat'\nimport { BaseNodeModel, BaseEdgeModel } from '../../model'\nimport { ElementType, ModelType } from '../../constant'\nimport { getHtmlTextHeight } from '../../util'\nimport { forEach, toPairs } from 'lodash-es'\n\nexport type ITextProps = {\n  x: number\n  y: number\n  value: string\n  fontSize?: number\n  fill?: string\n  overflowMode?: 'default' | 'autoWrap' | 'ellipsis'\n  textWidth?: number\n  lineHeight?: number\n  fontFamily?: string | null\n  wrapPadding?: string | number | null\n  model: BaseNodeModel | BaseEdgeModel\n  [key: string]: any\n}\nexport type ForeignObjectPropsType =\n  'string | number | SignalLike<string | number | undefined> | undefined'\n\nexport function Text(props: ITextProps): h.JSX.Element | null {\n  const {\n    x = 0,\n    y = 0,\n    value,\n    fontSize = 12,\n    fill = 'currentColor',\n    overflowMode = 'default',\n    // TODO: 确认该 textWidth 为 '' 时跟设置什么值一致\n    textWidth = undefined,\n    model,\n  } = props\n\n  const attrs: Record<string, any> = {\n    x,\n    y,\n    fill,\n    fontSize,\n    textAnchor: 'middle',\n    dominantBaseline: 'central',\n    // ...props,\n  }\n\n  forEach(toPairs(props), ([k, v]: [k: string, v: any]) => {\n    if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  if (value) {\n    // String(value)，兼容纯数字的文案\n    // TODO: 将 value 转为纯文本，移除其中 \\n \\r 等特殊字符，看是否应该丰富该功能\n    const rows = String(value).split(/[\\r\\n]/g)\n    const rowsLength = rows.length\n\n    if (overflowMode !== 'default') {\n      // 非文本节点设置了自动换行，或者边设置了自动换行并且设置了 textWidth\n      const { BaseType, modelType } = model\n      if (\n        (BaseType === ElementType.NODE && modelType !== ModelType.TEXT_NODE) ||\n        (BaseType === ElementType.EDGE && textWidth)\n      ) {\n        return renderHtmlText(props)\n      }\n    }\n\n    if (rowsLength > 1) {\n      const tSpans = rows.map((row, idx) => {\n        // 保证文字居中，文字 Y 轴偏移为当前行数对应中心行数的偏移行 * 行高\n        const tSpanLineHeight = fontSize + 2\n        const offsetY = (idx - (rowsLength - 1) / 2) * tSpanLineHeight\n        return (\n          <tspan className=\"lf-text-tspan\" x={x} y={y + offsetY}>\n            {row}\n          </tspan>\n        )\n      })\n      return <text {...attrs}>{tSpans}</text>\n    }\n    return <text {...attrs}>{value}</text>\n  }\n  return null\n}\n\nexport function renderHtmlText(props: ITextProps): h.JSX.Element {\n  const {\n    x,\n    y,\n    value,\n    model,\n    textWidth,\n    fontSize = 12,\n    lineHeight,\n    fontFamily = '',\n    wrapPadding = '0, 0',\n    overflowMode,\n  } = props\n\n  const { width, height, textHeight } = model\n  // TODO: 设置文本宽度为 textWidth 或 节点的宽度\n  const textRealWidth: number = textWidth || (width as number)\n  const rows = String(value).split(/[\\r\\n]/g)\n  const rowsLength = rows.length\n  const textRealHeight = getHtmlTextHeight({\n    rows,\n    style: {\n      fontSize: `${fontSize}px`,\n      width: `${textRealWidth}px`,\n      fontFamily,\n      lineHeight,\n      padding: wrapPadding,\n    },\n    rowsLength,\n    className: 'lf-get-text-height',\n  })\n\n  // 当文字超过边框时，取文字高度的实际值，也就是文字可以超过边框\n  let foreignObjectHeight: number =\n    (height as number) > textRealHeight ? (height as number) : textRealHeight\n  // 如果设置了文本高度，取设置的高度\n  if (textHeight) {\n    foreignObjectHeight = textHeight as number\n  }\n\n  const isEllipsis = overflowMode === 'ellipsis'\n  if (isEllipsis) {\n    foreignObjectHeight = fontSize + 2\n  }\n\n  return (\n    <g>\n      <foreignObject\n        width={textRealWidth}\n        height={foreignObjectHeight}\n        x={x - textRealWidth / 2}\n        y={y - foreignObjectHeight / 2}\n        style={{ overflow: 'visible', textAlign: 'left' }}\n      >\n        <div\n          className=\"lf-node-text-auto-wrap\"\n          style={{\n            minHeight: foreignObjectHeight,\n            width: textRealWidth,\n            padding: wrapPadding,\n          }}\n        >\n          <div\n            className={\n              isEllipsis\n                ? 'lf-node-text-ellipsis-content'\n                : 'lf-node-text-auto-wrap-content'\n            }\n            title={isEllipsis ? rows.join('') : ''}\n            style={{ ...(props as h.JSX.CSSProperties) }}\n          >\n            {rows.map((row) => (\n              <div className=\"lf-node-text--auto-wrap-inner\">{row}</div>\n            ))}\n          </div>\n        </div>\n      </foreignObject>\n    </g>\n  )\n}\n\nexport default Text\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\n\nexport type ILineProps = {\n  id?: string\n  tabindex?: number\n  x1?: number\n  y1?: number\n  x2?: number\n  y2?: number\n  stroke?: string // Color\n  className?: string\n  style?: h.JSX.CSSProperties\n  [key: string]: any\n}\n\nexport function Line(props: ILineProps): h.JSX.Element {\n  const attrs: ILineProps = {\n    // default\n    x1: 10,\n    y1: 10,\n    x2: 20,\n    y2: 20,\n    stroke: 'black',\n    // ...props\n  }\n\n  forEach(toPairs(props), ([k, v]: [k: string, v: any]) => {\n    if (k === 'style') {\n      attrs[k] = v\n    } else if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  return <line {...attrs} />\n}\n\nexport default Line\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\nimport LogicFlow from '../..'\n\nexport type IRectProps = {\n  x: number\n  y: number\n  width: number\n  height: number\n  className?: string\n  radius?: LogicFlow.NumberOrPercent\n  [key: string]: any\n}\n\nexport function Rect(props: IRectProps): h.JSX.Element {\n  const { x, y, width, height, className, strokeWidth, radius = 0 } = props\n\n  const leftTopX = x - width / 2\n  const leftTopY = y - height / 2\n  const attrs: Record<string, any> = {}\n  attrs['stroke-width'] = strokeWidth\n  forEach(toPairs(props), ([k, v]: [k: string, v: any]) => {\n    if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  if (className) {\n    attrs.className = `lf-basic-shape ${className}`\n  } else {\n    attrs.className = 'lf-basic-shape'\n  }\n\n  if (radius) {\n    attrs.rx = radius\n    attrs.ry = radius\n  }\n  attrs.x = leftTopX\n  attrs.y = leftTopY\n\n  return <rect {...attrs} />\n}\n\nexport default Rect\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\n\nexport type IPathProps = {\n  d: string\n  [key: string]: any\n}\n\nexport function Path(props: IPathProps): h.JSX.Element {\n  const attrs: Record<string, any> = {\n    d: '',\n  }\n  forEach(toPairs(props), ([k, v]: [key: string, v: any]) => {\n    if (k === 'style' || typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  return <path {...attrs} />\n}\n\nexport default Path\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\nimport { LogicFlow } from '../..'\n\nexport type ICircleProps = {\n  x?: number\n  y?: number\n  r?: number\n  className?: string\n} & LogicFlow.CommonTheme\n\nexport function Circle(props: ICircleProps): h.JSX.Element {\n  const { x = 0, y = 0, r = 4, className } = props\n\n  const attrs: ICircleProps = {\n    cx: x,\n    cy: y,\n    r,\n    fill: 'transparent',\n    fillOpacity: 1,\n    strokeWidth: 1,\n    stroke: '#000',\n    strokeOpacity: 1,\n  }\n\n  forEach(toPairs(props), ([k, v]: [k: string, v: any]) => {\n    if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  if (className) {\n    attrs.className = `lf-basic-shape ${className}`\n  } else {\n    attrs.className = `lf-basic-shape`\n  }\n\n  return <circle {...attrs} />\n}\n\nexport default Circle\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\nimport { LogicFlow } from '../..'\n\nexport type IEllipseProps = {\n  x?: number\n  y?: number\n  rx?: number\n  ry?: number\n  className?: string\n} & LogicFlow.CommonTheme\n\nexport function Ellipse(props: IEllipseProps): h.JSX.Element {\n  const { x = 0, y = 0, rx = 4, ry = 4, className } = props\n\n  const attrs: Record<string, any> = {\n    cx: x,\n    cy: y,\n    rx,\n    ry,\n    fill: 'transparent',\n    fillOpacity: 1,\n    strokeWidth: 1,\n    stroke: '#000',\n    strokeOpacity: 1,\n  }\n  forEach(toPairs(props), ([k, v]: [k: string, v: any]) => {\n    if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  if (className) {\n    attrs.className = `lf-basic-shape ${className}`\n  } else {\n    attrs.className = `lf-basic-shape`\n  }\n\n  return <ellipse {...attrs} />\n}\n\nexport default Ellipse\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\nimport { LogicFlow } from '../..'\n\nexport type IPolygonProps = {\n  points: LogicFlow.PointTuple[]\n  x?: number\n  y?: number\n  className?: string\n}\n\nexport function Polygon(props: IPolygonProps): h.JSX.Element {\n  const { points = [], className } = props\n  const attrs: Record<string, any> = {\n    fill: 'transparent',\n    fillOpacity: 1,\n    strokeWidth: 1,\n    stroke: '#000',\n    strokeOpacity: 1,\n    points: '',\n  }\n\n  forEach(toPairs(props), ([k, v]: [k: string, v: any]) => {\n    if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n\n  if (className) {\n    attrs.classNmae = `lf-basic-shape ${className}`\n  } else {\n    attrs.className = 'lf-basic-shape'\n  }\n  attrs.points = points.map((point) => point.join(',')).join(' ')\n\n  return <polygon {...attrs} />\n}\n\nexport default Polygon\n", "import { createElement as h } from 'preact/compat'\nimport { forEach, toPairs } from 'lodash-es'\n\nexport type IPolylineProps = {\n  points: string\n  pathLength?: number | 'none'\n  className?: string\n}\n\nexport function Polyline(props: IPolylineProps): h.JSX.Element {\n  const { className } = props\n  const attrs: Record<string, unknown> = {\n    points: '',\n    fill: 'none',\n  }\n\n  forEach(toPairs(props), ([k, v]: [k: string, v: unknown]) => {\n    if (k === 'style') {\n      attrs[k] = v\n    } else if (typeof v !== 'object') {\n      attrs[k] = v\n    }\n  })\n  if (className) {\n    attrs.className = `${className}`\n  }\n\n  return <polyline {...attrs} />\n}\n\nexport default Polyline\n", "import { Component } from 'preact/compat'\nimport { Circle, Line } from '../shape'\nimport { observer } from '../..'\nimport LogicFlow from '../../LogicFlow'\nimport { EventType, ModelType } from '../../constant'\nimport { StepDrag, getBezierPoints, IDragParams } from '../../util'\nimport { GraphModel, BezierEdgeModel } from '../../model'\n\nimport Point = LogicFlow.Point\n\ntype IProps = {\n  graphModel: GraphModel\n}\n\ntype IAnchorProps = {\n  position: Point\n  bezierModel: BezierEdgeModel\n  graphModel: GraphModel\n  type: string\n}\n\ntype IState = {\n  endX: number\n  endY: number\n}\n\n// bezier曲线的可调整锚点\nexport class BezierAdjustAnchor extends Component<IAnchorProps, IState> {\n  dragHandler: StepDrag\n\n  constructor() {\n    super()\n    this.dragHandler = new StepDrag({\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n    })\n  }\n\n  onDragging = ({ event }: IDragParams) => {\n    const { graphModel, bezierModel, type } = this.props\n    const {\n      canvasOverlayPosition: { x, y },\n    } = graphModel.getPointByClient({\n      x: event!.clientX,\n      y: event!.clientY,\n    })\n    bezierModel.updateAdjustAnchor(\n      {\n        x,\n        y,\n      },\n      type,\n    )\n    graphModel.eventCenter.emit(EventType.EDGE_ADJUST, {\n      data: bezierModel.getData(),\n    })\n  }\n  onDragEnd = () => {\n    const { bezierModel } = this.props\n    bezierModel.isDragging = false\n  }\n\n  render() {\n    const { position } = this.props\n    const { x, y } = position\n    const { bezierModel } = this.props\n    const { adjustAnchor } = bezierModel.getEdgeStyle()\n    return (\n      <Circle\n        className=\"lf-bezier-adjust-anchor\"\n        x={x}\n        y={y}\n        {...adjustAnchor}\n        onMouseDown={(ev) => {\n          // if (edgeAddable !== false) {\n          this.dragHandler.handleMouseDown(ev)\n          // }\n        }}\n      />\n    )\n  }\n}\n\n@observer\nexport class BezierAdjustOverlay extends Component<IProps> {\n  getBezierAdjust(bezier: BezierEdgeModel, graphModel: GraphModel) {\n    const { path, id } = bezier\n    const pointsList = getBezierPoints(path)\n    const [start, sNext, ePre, end] = pointsList\n    const { adjustLine } = bezier.getEdgeStyle()\n    const result: any = [] // TODO: 类型定义\n    result.push(\n      <Line\n        x1={start.x}\n        y1={start.y}\n        x2={sNext.x}\n        y2={sNext.y}\n        {...adjustLine}\n      />,\n    )\n    result.push(\n      <BezierAdjustAnchor\n        position={sNext}\n        bezierModel={bezier}\n        graphModel={graphModel}\n        key={`${id}_ePre`}\n        type=\"sNext\"\n      />,\n    )\n    result.push(\n      <Line x1={end.x} y1={end.y} x2={ePre.x} y2={ePre.y} {...adjustLine} />,\n    )\n    result.push(\n      <BezierAdjustAnchor\n        position={ePre}\n        bezierModel={bezier}\n        graphModel={graphModel}\n        key={`${id}_sNext`}\n        type=\"ePre\"\n      />,\n    )\n    return result\n  }\n\n  // 获取选中bezier曲线，调整操作线和锚点\n  selectedBezierEdge() {\n    const { graphModel } = this.props\n    const edgeList = graphModel.edges\n    const edgeAdjust: any = [] // TODO：类型定义\n    for (let i = 0; i < edgeList.length; i++) {\n      const edge = edgeList[i]\n      if (\n        edge.isSelected &&\n        edge.modelType === ModelType.BEZIER_EDGE &&\n        edge.draggable\n      ) {\n        edgeAdjust.push(\n          this.getBezierAdjust(edge as BezierEdgeModel, graphModel),\n        )\n      }\n    }\n    return edgeAdjust\n  }\n\n  render() {\n    return <g className=\"lf-bezier-adjust\">{this.selectedBezierEdge()}</g>\n  }\n}\n\nexport default BezierAdjustOverlay\n", "import { Component } from 'preact/compat'\n\n/**\n * 背景配置, 支持css属性配置\n * https://developer.mozilla.org/zh-CN/docs/Web/CSS/background\n * @example\n * {\n *  backgroundImage: \"url('./img/grid.svg')\",\n backgroundRepeat: 'repeat',\n * }\n */\nexport type BackgroundConfig = {\n  /**\n   * 背景图片地址\n   */\n  backgroundImage?: string\n  /**\n   * 是否重复\n   */\n  backgroundRepeat?: string\n  [key: string]: any\n}\n\ntype IProps = {\n  background: BackgroundConfig\n}\n\nexport class BackgroundOverlay extends Component<IProps> {\n  render() {\n    const { background } = this.props\n    return (\n      <div className=\"lf-background\">\n        <div style={background} className=\"lf-background-area\" />\n      </div>\n    )\n  }\n}\n\nexport default BackgroundOverlay\n", "import { Component } from 'preact/compat'\nimport { cloneDeep, assign } from 'lodash-es'\nimport { observer } from '../..'\nimport { createUuid } from '../../util'\nimport { GraphModel } from '../../model'\nimport { DEFAULT_GRID_SIZE } from '../../constant'\n\nimport GridOptions = Grid.GridOptions\n\ntype IProps = GridOptions & {\n  graphModel: GraphModel\n}\n\n@observer\nexport class Grid extends Component<IProps> {\n  readonly id = createUuid()\n\n  // 网格类型为点状\n  renderDot() {\n    const { config, size = 1, visible } = this.props\n\n    const { color, thickness = 2 } = config ?? {}\n\n    // 对于点状网格，点的半径不能大于网格大小的四分之一\n    const radius = Math.min(Math.max(2, thickness), size / 4)\n    const opacity = visible ? 1 : 0\n    return (\n      <g fill={color} opacity={opacity}>\n        <circle cx={0} cy={0} r={radius / 2} />\n        <circle cx={0} cy={size} r={radius / 2} />\n        <circle cx={size} cy={0} r={radius / 2} />\n        <circle cx={size} cy={size} r={radius / 2} />\n      </g>\n    )\n  }\n\n  // 网格类型为交叉线\n  // todo: 采用背景缩放的方式，实现更好的体验\n  renderMesh() {\n    const { config, size = 1, visible } = this.props\n    const { color, thickness = 1 } = config ?? {}\n\n    // 对于交叉线网格，线的宽度不能大于网格大小的一半\n    const strokeWidth = Math.min(Math.max(1, thickness), size / 2)\n    const d = `M 0 0 H ${size} V ${size} H 0 Z`\n    const opacity = visible ? 1 : 0\n    return (\n      <path\n        d={d}\n        stroke={color}\n        strokeWidth={strokeWidth}\n        opacity={opacity}\n        fill=\"transparent\"\n      />\n    )\n  }\n\n  render() {\n    const {\n      type,\n      size = 1,\n      graphModel: { transformModel },\n    } = this.props\n    const { SCALE_X, SKEW_Y, SKEW_X, SCALE_Y, TRANSLATE_X, TRANSLATE_Y } =\n      transformModel\n    const matrixString = [\n      SCALE_X,\n      SKEW_Y,\n      SKEW_X,\n      SCALE_Y,\n      TRANSLATE_X,\n      TRANSLATE_Y,\n    ].join(',')\n    const transform = `matrix(${matrixString})`\n    // const transitionStyle = {\n    //   transition: 'all 0.1s ease',\n    // };\n    return (\n      <div className=\"lf-grid\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n          width=\"100%\"\n          height=\"100%\"\n        >\n          <defs>\n            <pattern\n              id={this.id}\n              patternUnits=\"userSpaceOnUse\"\n              patternTransform={transform}\n              x=\"0\"\n              y=\"0\"\n              width={size}\n              height={size}\n            >\n              {type === 'dot' && this.renderDot()}\n              {type === 'mesh' && this.renderMesh()}\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill={`url(#${this.id})`} />\n        </svg>\n      </div>\n    )\n  }\n}\n\nexport namespace Grid {\n  export type GridOptions = {\n    /**\n     * 网格格子间距\n     */\n    size?: number\n    /**\n     * 网格是否可见\n     */\n    visible?: boolean\n    /**\n     * 网格类型\n     * - `dot` 点状网格\n     * - `mesh` 交叉线网格\n     */\n    type?: 'dot' | 'mesh'\n    config?: {\n      /**\n       * 网格的颜色\n       */\n      color: string\n      /**\n       * 网格的宽度\n       * - 对于 `dot` 点状网格，表示点的大小\n       * - 对于 `mesh` 交叉线网格，表示线的宽度\n       */\n      thickness?: number\n    }\n  }\n\n  export const defaultProps: GridOptions = {\n    size: DEFAULT_GRID_SIZE,\n    visible: true,\n    type: 'dot',\n    config: {\n      color: '#ababab',\n      thickness: 1,\n    },\n  }\n\n  export function getGridOptions(options: number | boolean | GridOptions) {\n    const defaultOptions = cloneDeep(Grid.defaultProps)\n    if (typeof options === 'number') {\n      return assign(defaultOptions, { size: options })\n    } else if (typeof options === 'boolean') {\n      return assign(defaultOptions, { visible: options })\n    } else {\n      return assign(defaultOptions, options)\n    }\n  }\n}\n", "import { Component } from 'preact/compat'\nimport { observer } from '../..'\nimport GraphModel from '../../model/GraphModel'\n\ntype IProps = {\n  graphModel: GraphModel\n}\n\n@observer\nexport class ModificationOverlay extends Component<IProps> {\n  render() {\n    const {\n      graphModel: { transformModel },\n    } = this.props\n    const { transform } = transformModel.getTransformStyle()\n    const { children } = this.props\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        width=\"100%\"\n        height=\"100%\"\n        className=\"modification-overlay\"\n      >\n        <g transform={transform}>{children}</g>\n      </svg>\n    )\n  }\n}\n\nexport default ModificationOverlay\n", "import { Component } from 'preact/compat'\nimport { Rect } from '../shape'\nimport { observer } from '../..'\nimport { ModelType } from '../../constant'\nimport {\n  GraphModel,\n  LineEdgeModel,\n  BezierEdgeModel,\n  PolylineEdgeModel,\n} from '../../model'\nimport { points2PointsList, getBezierPoints, getBBoxOfPoints } from '../../util'\n\ntype IProps = {\n  graphModel: GraphModel\n}\n\n@observer\nexport class OutlineOverlay extends Component<IProps> {\n  // 节点outline\n  getNodesOutline() {\n    const { graphModel } = this.props\n    const {\n      nodes,\n      editConfigModel: { hoverOutline, nodeSelectedOutline },\n    } = graphModel\n    const nodeOutline: any = []\n    nodes.forEach((element) => {\n      if (element.isHovered || element.isSelected) {\n        const { isHovered, isSelected, x, y, width, height } = element\n        if (\n          (nodeSelectedOutline && isSelected) ||\n          (hoverOutline && isHovered)\n        ) {\n          const style = element.getOutlineStyle()\n          let attributes = {}\n          Object.keys(style).forEach((key) => {\n            if (key !== 'hover') {\n              attributes[key] = style[key]\n            }\n          })\n          if (isHovered) {\n            const hoverStyle = style.hover\n            attributes = {\n              ...attributes,\n              ...hoverStyle,\n            }\n          }\n          nodeOutline.push(\n            <Rect\n              transform={element.transform}\n              className=\"lf-outline-node\"\n              {...{\n                x,\n                y,\n                // width: width + 10,\n                // height: height + 10,\n                width: width + 10,\n                height: height + 10,\n              }}\n              {...attributes}\n            />,\n          )\n        }\n      }\n    })\n    return nodeOutline\n  }\n\n  // 边的outline\n  getEdgeOutline() {\n    const {\n      graphModel: {\n        edges: edgeList,\n        editConfigModel: { edgeSelectedOutline, hoverOutline },\n      },\n    } = this.props\n    const edgeOutline: any = []\n    for (let i = 0; i < edgeList.length; i++) {\n      const edge = edgeList[i]\n      if (\n        (edgeSelectedOutline && edge.isSelected) ||\n        (hoverOutline && edge.isHovered)\n      ) {\n        if (edge.modelType === ModelType.LINE_EDGE) {\n          edgeOutline.push(this.getLineOutline(edge))\n        } else if (edge.modelType === ModelType.POLYLINE_EDGE) {\n          edgeOutline.push(this.getPolylineOutline(edge as PolylineEdgeModel))\n        } else if (edge.modelType === ModelType.BEZIER_EDGE) {\n          edgeOutline.push(this.getBezierOutline(edge as BezierEdgeModel))\n        }\n      }\n    }\n    return edgeOutline\n  }\n\n  // 直线outline\n  getLineOutline(line: LineEdgeModel) {\n    const { startPoint, endPoint } = line\n    const x = (startPoint.x + endPoint.x) / 2\n    const y = (startPoint.y + endPoint.y) / 2\n    const width = Math.abs(startPoint.x - endPoint.x) + 10\n    const height = Math.abs(startPoint.y - endPoint.y) + 10\n    const style = line.getOutlineStyle()\n    return (\n      <Rect\n        className=\"lf-outline-edge\"\n        {...{\n          x,\n          y,\n          width,\n          height,\n        }}\n        {...style}\n      />\n    )\n  }\n\n  // 折线outline\n  getPolylineOutline(polyline: PolylineEdgeModel) {\n    const { points } = polyline\n    const pointsList = points2PointsList(points)\n    const bbox = getBBoxOfPoints(pointsList, 8)\n    const { x, y, width, height } = bbox\n    const style = polyline.getOutlineStyle()\n    return (\n      <Rect\n        className=\"lf-outline\"\n        {...{\n          x,\n          y,\n          width,\n          height,\n        }}\n        {...style}\n      />\n    )\n  }\n\n  // 曲线outline\n  getBezierOutline(bezier: BezierEdgeModel) {\n    const { path } = bezier\n    const pointsList = getBezierPoints(path)\n    const bbox = getBBoxOfPoints(pointsList, 8)\n    const { x, y, width, height } = bbox\n    const style = bezier.getOutlineStyle()\n    return (\n      <Rect\n        className=\"lf-outline\"\n        {...{\n          x,\n          y,\n          width,\n          height,\n        }}\n        {...style}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <g className=\"lf-outline\">\n        {this.getNodesOutline()}\n        {this.getEdgeOutline()}\n      </g>\n    )\n  }\n}\n\nexport default OutlineOverlay\n", "import { Component } from 'preact/compat'\nimport SnaplineModel from '../../model/SnaplineModel'\nimport Line from '../shape/Line'\nimport { observer } from '../..'\nimport OutlineOverlay from './OutlineOverlay'\n\ntype IProps = {\n  snaplineModel?: SnaplineModel\n}\n\n@observer\nexport class SnaplineOverlay extends Component<IProps> {\n  render() {\n    const { snaplineModel } = this.props\n    const { position, isShowHorizontal, isShowVertical } = snaplineModel ?? {}\n    const style = snaplineModel?.getStyle()\n    const { x = 0, y = 0 } = position ?? {}\n    // 展示横向，纵向默认-100000,100000 减少计算量\n    const horizontalLine = {\n      x1: -100000,\n      y1: y,\n      x2: 100000,\n      y2: y,\n      ...style,\n      stroke: isShowHorizontal ? style?.stroke : 'none',\n    }\n    const verticalLine = {\n      x1: x,\n      y1: -100000,\n      x2: x,\n      y2: 100000,\n      ...style,\n      stroke: isShowVertical ? style?.stroke : 'none',\n    }\n    return (\n      <g className=\"lf-snapline\">\n        <Line {...horizontalLine} />\n        <Line {...verticalLine} />\n      </g>\n    )\n  }\n}\n\nexport default OutlineOverlay\n", "import { createElement as h, Component } from 'preact/compat'\nimport { OutlineOverlay } from '.'\nimport { observer } from '../..'\nimport LogicFlow from '../../LogicFlow'\nimport { GraphModel } from '../../model'\nimport { Tool } from '../../tool'\n\ntype IProps = {\n  graphModel: GraphModel\n  tool: Tool\n}\n\n@observer\nexport class ToolOverlay extends Component<IProps> {\n  // 在react严格模式下，useEffect会执行两次，但是在LogicFlow内部，则只会触发一次componentDidMount和componentDidUpdate。\n  // 其中第一次componentDidMount对应的graphModel为被丢弃的graphModel, 所以不应该生效。\n  // 在非react环境下，只会触发一次componentDidMount，不会触发componentDidUpdate。\n  // 所以这里采用componentDidUpdate和componentDidMount都去触发插件的render方法。\n  componentDidMount(): void {\n    this.triggerToolRender()\n  }\n\n  componentDidUpdate(): void {\n    this.triggerToolRender()\n  }\n\n  /**\n   * 外部传入的一般是HTMLElement\n   */\n  getTools() {\n    const { tool, graphModel } = this.props\n    const { textEditElement } = graphModel\n    const tools = tool.getTools()\n    const components = tools.map((t) =>\n      h(t, {\n        textEditElement,\n        graphModel,\n        logicFlow: tool.instance,\n      }),\n    )\n    tool.components = components\n    return components\n  }\n\n  triggerToolRender() {\n    const { tool, graphModel } = this.props\n    const ToolOverlayElement = document.querySelector(\n      `#ToolOverlay_${graphModel.flowId}`,\n    ) as HTMLElement\n    const lf: LogicFlow = tool.getInstance()\n    lf.components.forEach((render) => render(lf, ToolOverlayElement))\n    lf.components = [] // 保证extension组件的render只执行一次\n  }\n\n  render() {\n    const { graphModel } = this.props\n    return (\n      <div className=\"lf-tool-overlay\" id={`ToolOverlay_${graphModel.flowId}`}>\n        {this.getTools()}\n      </div>\n    )\n  }\n}\n\nexport default OutlineOverlay\n", "import { Component, ComponentType } from 'preact/compat'\nimport { map, throttle } from 'lodash-es'\nimport {\n  CanvasOverlay,\n  ToolOverlay,\n  BackgroundOverlay,\n  Grid,\n  SnaplineOverlay,\n  OutlineOverlay,\n  BezierAdjustOverlay,\n  ModificationOverlay,\n} from './overlay'\nimport DnD from './behavior/dnd'\nimport { observer } from '..'\nimport { Options as LFOptions } from '../options'\nimport Tool from '../tool/tool'\nimport {\n  GraphModel,\n  BaseEdgeModel,\n  BaseNodeModel,\n  SnaplineModel,\n} from '../model'\nimport { EventType } from '../constant'\n\ntype IGraphProps = {\n  getView: (type: string) => ComponentType<any> | undefined\n  tool: Tool\n  options: LFOptions.Definition\n  dnd: DnD\n  snaplineModel?: SnaplineModel\n  graphModel: GraphModel\n}\n\ntype ContainerStyle = {\n  width?: string\n  height?: string\n}\n\n@observer\nclass Graph extends Component<IGraphProps> {\n  handleResize = () => {\n    this.props.graphModel.resize()\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', throttle(this.handleResize, 200))\n  }\n\n  componentDidUpdate() {\n    this.props.graphModel.eventCenter.emit(EventType.GRAPH_UPDATED, {})\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', throttle(this.handleResize, 200))\n  }\n\n  getComponent(\n    model: BaseEdgeModel | BaseNodeModel,\n    graphModel: GraphModel,\n    overlay = 'canvas-overlay',\n  ) {\n    const { getView } = this.props\n    // https://juejin.cn/post/7046639346656493582 - 几种方式来声明React Component的类型\n    const View = getView(model.type)\n    if (View) {\n      return (\n        <View\n          key={model.id}\n          model={model}\n          graphModel={graphModel}\n          overlay={overlay}\n        />\n      )\n    }\n    return null\n  }\n\n  render() {\n    const { graphModel, tool, options, dnd, snaplineModel } = this.props\n    const style: ContainerStyle = {}\n    // 如果初始化的时候，不传宽高，则默认为父容器宽高。\n    if (options.width) {\n      style.width = `${graphModel.width}px`\n    }\n    if (options.height) {\n      style.height = `${graphModel.height}px`\n    }\n    const grid = options.grid && Grid.getGridOptions(options.grid)\n    const { fakeNode, editConfigModel } = graphModel\n    const { adjustEdge } = editConfigModel\n    return (\n      <div className=\"lf-graph\" flow-id={graphModel.flowId}>\n        <CanvasOverlay graphModel={graphModel} dnd={dnd}>\n          <g className=\"lf-base\">\n            {map(graphModel.sortElements, (nodeModel) =>\n              this.getComponent(nodeModel, graphModel),\n            )}\n          </g>\n          {fakeNode ? this.getComponent(fakeNode, graphModel) : ''}\n        </CanvasOverlay>\n        <ModificationOverlay graphModel={graphModel}>\n          <OutlineOverlay graphModel={graphModel} />\n          {adjustEdge ? <BezierAdjustOverlay graphModel={graphModel} /> : ''}\n          {options.snapline !== false ? (\n            <SnaplineOverlay snaplineModel={snaplineModel} />\n          ) : (\n            ''\n          )}\n        </ModificationOverlay>\n        <ToolOverlay graphModel={graphModel} tool={tool} />\n        {options.background && (\n          <BackgroundOverlay background={options.background} />\n        )}\n        {grid && <Grid {...grid} graphModel={graphModel} />}\n      </div>\n    )\n  }\n}\n\nexport default Graph\n", "import { Component } from 'preact/compat'\nimport { Circle, Line } from './shape'\nimport { BaseNode } from './node'\nimport LogicFlow from '../LogicFlow'\nimport { ElementState, EventType } from '../constant'\nimport { GraphModel, BaseNodeModel, Model } from '../model'\nimport {\n  StepDrag,\n  formatAnchorConnectValidateData,\n  targetNodeInfo,\n  distance,\n  cancelRaf,\n  createRaf,\n  IDragParams,\n} from '../util'\n\nimport AnchorConfig = Model.AnchorConfig\nimport NodeData = LogicFlow.NodeData\n\ninterface IProps {\n  // x: number;\n  // y: number;\n  // id?: string;\n  anchorData: AnchorConfig\n  node: BaseNode<any>\n  style?: Record<string, any>\n  hoverStyle?: Record<string, any>\n  edgeStyle?: Record<string, any>\n  anchorIndex: number\n  graphModel: GraphModel\n  nodeModel: BaseNodeModel\n  setHoverOff: (e: MouseEvent) => void\n}\n\ninterface IState {\n  startX: number\n  startY: number\n  endX: number\n  endY: number\n  dragging: boolean\n}\n\nclass Anchor extends Component<IProps, IState> {\n  preTargetNode?: BaseNodeModel\n  sourceRuleResults: Map<string, Model.ConnectRuleResult> // 不同的target，source的校验规则产生的结果不同\n  targetRuleResults: Map<string, Model.ConnectRuleResult> // 不同的target，target的校验规则不同\n  dragHandler: StepDrag\n  t: any\n\n  constructor() {\n    super()\n    this.sourceRuleResults = new Map()\n    this.targetRuleResults = new Map()\n\n    this.state = {\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      dragging: false,\n    }\n    this.dragHandler = new StepDrag({\n      onDragStart: this.onDragStart,\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n    })\n  }\n\n  getAnchorShape() {\n    const { anchorData, style, node } = this.props\n    const anchorShape = node.getAnchorShape(anchorData)\n    if (anchorShape) return anchorShape\n    const { x, y } = anchorData\n    const hoverStyle = {\n      ...style,\n      ...style?.hover,\n    }\n    return (\n      <g>\n        <Circle\n          className=\"lf-node-anchor-hover\"\n          {...hoverStyle}\n          {...{\n            x,\n            y,\n          }}\n        />\n        <Circle\n          className=\"lf-node-anchor\"\n          {...style}\n          {...{\n            x,\n            y,\n          }}\n        />\n      </g>\n    )\n  }\n\n  // TODO: 确定 event 是否会有 null 和 undefined 的情况，事件类型做相应的适配\n  onDragStart = ({ event }: Partial<IDragParams>) => {\n    const { anchorData, nodeModel, graphModel } = this.props\n    graphModel.selectNodeById(nodeModel.id)\n    if (nodeModel.autoToFront) {\n      graphModel.toFront(nodeModel.id)\n    }\n    graphModel.eventCenter.emit(EventType.ANCHOR_DRAGSTART, {\n      data: anchorData,\n      e: event!,\n      nodeModel,\n    })\n    this.setState({\n      startX: anchorData.x,\n      startY: anchorData.y,\n      endX: anchorData.x,\n      endY: anchorData.y,\n    })\n  }\n  onDragging = ({ event }) => {\n    const { graphModel, nodeModel, anchorData } = this.props\n    const {\n      transformModel,\n      eventCenter,\n      width,\n      height,\n      editConfigModel: { autoExpand, stopMoveGraph },\n    } = graphModel\n    const { clientX, clientY } = event\n    const {\n      domOverlayPosition: { x, y },\n      canvasOverlayPosition: { x: x1, y: y1 },\n    } = graphModel.getPointByClient({\n      x: clientX,\n      y: clientY,\n    })\n    if (this.t) {\n      cancelRaf(this.t)\n    }\n    let nearBoundary: number[] = [] // TODO: 定义元组类型 Tuple\n    const size = 10\n    if (x < 10) {\n      nearBoundary = [size, 0]\n    } else if (x + 10 > width) {\n      nearBoundary = [-size, 0]\n    } else if (y < 10) {\n      nearBoundary = [0, size]\n    } else if (y + 10 > height) {\n      nearBoundary = [0, -size]\n    }\n    this.setState({\n      endX: x1,\n      endY: y1,\n      dragging: true,\n    })\n    this.moveAnchorEnd(x1, y1)\n    if (nearBoundary.length > 0 && !stopMoveGraph && autoExpand) {\n      this.t = createRaf(() => {\n        const [translateX, translateY] = nearBoundary\n        transformModel.translate(translateX, translateY)\n        const { endX, endY } = this.state\n        this.setState({\n          endX: endX - translateX,\n          endY: endY - translateY,\n        })\n        this.moveAnchorEnd(endX - translateX, endY - translateY)\n      })\n    }\n    eventCenter.emit(EventType.ANCHOR_DRAG, {\n      data: anchorData,\n      e: event,\n      nodeModel,\n    })\n  }\n  onDragEnd = ({ event }: Partial<IDragParams>) => {\n    if (this.t) {\n      cancelRaf(this.t)\n    }\n    const edgeModel = this.checkEnd(event)\n    this.setState({\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      dragging: false,\n    })\n    // 清除掉缓存结果 fix:#320 因为创建边之后，会影响校验结果变化，所以需要重新校验\n    this.sourceRuleResults.clear()\n    this.targetRuleResults.clear()\n    const { graphModel, nodeModel, anchorData } = this.props\n    if (edgeModel) {\n      graphModel.eventCenter.emit(EventType.ANCHOR_DRAGEND, {\n        data: anchorData,\n        e: event!,\n        nodeModel,\n        edgeModel,\n      })\n    }\n  }\n\n  get customTrajectory() {\n    const {\n      graphModel: { customTrajectory },\n    } = this.props\n    return customTrajectory\n  }\n\n  get relateEdges() {\n    const {\n      graphModel: { getAnchorIncomingEdge, getAnchorOutcomingEdge },\n      anchorData: { id },\n    } = this.props\n    return {\n      incomingEdgeList: getAnchorIncomingEdge(id),\n      outcomingEdgeList: getAnchorOutcomingEdge(id),\n    }\n  }\n\n  checkEnd = (event: MouseEvent | null | undefined) => {\n    const {\n      graphModel,\n      nodeModel,\n      anchorData: { x, y, id },\n    } = this.props\n    // nodeModel.setSelected(false);\n    /* 创建边 */\n    const { endX, endY, dragging } = this.state\n    const info = targetNodeInfo(\n      {\n        x: endX,\n        y: endY,\n      },\n      graphModel,\n    )\n    // 为了保证鼠标离开的时候，将上一个节点状态重置为正常状态。\n    if (\n      this.preTargetNode &&\n      this.preTargetNode.state !== ElementState.DEFAULT\n    ) {\n      this.preTargetNode.setElementState(ElementState.DEFAULT)\n    }\n    // 没有dragging就结束边\n    if (!dragging) return\n    if (info && info.node) {\n      const targetNode = info.node\n      const anchorId = info.anchor.id\n      const targetInfoId = `${nodeModel.id}_${targetNode.id}_${anchorId}_${id}`\n      const { isAllPass: isSourcePass, msg: sourceMsg } =\n        this.sourceRuleResults.get(targetInfoId) || {}\n      const { isAllPass: isTargetPass, msg: targetMsg } =\n        this.targetRuleResults.get(targetInfoId) || {}\n      if (isSourcePass && isTargetPass) {\n        targetNode.setElementState(ElementState.DEFAULT)\n        const targetNodeModel = graphModel.getNodeModelById(info.node.id)\n        const edgeData = graphModel.edgeGenerator?.(\n          nodeModel.getData(),\n          targetNodeModel?.getData() as NodeData,\n        )\n        const edgeModel = graphModel.addEdge({\n          ...edgeData,\n          sourceNodeId: nodeModel.id,\n          sourceAnchorId: id,\n          startPoint: {\n            x,\n            y,\n          },\n          targetNodeId: info.node.id,\n          targetAnchorId: info.anchor.id,\n          endPoint: {\n            x: info.anchor.x,\n            y: info.anchor.y,\n          },\n        })\n        const { anchorData } = this.props\n        graphModel.eventCenter.emit(EventType.ANCHOR_DROP, {\n          data: anchorData,\n          e: event!,\n          nodeModel,\n          edgeModel,\n        })\n        return edgeModel\n      }\n      const nodeData = targetNode.getData()\n      graphModel.eventCenter.emit(EventType.CONNECTION_NOT_ALLOWED, {\n        data: nodeData,\n        msg: targetMsg || sourceMsg || '不允许添加连线',\n      })\n      return null\n    }\n  }\n\n  moveAnchorEnd(endX: number, endY: number) {\n    const { graphModel, nodeModel, anchorData } = this.props\n    const info = targetNodeInfo(\n      {\n        x: endX,\n        y: endY,\n      },\n      graphModel,\n    )\n    if (info) {\n      const targetNode = info.node\n      const anchorId = info.anchor.id\n      if (this.preTargetNode && this.preTargetNode !== info.node) {\n        this.preTargetNode.setElementState(ElementState.DEFAULT)\n      }\n      // #500 不允许锚点自己连自己, 在锚点一开始连接的时候, 不触发自己连接自己的校验。\n      if (anchorData.id === anchorId) {\n        return\n      }\n      this.preTargetNode = targetNode\n      // 支持节点的每个锚点单独设置是否可连接，因此规则key去nodeId + anchorId作为唯一值\n      const targetInfoId = `${nodeModel.id}_${targetNode.id}_${anchorId}_${anchorData.id}`\n\n      // 查看鼠标是否进入过target，若有检验结果，表示进入过, 就不重复计算了。\n      if (!this.targetRuleResults.has(targetInfoId)) {\n        const targetAnchor = info.anchor\n        const sourceRuleResult = nodeModel.isAllowConnectedAsSource(\n          targetNode,\n          anchorData,\n          targetAnchor,\n        )\n        const targetRuleResult = targetNode.isAllowConnectedAsTarget(\n          nodeModel,\n          anchorData,\n          targetAnchor,\n        )\n        this.sourceRuleResults.set(\n          targetInfoId,\n          formatAnchorConnectValidateData(sourceRuleResult),\n        )\n        this.targetRuleResults.set(\n          targetInfoId,\n          formatAnchorConnectValidateData(targetRuleResult),\n        )\n      }\n      const { isAllPass: isSourcePass } =\n        this.sourceRuleResults.get(targetInfoId) ?? {}\n      const { isAllPass: isTargetPass } =\n        this.targetRuleResults.get(targetInfoId) ?? {}\n      // 实时提示出即将链接的锚点\n      if (isSourcePass && isTargetPass) {\n        targetNode.setElementState(ElementState.ALLOW_CONNECT)\n      } else {\n        targetNode.setElementState(ElementState.NOT_ALLOW_CONNECT)\n      }\n    } else if (\n      this.preTargetNode &&\n      this.preTargetNode.state !== ElementState.DEFAULT\n    ) {\n      // 为了保证鼠标离开的时候，将上一个节点状态重置为正常状态。\n      this.preTargetNode.setElementState(ElementState.DEFAULT)\n    }\n  }\n\n  isShowLine() {\n    const { startX, startY, endX, endY } = this.state\n    const v = distance(startX, startY, endX, endY)\n    return v > 10\n  }\n\n  render() {\n    const { startX, startY, endX, endY } = this.state\n    const {\n      anchorData: { edgeAddable },\n      edgeStyle,\n    } = this.props\n    return (\n      // className=\"lf-anchor\" 作为下载时，需要将锚点删除的依据，不要修改类名\n      <g className=\"lf-anchor\">\n        <g\n          onMouseDown={(ev) => {\n            if (edgeAddable !== false) {\n              this.dragHandler.handleMouseDown(ev)\n            }\n          }}\n        >\n          {this.getAnchorShape()}\n        </g>\n        {this.isShowLine() &&\n          (this.customTrajectory ? (\n            this.customTrajectory({\n              sourcePoint: {\n                x: startX,\n                y: startY,\n              },\n              targetPoint: {\n                x: endX,\n                y: endY,\n              },\n              ...edgeStyle,\n            })\n          ) : (\n            <Line\n              x1={startX}\n              y1={startY}\n              x2={endX}\n              y2={endY}\n              {...edgeStyle}\n              pointer-events=\"none\"\n            />\n          ))}\n      </g>\n    )\n  }\n}\n\nexport default Anchor\n", "import { Component } from 'preact/compat'\nimport { map, reduce } from 'lodash-es'\nimport Circle from './shape/Circle'\nimport LogicFlow from '../LogicFlow'\nimport { EventType } from '../constant'\nimport EventEmitter from '../event/eventEmitter'\nimport { GraphModel, BaseNodeModel } from '../model'\nimport { StepDrag, TranslateMatrix, Vector } from '../util'\n\ninterface IRotateControlProps {\n  graphModel: GraphModel\n  nodeModel: BaseNodeModel\n  eventCenter: EventEmitter\n  style: LogicFlow.CommonTheme\n}\n\nclass RotateControlPoint extends Component<IRotateControlProps> {\n  readonly style = {}\n  private defaultAngle!: number\n  normal!: Vector\n  stepperDrag: any\n\n  constructor(props: IRotateControlProps) {\n    super(props)\n    this.style = props.style\n    this.stepperDrag = new StepDrag({\n      onDragging: this.onDragging,\n    })\n  }\n\n  onDragging = ({ event }: any) => {\n    const { graphModel, nodeModel, eventCenter } = this.props\n    const { selectNodes } = graphModel\n    const { x, y } = nodeModel\n    const { clientX, clientY } = event\n    const {\n      canvasOverlayPosition: { x: cx, y: cy },\n    } = graphModel.getPointByClient({\n      x: clientX,\n      y: clientY,\n    })\n    const v = new Vector(cx - x, cy - y)\n    const angle = this.normal?.angle(v) - this.defaultAngle\n    const matrix = new TranslateMatrix(-x, -y)\n      .rotate(angle)\n      .translate(x, y)\n      .toString()\n    nodeModel.transform = matrix\n    nodeModel.rotate = angle\n\n    let nodeIds = map(selectNodes, (node) => node.id)\n    if (nodeIds.indexOf(nodeModel.id) === -1) {\n      nodeIds = [nodeModel.id]\n    }\n    const nodeIdMap = reduce(\n      nodeIds,\n      (acc, nodeId) => {\n        const node = graphModel.getNodeModelById(nodeId)\n        acc[nodeId] = node?.getMoveDistance(0, 0, false)\n        return acc\n      },\n      {},\n    )\n    nodeIds.forEach((nodeId) => {\n      const edges = graphModel.getNodeEdges(nodeId)\n      edges.forEach((edge) => {\n        if (nodeIdMap[edge.sourceNodeId]) {\n          const model = graphModel.getNodeModelById(edge.sourceNodeId)\n          const anchor = model!.anchors.find(\n            (item) => item.id === edge.sourceAnchorId,\n          )!\n          edge.updateStartPoint(anchor)\n        }\n        if (nodeIdMap[edge.targetNodeId]) {\n          const model = graphModel.getNodeModelById(edge.targetNodeId)\n          const anchor = model!.anchors.find(\n            (item) => item.id === edge.targetAnchorId,\n          )!\n          edge.updateEndPoint(anchor)\n        }\n      })\n    })\n\n    eventCenter.emit(EventType.NODE_ROTATE, {\n      e: event,\n      nodeModel,\n    })\n  }\n\n  render() {\n    const { nodeModel } = this.props\n    const { x, y, width, height } = nodeModel\n    const cx = x + width / 2 + 20\n    const cy = y - height / 2 - 20\n    this.normal = new Vector(1, 0)\n    this.defaultAngle = this.normal.angle(new Vector(cx - x, cy - y))\n    nodeModel.defaultAngle = this.defaultAngle\n    return (\n      <g className=\"lf-rotate-control\">\n        <g\n          onMouseDown={(ev) => {\n            this.stepperDrag.handleMouseDown(ev)\n          }}\n        >\n          <Circle {...this.style} cx={cx} cy={cy} />\n        </g>\n      </g>\n    )\n  }\n}\n\nexport default RotateControlPoint\n", "import classNames from 'classnames'\nimport { createElement as h, Component } from 'preact/compat'\nimport { ElementState } from '../../constant'\nimport { GraphModel, BaseNodeModel, BaseEdgeModel } from '../../model'\nimport { Text } from '../shape'\nimport { IDragParams, StepDrag } from '../../util'\n\nexport type IBaseTextProps = {\n  model: BaseNodeModel | BaseEdgeModel\n  graphModel: GraphModel\n  draggable: boolean\n  editable: boolean\n}\n\nexport type IBaseTextState = {\n  isHovered: boolean\n}\n\nexport class BaseText<\n  P extends IBaseTextProps,\n  S extends IBaseTextState,\n> extends Component<P, S> {\n  stepperDrag: StepDrag\n\n  constructor(props: P) {\n    super()\n    const { draggable } = props\n    // TODO: 确认为什么不在 new 的时候传入 model，而在下面使用的时候赋值\n    this.stepperDrag = new StepDrag({\n      onDragging: this.onDragging,\n      step: 1,\n      // model,\n      isStopPropagation: draggable,\n    })\n  }\n\n  getShape(): h.JSX.Element | null {\n    const { model, graphModel } = this.props\n    const { editConfigModel } = graphModel\n    const {\n      text: { value, x, y, editable, draggable },\n    } = model\n    const attr = {\n      x,\n      y,\n      className: '',\n      value,\n    }\n    // DONE: 代码优化，看是否可以引入 classnames\n    // TODO: 确认下面逻辑是否正确，确认正确后删除下面注释\n    // if (editable) {\n    //   attr.className = 'lf-element-text';\n    // } else if (draggable || editConfigModel.nodeTextDraggable) {\n    //   attr.className = 'lf-text-draggable';\n    // } else {\n    //   attr.className = 'lf-text-disabled';\n    // }\n    const style = model.getTextStyle()\n    const isDraggable = editConfigModel.nodeTextDraggable || draggable\n\n    return (\n      <Text\n        {...attr}\n        {...style}\n        className={classNames({\n          'lf-element-text': editable,\n          'lf-text-draggable': !editable && isDraggable,\n          'lf-text-disabled': !editable && !isDraggable,\n        })}\n        model={model}\n      />\n    )\n  }\n\n  mouseDownHandler = (e: MouseEvent) => {\n    const { draggable, model, graphModel } = this.props\n    const {\n      editConfigModel: { nodeTextDraggable },\n    } = graphModel\n\n    if (draggable || nodeTextDraggable) {\n      this.stepperDrag.model = model\n      this.stepperDrag.handleMouseDown(e)\n    }\n  }\n\n  onDragging = ({ deltaX, deltaY }: IDragParams) => {\n    const {\n      model,\n      graphModel: { transformModel },\n    } = this.props\n\n    if (deltaX && deltaY) {\n      const [curDeltaX, curDeltaY] = transformModel.fixDeltaXY(deltaX, deltaY)\n      model.moveText(curDeltaX, curDeltaY)\n    }\n  }\n\n  dbClickHandler = () => {\n    // 静默模式下，双击不更改状态，不可编辑\n    const { editable } = this.props\n    if (editable) {\n      const { model } = this.props\n      model.setElementState(ElementState.TEXT_EDIT)\n    }\n  }\n\n  render(): h.JSX.Element | undefined {\n    const {\n      model: { text },\n    } = this.props\n    if (text) {\n      return (\n        <g onMouseDown={this.mouseDownHandler} onDblClick={this.dbClickHandler}>\n          {this.getShape()}\n        </g>\n      )\n    }\n  }\n}\n\nexport default BaseText\n", "import { createElement as h } from 'preact/compat'\nimport { Text, ITextProps, Rect, IRectProps } from '..'\nimport { BaseText } from '.'\nimport { BaseEdgeModel, GraphModel } from '../../model'\nimport { getHtmlTextHeight, getSvgTextSize } from '../../util'\n\nexport type ILineTextProps = {\n  model: BaseEdgeModel\n  graphModel: GraphModel\n  draggable: boolean\n  editable: boolean\n  [key: string]: unknown\n}\n\nexport type ILineTextState = {\n  isHovered: boolean\n}\n\nexport class LineText extends BaseText<ILineTextProps, ILineTextState> {\n  constructor(props: ILineTextProps) {\n    super(props)\n    this.state = {\n      isHovered: false,\n    }\n  }\n\n  // Hover 状态相关\n  setHoverOn = () => {\n    this.setState({\n      isHovered: true,\n    })\n  }\n  setHoverOff = () => {\n    this.setState({\n      isHovered: false,\n    })\n  }\n\n  getBackground(): h.JSX.Element | null {\n    const { isHovered } = this.state\n    const { model } = this.props\n    const { text } = model\n    const style = model.getTextStyle()\n\n    let backgroundStyle = style.background || {}\n    if (isHovered && style.hover && style.hover.background) {\n      backgroundStyle = { ...backgroundStyle, ...style.hover.background }\n    }\n\n    // 当存在文本并且文本背景不为透明时，计算背景框\n    if (text?.value && backgroundStyle?.fill !== 'transparent') {\n      const { fontSize, textWidth, lineHeight, overflowMode } = style\n      const { wrapPadding } = backgroundStyle\n      const rows = text?.value.split(/[\\r\\n]/g)\n      const rowsLength = rows.length\n\n      let { x, y } = text\n      let rectAttr: unknown = {}\n\n      if (overflowMode === 'autoWrap' && textWidth) {\n        const textHeight = getHtmlTextHeight({\n          rows,\n          style: {\n            fontSize: `${fontSize}px`,\n            width: `${textWidth}px`,\n            lineHeight,\n            padding: wrapPadding,\n          },\n          rowsLength,\n          className: 'lf-get-text-height',\n        })\n\n        rectAttr = {\n          ...backgroundStyle,\n          x,\n          y,\n          width: textWidth,\n          height: textHeight,\n        }\n      } else {\n        // 背景框宽度，最长一行字节数 / 2 * fontSize + 2\n        // 背景框宽度，行数 * fontSize + 2\n        let { width, height } = getSvgTextSize({ rows, rowsLength, fontSize })\n        if (overflowMode === 'ellipsis') {\n          // https://github.com/didi/LogicFlow/issues/1151\n          // 边上的文字过长（使用\"ellipsis\"模式）出现省略号，背景也需要进行宽度的重新计算\n\n          // 跟Text.tsx保持同样的计算逻辑(overflowMode === 'ellipsis')\n          // Text.tsx使用textRealWidth=textWidth || width\n          // Text.tsx使用foreignObjectHeight = fontSize + 2;\n          width = textWidth\n          height = fontSize + 2\n        }\n\n        // 根据设置的 padding 调整 width, height, x, y 的值\n        // TODO: 下面方法感觉可以提取成工具方法\n        if (typeof backgroundStyle.wrapPadding === 'string') {\n          let padding = backgroundStyle.wrapPadding\n            .split(',')\n            .filter((padding) => padding.trim())\n            .map((padding) => parseFloat(padding.trim()))\n\n          if (padding.length > 0 && padding.length <= 4) {\n            if (padding.length === 1) {\n              const [allSides] = padding\n              padding = [allSides, allSides, allSides, allSides]\n            } else if (padding.length === 2) {\n              const [vertical, horizontal] = padding\n              padding = [vertical, horizontal, vertical, horizontal]\n            } else if (padding.length === 3) {\n              const [top, horizontal, bottom] = padding\n              padding = [top, horizontal, bottom, horizontal]\n            }\n\n            const [top, right, bottom, left] = padding\n            width += right + left\n            height += top + bottom\n            x = x + (right - left) / 2\n            y = y + (bottom - top) / 2\n          }\n        }\n\n        rectAttr = {\n          ...backgroundStyle,\n          x: x - 1,\n          y: y - 1,\n          width,\n          height,\n        }\n      }\n\n      return <Rect {...(rectAttr as IRectProps)} />\n    }\n\n    return null\n  }\n\n  getShape(): h.JSX.Element | null {\n    const { model } = this.props\n    const {\n      text: { x, y, value },\n    } = model\n    if (!value) return null\n\n    const style = model.getTextStyle()\n    const attrs: ITextProps = {\n      x,\n      y,\n      value,\n      model,\n      className: 'lf-element-text',\n      ...style, // 透传 edgeText 属性，如：color, fontSize, fontWeight, fontFamily, textAnchor 等\n    }\n\n    return (\n      <g\n        className=\"lf-line-text\"\n        onMouseEnter={this.setHoverOn}\n        onMouseLeave={this.setHoverOff}\n      >\n        {this.getBackground()}\n        <Text {...attrs} />\n      </g>\n    )\n  }\n}\n\nexport default LineText\n", "import { createElement as h, Component } from 'preact/compat'\nimport { cloneDeep, find, forEach, map } from 'lodash-es'\nimport { Rect } from './shape'\nimport LogicFlow from '../LogicFlow'\nimport { getNodeBBox, IDragParams, StepDrag } from '../util'\nimport { BaseNodeModel, GraphModel } from '../model'\n\nimport NodeData = LogicFlow.NodeData\nimport VectorData = LogicFlow.VectorData\nimport { EventType } from '../constant'\nimport ResizeInfo = ResizeControl.ResizeInfo\nimport ResizeNodeData = ResizeControl.ResizeNodeData\nimport ControlItemProps = ResizeControl.ControlItemProps\n\nexport enum ResizeControlIndex {\n  LEFT_TOP = 0,\n  RIGHT_TOP = 1,\n  RIGHT_BOTTOM = 2,\n  LEFT_BOTTOM = 3,\n}\n\nexport type IResizeControlProps = {\n  model: BaseNodeModel\n  graphModel: GraphModel\n} & ControlItemProps\n\nexport type IResizeControlState = {\n  startX: number\n  startY: number\n  endX: number\n  endY: number\n  dragging: boolean\n}\n\nexport class ResizeControl extends Component<\n  IResizeControlProps,\n  IResizeControlState\n> {\n  readonly index: ResizeControlIndex\n  readonly nodeModel: BaseNodeModel\n  readonly graphModel: GraphModel\n  readonly dragHandler: StepDrag\n\n  constructor(props: IResizeControlProps) {\n    super()\n    const { index, model, graphModel } = props\n    this.index = index\n    this.nodeModel = model\n    this.graphModel = graphModel\n\n    // 初始化拖拽工具\n    this.dragHandler = new StepDrag({\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n      step: graphModel.gridSize,\n    })\n  }\n\n  updateEdgePointByAnchors = () => {\n    // https://github.com/didi/LogicFlow/issues/807\n    // https://github.com/didi/LogicFlow/issues/875\n    // 之前的做法，比如Rect是使用getRectResizeEdgePoint()计算边的point缩放后的位置\n    // getRectResizeEdgePoint()考虑了瞄点在四条边以及在4个圆角的情况\n    // 使用的是一种等比例缩放的模式，比如：\n    // const pct = (y - beforeNode.y) / (beforeNode.height / 2 - radius)\n    // afterPoint.y = afterNode.y + (afterNode.height / 2 - radius) * pct\n    // 但是用户自定义的getDefaultAnchor()不一定是按照比例编写的\n    // 它可能是 x: x + 20：每次缩放都会保持在x右边20的位置，因此用户自定义瞄点时，然后产生无法跟随的问题\n    // 现在的做法是：直接获取用户自定义瞄点的位置，然后用这个位置作为边的新的起点，而不是自己进行计算\n    const { id, anchors } = this.nodeModel\n    const edges = this.graphModel.getNodeEdges(id)\n    // 更新边\n    forEach(edges, (edge) => {\n      if (edge.sourceNodeId === id) {\n        // 边是以该节点为 sourceNode 时\n        const anchorItem = find(\n          anchors,\n          (anchor) => anchor.id === edge.sourceAnchorId,\n        )\n\n        if (anchorItem) {\n          edge.updateStartPoint({\n            x: anchorItem.x,\n            y: anchorItem.y,\n          })\n        }\n      } else if (edge.targetNodeId === id) {\n        // 边是以该节点为 targetNode 时\n        const anchorItem = find(\n          anchors,\n          (anchor) => anchor.id === edge.targetAnchorId,\n        )\n\n        if (anchorItem) {\n          edge.updateEndPoint({\n            x: anchorItem.x,\n            y: anchorItem.y,\n          })\n        }\n      }\n    })\n  }\n\n  triggerResizeEvent = (\n    preNodeData: ResizeNodeData,\n    nextNodeData: ResizeNodeData,\n  ) => {\n    this.graphModel.eventCenter.emit(EventType.NODE_RESIZE, {\n      preNodeData,\n      nextNodeData,\n    })\n  }\n\n  /**\n   * 计算 Control 拖动后，节点的高度信息\n   * @param index\n   * @param resizeInfo\n   * @param pct\n   * @param freezeWidth\n   * @param freezeHeight\n   */\n  recalcResizeInfo = (\n    index: ResizeControlIndex,\n    resizeInfo: ResizeInfo,\n    pct = 1,\n    freezeWidth = false,\n    freezeHeight = false,\n  ): ResizeInfo => {\n    const nextResizeInfo = cloneDeep(resizeInfo)\n    let { deltaX, deltaY } = nextResizeInfo\n    const { width, height, PCTResizeInfo } = nextResizeInfo\n    if (PCTResizeInfo) {\n      const sensitivity = 4 // 越低越灵敏\n      let deltaScale = 0\n      let combineDelta = 0\n      switch (index) {\n        case ResizeControlIndex.LEFT_TOP:\n          combineDelta = (deltaX * -1 - deltaY) / sensitivity\n          break\n        case ResizeControlIndex.RIGHT_TOP:\n          combineDelta = (deltaX - deltaY) / sensitivity\n          break\n        case ResizeControlIndex.RIGHT_BOTTOM:\n          combineDelta = (deltaX + deltaY) / sensitivity\n          break\n        case ResizeControlIndex.LEFT_BOTTOM:\n          combineDelta = (deltaX * -1 + deltaY) / sensitivity\n          break\n        default:\n          break\n      }\n\n      if (combineDelta !== 0) {\n        deltaScale =\n          Math.round(\n            (combineDelta / PCTResizeInfo.ResizeBasis.basisHeight) * 100000,\n          ) / 1000\n      }\n\n      PCTResizeInfo.ResizePCT.widthPCT = Math.max(\n        Math.min(\n          PCTResizeInfo.ResizePCT.widthPCT + deltaScale,\n          PCTResizeInfo.ScaleLimit.maxScaleLimit,\n        ),\n        PCTResizeInfo.ScaleLimit.minScaleLimit,\n      )\n      PCTResizeInfo.ResizePCT.heightPCT = Math.max(\n        Math.min(\n          PCTResizeInfo.ResizePCT.heightPCT + deltaScale,\n          PCTResizeInfo.ScaleLimit.maxScaleLimit,\n        ),\n        PCTResizeInfo.ScaleLimit.minScaleLimit,\n      )\n\n      const spcWidth = Math.round(\n        (PCTResizeInfo.ResizePCT.widthPCT *\n          PCTResizeInfo.ResizeBasis.basisWidth) /\n          100,\n      )\n      const spcHeight = Math.round(\n        (PCTResizeInfo.ResizePCT.heightPCT *\n          PCTResizeInfo.ResizeBasis.basisHeight) /\n          100,\n      )\n\n      switch (index) {\n        case ResizeControlIndex.LEFT_TOP:\n          deltaX = width - spcWidth\n          deltaY = height - spcHeight\n          break\n        case ResizeControlIndex.RIGHT_TOP:\n          deltaX = spcWidth - width\n          deltaY = height - spcHeight\n          break\n        case ResizeControlIndex.RIGHT_BOTTOM:\n          deltaX = spcWidth - width\n          deltaY = spcHeight - height\n          break\n        case ResizeControlIndex.LEFT_BOTTOM:\n          deltaX = width - spcWidth\n          deltaY = spcHeight - height\n          break\n        default:\n          break\n      }\n      return nextResizeInfo\n    }\n\n    // 如果限制了宽/高不变，对应的 width/height 保持一致\n    switch (index) {\n      case ResizeControlIndex.LEFT_TOP:\n        nextResizeInfo.width = freezeWidth ? width : width - deltaX * pct\n        nextResizeInfo.height = freezeHeight ? height : height - deltaY * pct\n        break\n      case ResizeControlIndex.RIGHT_TOP:\n        nextResizeInfo.width = freezeWidth ? width : width + deltaX * pct\n        nextResizeInfo.height = freezeHeight ? height : height - deltaY * pct\n        break\n      case ResizeControlIndex.RIGHT_BOTTOM:\n        nextResizeInfo.width = freezeWidth ? width : width + deltaX * pct\n        nextResizeInfo.height = freezeHeight ? height : height + deltaY * pct\n        break\n      case ResizeControlIndex.LEFT_BOTTOM:\n        nextResizeInfo.width = freezeWidth ? width : width - deltaX * pct\n        nextResizeInfo.height = freezeHeight ? height : height + deltaY * pct\n        break\n      default:\n        break\n    }\n\n    return nextResizeInfo\n  }\n\n  resizeNode = ({ deltaX, deltaY }: VectorData) => {\n    // TODO: 调用每个节点中更新缩放时的方法 updateNode 函数，用来各节点缩放的方法\n    // 1. 计算当前 Control 的一些信息，\n    const {\n      r, // circle\n      rx, // ellipse/diamond\n      ry,\n      width, // rect/html\n      height,\n      PCTResizeInfo,\n\n      minWidth,\n      minHeight,\n      maxWidth,\n      maxHeight,\n    } = this.nodeModel\n    const isFreezeWidth = minWidth === maxWidth\n    const isFreezeHeight = minHeight === maxHeight\n\n    const resizeInfo = {\n      width: r || rx || width,\n      height: r || ry || height,\n      deltaX,\n      deltaY,\n      PCTResizeInfo,\n    }\n\n    const pct = r || (rx && ry) ? 1 / 2 : 1\n    const nextSize = this.recalcResizeInfo(\n      this.index,\n      resizeInfo,\n      pct,\n      isFreezeWidth,\n      isFreezeHeight,\n    )\n\n    // 限制放大缩小的最大最小范围\n    if (\n      nextSize.width < minWidth ||\n      nextSize.width > maxWidth ||\n      nextSize.height < minHeight ||\n      nextSize.height > maxHeight\n    ) {\n      this.dragHandler.cancelDrag()\n      return\n    }\n    // 如果限制了宽高不变，对应的 x/y 不产生位移\n    nextSize.deltaX = isFreezeWidth ? 0 : nextSize.deltaX\n    nextSize.deltaY = isFreezeWidth ? 0 : nextSize.deltaY\n\n    const preNodeData = this.nodeModel.getData()\n    const nextNodeData = this.nodeModel.resize(nextSize)\n\n    console.log('nextNodeData ===>>>', nextNodeData)\n\n    // 更新边\n    this.updateEdgePointByAnchors()\n    // 触发 resize 事件\n    this.triggerResizeEvent(preNodeData, nextNodeData)\n  }\n\n  onDragging = ({ deltaX, deltaY }: IDragParams) => {\n    const { transformModel } = this.graphModel\n    const [dx, dy] = transformModel.fixDeltaXY(deltaX, deltaY)\n\n    this.resizeNode({\n      deltaX: dx,\n      deltaY: dy,\n    })\n  }\n\n  // 由于将拖拽放大缩小改成丝滑模式，这个时候需要再拖拽结束的时候，将节点的位置更新到 grid 上。\n  onDragEnd = () => {\n    // TODO: 确认下面该代码是否还需要（应该是默认让节点拖拽以 gridSize 为步长移动）\n    // const { gridSize = 1 } = this.graphModel\n    // const x = gridSize * Math.round(this.nodeModel.x / gridSize)\n    // const y = gridSize * Math.round(this.nodeModel.y / gridSize)\n    const x = this.nodeModel.x\n    const y = this.nodeModel.y\n    this.nodeModel.moveTo(x, y)\n\n    // 先触发 onDragging() -> 更新边 -> 再触发用户自定义的 getDefaultAnchor()，所以 onDragging()\n    // 拿到的 anchors 是滞后的，为了正确的设置最终的位置，应该在拖拽结束的时候，再设置一次边的 Point 位置，\n    // 此时拿到的 anchors 是最新的\n    this.updateEdgePointByAnchors()\n  }\n\n  render(): h.JSX.Element {\n    const { x, y, direction, model } = this.props\n    const { width, height, ...restStyle } = model.getResizeControlStyle()\n    return (\n      <g className={`lf-resize-control lf-resize-control-${direction}`}>\n        <Rect\n          className=\"lf-resize-control-content\"\n          x={x}\n          y={y}\n          width={width ?? 7}\n          height={height ?? 7}\n          {...restStyle}\n          onMouseDown={this.dragHandler.handleMouseDown}\n        />\n      </g>\n    )\n  }\n}\n\ninterface IResizeControlGroupProps {\n  style: LogicFlow.CommonTheme\n  model: BaseNodeModel\n  graphModel: GraphModel\n}\n\nexport class ResizeControlGroup extends Component<IResizeControlGroupProps> {\n  constructor() {\n    super()\n  }\n\n  getResizeControl(): h.JSX.Element[] {\n    const { model, graphModel } = this.props\n    const { minX, minY, maxX, maxY } = getNodeBBox(model)\n\n    const controlList: ControlItemProps[] = [\n      {\n        index: ResizeControlIndex.LEFT_TOP,\n        direction: 'nw',\n        x: minX,\n        y: minY,\n      }, // 左上角\n      {\n        index: ResizeControlIndex.RIGHT_TOP,\n        direction: 'ne',\n        x: maxX,\n        y: minY,\n      }, // 右上角\n      {\n        index: ResizeControlIndex.RIGHT_BOTTOM,\n        direction: 'se',\n        x: maxX,\n        y: maxY,\n      }, // 右下角\n      {\n        index: ResizeControlIndex.LEFT_BOTTOM,\n        direction: 'sw',\n        x: minX,\n        y: maxY,\n      }, // 左下角\n    ]\n\n    return map(controlList, (control) => (\n      <ResizeControl {...control} model={model} graphModel={graphModel} />\n    ))\n  }\n\n  getResizeOutline() {\n    const { model } = this.props\n    const { x, y, width, height } = model\n    const style = model.getResizeOutlineStyle()\n    return <Rect {...style} x={x} y={y} width={width} height={height} />\n  }\n\n  render(): h.JSX.Element {\n    return (\n      <g className=\"lf-resize-control-group\">\n        {this.getResizeOutline()}\n        {this.getResizeControl()}\n      </g>\n    )\n  }\n}\n\nexport namespace ResizeControl {\n  export type RectShapeResizeProps = {\n    width: number\n    height: number\n  }\n\n  export type PolygonShapeResizerProps = {\n    rx: number\n    ry: number\n  }\n  export type ResizeProps = RectShapeResizeProps | PolygonShapeResizerProps\n\n  export type ResizeInfo = {\n    width: number\n    height: number\n    deltaX: number\n    deltaY: number\n    PCTResizeInfo?: PCTResizeParams\n  }\n  export type ResizeNodeData = NodeData & Partial<ResizeProps>\n\n  export type Direction = 'nw' | 'n' | 'ne' | 'e' | 'se' | 's' | 'sw' | 'w'\n  export type ControlItemProps = {\n    index: ResizeControlIndex\n    direction: Direction\n    x: number\n    y: number\n  }\n\n  export type PCTResizeParams = {\n    ResizePCT: {\n      widthPCT: number\n      heightPCT: number\n    }\n    ResizeBasis: {\n      basisWidth: number\n      basisHeight: number\n    }\n    ScaleLimit: {\n      maxScaleLimit: number\n      minScaleLimit: number\n    }\n  }\n}\n\nexport default ResizeControlGroup\n", "import { createElement as h, Component } from 'preact/compat'\nimport { reaction, IReactionDisposer } from 'mobx'\nimport { map } from 'lodash-es'\nimport Anchor from '../Anchor'\nimport { BaseText } from '../text'\nimport LogicFlow from '../../LogicFlow'\nimport { GraphModel, BaseNodeModel, Model } from '../../model'\nimport { ElementState, EventType } from '../../constant'\nimport {\n  StepDrag,\n  snapToGrid,\n  isIe,\n  isMultipleSelect,\n  cancelRaf,\n  createRaf,\n  TranslateMatrix,\n  IDragParams,\n  // RotateMatrix,\n} from '../../util'\nimport RotateControlPoint from '../Rotate'\nimport ResizeControlGroup from '../Control'\n\ntype IProps = {\n  model: BaseNodeModel\n  graphModel: GraphModel\n}\n\ntype IState = {\n  isDragging?: boolean\n}\n\nexport abstract class BaseNode<P extends IProps> extends Component<P, IState> {\n  static isObserved: boolean = false\n  static extendsKey?: string\n\n  t: any\n  moveOffset?: LogicFlow.OffsetData\n\n  stepDrag: StepDrag\n  mouseUpDrag?: boolean\n  startTime?: number\n  modelDisposer: IReactionDisposer\n\n  constructor(props: IProps) {\n    super()\n    const {\n      graphModel: { gridSize, eventCenter },\n      model,\n    } = props\n    // 不在构造函数中判断，因为editConfig可能会被动态改变\n    this.stepDrag = new StepDrag({\n      onDragStart: this.onDragStart,\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n      step: gridSize,\n      eventType: 'NODE',\n      isStopPropagation: false,\n      eventCenter,\n      model,\n    })\n    // https://github.com/didi/LogicFlow/issues/1370\n    // 当使用撤销功能：LogicFlow.undo()时，会重新初始化所有model数据，即LogicFlow.undo()时会新构建一个model对象\n    // 但是this.stepDrag并不会重新创建\n    // 导致this.stepDrag持有的model并没有重新赋值，因为之前的做法是构造函数中传入一个model对象\n    // 使用mobx的reaction监听能力，如果this.props.model发生变化，则进行this.stepDrag.setModel()操作\n    this.modelDisposer = reaction(\n      () => this.props,\n      (newProps) => {\n        if (newProps && newProps.model) {\n          this.stepDrag.setModel(newProps.model)\n        }\n      },\n    )\n  }\n\n  componentWillUnmount() {\n    if (this.modelDisposer) {\n      this.modelDisposer()\n    }\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  abstract getShape(): h.JSX.Element | null\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getAnchorShape(_anchorData?: Model.AnchorConfig): h.JSX.Element | null {\n    return null\n  }\n\n  getAnchors() {\n    const { model, graphModel } = this.props\n    const { isSelected, isHitable, isDragging, isShowAnchor } = model\n    if (isHitable && (isSelected || isShowAnchor) && !isDragging) {\n      return map(model.anchors, (anchor, index) => {\n        const edgeStyle = model.getAnchorLineStyle(anchor)\n        const style = model.getAnchorStyle(anchor)\n        return (\n          <Anchor\n            anchorData={anchor}\n            node={this}\n            style={style}\n            edgeStyle={edgeStyle}\n            anchorIndex={index}\n            nodeModel={model}\n            graphModel={graphModel}\n            setHoverOff={this.setHoverOff}\n          />\n        )\n      })\n    }\n    return []\n  }\n\n  getRotateControl() {\n    const { model, graphModel } = this.props\n    const { isSelected, isHitable, enableRotate, isHovered } = model\n    const style = model.getRotateControlStyle()\n    if (isHitable && (isSelected || isHovered) && enableRotate) {\n      return (\n        <RotateControlPoint\n          graphModel={graphModel}\n          nodeModel={model}\n          eventCenter={graphModel.eventCenter}\n          style={style}\n        />\n      )\n    }\n  }\n\n  getResizeControl(): h.JSX.Element | null {\n    const { model, graphModel } = this.props\n    const { isSelected, isHitable, enableResize, isHovered } = model\n    const style = model.getResizeControlStyle()\n    if (isHitable && (isSelected || isHovered) && enableResize) {\n      return (\n        <ResizeControlGroup\n          style={style}\n          model={model}\n          graphModel={graphModel}\n        />\n      )\n    }\n    return null\n  }\n\n  getText(): h.JSX.Element | null {\n    const { model, graphModel } = this.props\n    // 文本被编辑的时候，显示编辑框，不显示文本。\n    if (model.state === ElementState.TEXT_EDIT) {\n      return null\n    }\n    if (model.text) {\n      const { editConfigModel } = graphModel\n      let draggable = false\n      if (model.text.draggable || editConfigModel.nodeTextDraggable) {\n        draggable = true\n      }\n      return (\n        <BaseText\n          editable={\n            editConfigModel.nodeTextEdit && (model.text.editable ?? true)\n          }\n          model={model}\n          graphModel={graphModel}\n          draggable={draggable}\n        />\n      )\n    }\n    return null\n  }\n\n  getStateClassName() {\n    const {\n      model: { state, isDragging, isSelected },\n    } = this.props\n    let className = 'lf-node'\n    switch (state) {\n      case ElementState.ALLOW_CONNECT:\n        className += ' lf-node-allow'\n        break\n      case ElementState.NOT_ALLOW_CONNECT:\n        className += ' lf-node-not-allow'\n        break\n      default:\n        className += ' lf-node-default'\n        break\n    }\n    if (isDragging) {\n      className += ' lf-isDragging'\n    }\n    if (isSelected) {\n      className += ' lf-node-selected'\n    }\n    return className\n  }\n\n  onDragStart = ({ event }: Partial<IDragParams>) => {\n    const { model, graphModel } = this.props\n    if (event) {\n      const {\n        canvasOverlayPosition: { x, y },\n      } = graphModel.getPointByClient({\n        x: event.clientX,\n        y: event.clientY,\n      })\n      this.moveOffset = {\n        dx: model.x - x,\n        dy: model.y - y,\n      }\n    }\n  }\n  onDragging = ({ event }: IDragParams) => {\n    const { model, graphModel } = this.props\n    // const { isDragging } = model;\n    const {\n      editConfigModel: { stopMoveGraph, autoExpand },\n      transformModel,\n      selectNodes,\n      width,\n      height,\n      gridSize,\n    } = graphModel\n    model.isDragging = true\n    const { clientX, clientY } = event!\n    let {\n      canvasOverlayPosition: { x, y },\n    } = graphModel.getPointByClient({\n      x: clientX,\n      y: clientY,\n    })\n    const [x1, y1] = transformModel.CanvasPointToHtmlPoint([x, y])\n    // 1. 考虑画布被缩放\n    // 2. 考虑鼠标位置不再节点中心\n    x = x + (this.moveOffset?.dx ?? 0)\n    y = y + (this.moveOffset?.dy ?? 0)\n    // 将x, y移动到grid上\n    x = snapToGrid(x, gridSize)\n    y = snapToGrid(y, gridSize)\n    if (!width || !height) {\n      graphModel.moveNode2Coordinate(model.id, x, y)\n      return\n    }\n    const isOutCanvas = x1 < 0 || y1 < 0 || x1 > width || y1 > height\n    if (autoExpand && !stopMoveGraph && isOutCanvas) {\n      // 鼠标超出画布后的拖动，不处理，而是让上一次setInterval持续滚动画布\n      return\n    }\n    // 取节点左上角和右下角，计算节点移动是否超出范围\n    const [leftTopX, leftTopY] = transformModel.CanvasPointToHtmlPoint([\n      x - model.width / 2,\n      y - model.height / 2,\n    ])\n    const [rightBottomX, rightBottomY] = transformModel.CanvasPointToHtmlPoint([\n      x + model.width / 2,\n      y + model.height / 2,\n    ])\n    const size: number = Math.max(gridSize, 20)\n    let nearBoundary: LogicFlow.PointTuple | [] = []\n    if (leftTopX < 0) {\n      nearBoundary = [size, 0]\n    } else if (rightBottomX > graphModel.width) {\n      nearBoundary = [-size, 0]\n    } else if (leftTopY < 0) {\n      nearBoundary = [0, size]\n    } else if (rightBottomY > graphModel.height) {\n      nearBoundary = [0, -size]\n    }\n    if (this.t) {\n      cancelRaf(this.t)\n    }\n\n    model.transform = new TranslateMatrix(-x, -y)\n      .rotate(model.rotate)\n      .translate(x, y)\n      .toString()\n\n    let moveNodes = selectNodes.map((node) => node.id)\n    // 未被选中的节点也可以拖动\n    if (moveNodes.indexOf(model.id) === -1) {\n      moveNodes = [model.id]\n    }\n    if (nearBoundary.length > 0 && !stopMoveGraph && autoExpand) {\n      this.t = createRaf(() => {\n        const [translateX, translateY] = nearBoundary\n        transformModel.translate(translateX ?? 0, translateY ?? 0)\n        const deltaX = -(translateX ?? 0) / transformModel.SCALE_X\n        const deltaY = -(translateY ?? 0) / transformModel.SCALE_X\n        graphModel.moveNodes(moveNodes, deltaX, deltaY)\n      })\n    } else {\n      graphModel.moveNodes(moveNodes, x - model.x, y - model.y)\n    }\n  }\n  onDragEnd = () => {\n    if (this.t) {\n      cancelRaf(this.t)\n    }\n    const { model } = this.props\n    model.isDragging = false\n  }\n  handleMouseUp = () => {\n    const { model } = this.props\n    this.mouseUpDrag = model.isDragging\n  }\n  handleClick = (e: MouseEvent) => {\n    // 节点拖拽进画布之后，不触发click事件相关emit\n    // 点拖拽进画布没有触发mousedown事件，没有startTime，用这个值做区分\n    const isDragging = this.mouseUpDrag === false\n    if (!this.startTime) return\n    const { model, graphModel } = this.props\n    if (!isDragging) return // 如果是拖拽, 不触发click事件。\n    // 节点数据，多为事件对象数据抛出\n    const nodeData = model.getData()\n    const position = graphModel.getPointByClient({\n      x: e.clientX,\n      y: e.clientY,\n    })\n\n    // TODO: 这里加入了 isSelected 与 isMultiple，主要是为 group 插件做的加强，有种被插件夺舍的感觉\n    const eventOptions = {\n      data: nodeData,\n      e,\n      position,\n      isSelected: false,\n      isMultiple: false,\n    }\n\n    const isRightClick = e.button === 2\n    // 这里 IE 11不能正确显示\n    const isDoubleClick = e.detail === 2\n\n    // 判断是否有右击，如果有右击则取消点击事件触发\n    if (isRightClick) return\n\n    const { editConfigModel } = graphModel\n    // 在multipleSelect tool禁用的情况下，允许取消选中节点\n    const isMultiple = isMultipleSelect(e, editConfigModel)\n    eventOptions.isMultiple = isMultiple\n    if (model.isSelected && !isDoubleClick && isMultiple) {\n      eventOptions.isSelected = false\n      model.setSelected(false)\n    } else {\n      graphModel.selectNodeById(model.id, isMultiple)\n      eventOptions.isSelected = true\n      this.toFront()\n    }\n\n    // 不是双击的，默认都是单击\n    if (isDoubleClick) {\n      if (editConfigModel.nodeTextEdit && model.text.editable) {\n        model.setSelected(false)\n        graphModel.setElementStateById(model.id, ElementState.TEXT_EDIT)\n      }\n      graphModel.eventCenter.emit(EventType.NODE_DBCLICK, eventOptions)\n    } else {\n      graphModel.eventCenter.emit(EventType.ELEMENT_CLICK, eventOptions)\n      graphModel.eventCenter.emit(EventType.NODE_CLICK, eventOptions)\n    }\n  }\n  handleContextMenu = (ev: MouseEvent) => {\n    ev.preventDefault()\n    const { model, graphModel } = this.props\n    // 节点数据，多为事件对象数据抛出\n    const nodeData = model.getData()\n\n    const position = graphModel.getPointByClient({\n      x: ev.clientX,\n      y: ev.clientY,\n    })\n    graphModel.setElementStateById(\n      model.id,\n      ElementState.SHOW_MENU,\n      position.domOverlayPosition,\n    )\n    if (!model.isSelected) {\n      graphModel.selectNodeById(model.id)\n    }\n    graphModel.eventCenter.emit(EventType.NODE_CONTEXTMENU, {\n      data: nodeData,\n      e: ev,\n      position,\n    })\n    this.toFront()\n  }\n  handleMouseDown = (ev: MouseEvent) => {\n    const { model, graphModel } = this.props\n    this.startTime = new Date().getTime()\n    const { editConfigModel } = graphModel\n    if (editConfigModel.adjustNodePosition && model.draggable) {\n      this.stepDrag && this.stepDrag.handleMouseDown(ev)\n    }\n  }\n  // 为什么将hover状态放到model中？\n  // 因为自定义节点的时候，可能会基于hover状态自定义不同的样式。\n  setHoverOn = (ev: MouseEvent) => {\n    const { model, graphModel } = this.props\n    if (model.isHovered) return\n    const nodeData = model.getData()\n    model.setHovered(true)\n    graphModel.eventCenter.emit(EventType.NODE_MOUSEENTER, {\n      data: nodeData,\n      e: ev,\n    })\n  }\n  setHoverOff = (ev: MouseEvent) => {\n    const { model, graphModel } = this.props\n    const nodeData = model.getData()\n    if (!model.isHovered) return\n    model.setHovered(false)\n    graphModel.eventCenter.emit(EventType.NODE_MOUSELEAVE, {\n      data: nodeData,\n      e: ev,\n    })\n  }\n  onMouseOut = (ev: MouseEvent) => {\n    if (isIe) {\n      this.setHoverOff(ev)\n    }\n  }\n\n  /**\n   *  @overridable 支持重写, 节点置顶，可以被某些不需要置顶的节点重写，如group节点。\n   */\n  toFront() {\n    const { model, graphModel } = this.props\n    if (model.autoToFront) {\n      graphModel.toFront(model.id)\n    }\n  }\n\n  render() {\n    const { model, graphModel } = this.props\n    const {\n      editConfigModel: {\n        hideAnchors,\n        adjustNodePosition,\n        allowRotate,\n        allowResize,\n      },\n      gridSize,\n      transformModel: { SCALE_X },\n    } = graphModel\n    const { isHitable, draggable, transform } = model\n    const { className = '', ...restAttributes } = model.getOuterGAttributes()\n    const nodeShapeInner = (\n      <g className=\"lf-node-content\">\n        <g transform={transform}>\n          {this.getShape()}\n          {this.getText()}\n          {allowRotate && this.getRotateControl()}\n          {allowResize && this.getResizeControl()}\n        </g>\n        {!hideAnchors && this.getAnchors()}\n      </g>\n    )\n    let nodeShape: h.JSX.Element\n    if (!isHitable) {\n      nodeShape = (\n        <g\n          className={`${this.getStateClassName()} ${className}`}\n          {...restAttributes}\n        >\n          {nodeShapeInner}\n        </g>\n      )\n    } else {\n      if (adjustNodePosition && draggable) {\n        this.stepDrag.setStep(gridSize * SCALE_X)\n      }\n      nodeShape = (\n        <g\n          className={`${this.getStateClassName()} ${className}`}\n          onMouseDown={this.handleMouseDown}\n          onMouseUp={this.handleMouseUp}\n          onClick={this.handleClick}\n          onMouseEnter={this.setHoverOn}\n          onMouseOver={this.setHoverOn}\n          onMouseLeave={this.setHoverOff}\n          onMouseOut={this.onMouseOut}\n          onContextMenu={this.handleContextMenu}\n          {...restAttributes}\n        >\n          {nodeShapeInner}\n        </g>\n      )\n    }\n    return nodeShape\n  }\n}\n\nexport default BaseNode\n", "import { createElement as h } from 'preact/compat'\nimport BaseNode from './BaseNode'\nimport { Rect } from '../shape'\nimport { GraphModel, RectNodeModel } from '../../model'\n\nexport type IRectNodeProps = {\n  model: RectNodeModel\n  graphModel: GraphModel\n}\n\nexport class RectNode extends BaseNode<IRectNodeProps> {\n  getShape(): h.JSX.Element | null {\n    const { model } = this.props\n    const style = model.getNodeStyle()\n    return (\n      <Rect\n        {...style}\n        x={model.x}\n        y={model.y}\n        width={model.width}\n        height={model.height}\n        radius={model.radius}\n      />\n    )\n  }\n}\n\nexport default RectNode\n", "import Circle from '../shape/Circle'\nimport BaseNode from './BaseNode'\nimport { GraphModel, CircleNodeModel } from '../../model'\n\nexport type ICircleNodeProps = {\n  model: CircleNodeModel\n  graphModel: GraphModel\n}\n\nexport class CircleNode extends BaseNode<ICircleNodeProps> {\n  getShape() {\n    const { model } = this.props\n    const { x, y, r } = model\n    const style = model.getNodeStyle()\n    return <Circle {...style} x={x} y={y} r={r} />\n  }\n}\n\nexport default CircleNode\n", "import BaseNode from './BaseNode'\nimport { Polygon } from '../shape'\nimport { GraphModel, PolygonNodeModel } from '../../model'\n\nexport type IPolygonNodeProps = {\n  model: PolygonNodeModel\n  graphModel: GraphModel\n}\n\nexport class PolygonNode extends BaseNode<IPolygonNodeProps> {\n  getShape() {\n    const { model } = this.props\n    const { x, y, width, height, points } = model as PolygonNodeModel\n    const style = model.getNodeStyle()\n    const attr = {\n      transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n    }\n    return (\n      <g {...attr}>\n        <Polygon {...style} points={points} x={x} y={y} />\n      </g>\n    )\n  }\n}\n\nexport default PolygonNode\n", "import BaseNode from './BaseNode'\nimport Polygon from '../shape/Polygon'\nimport { GraphModel, DiamondNodeModel } from '../../model'\n\nexport type IDiamondNodeProps = {\n  model: DiamondNodeModel\n  graphModel: GraphModel\n}\n\nexport class DiamondNode extends BaseNode<IDiamondNodeProps> {\n  getShape() {\n    const { model } = this.props\n    const style = model.getNodeStyle()\n    return (\n      <g>\n        <Polygon {...style} points={model.points} x={model.x} y={model.y} />\n      </g>\n    )\n  }\n}\n\nexport default DiamondNode\n", "import BaseNode from './BaseNode'\nimport Ellipse from '../shape/Ellipse'\nimport { GraphModel, EllipseNodeModel } from '../../model'\n\nexport type IEllipseNodeProps = {\n  model: EllipseNodeModel\n  graphModel: GraphModel\n}\n\nexport class EllipseNode extends BaseNode<IEllipseNodeProps> {\n  getShape() {\n    const { model } = this.props\n    const style = model.getNodeStyle()\n    return (\n      <Ellipse {...style} x={model.x} y={model.y} rx={model.rx} ry={model.ry} />\n    )\n  }\n}\n\nexport default EllipseNode\n", "import Rect from '../shape/Rect'\nimport BaseNode from './BaseNode'\nimport { GraphModel, TextNodeModel } from '../../model'\n\nexport type ITextNodeProps = {\n  model: TextNodeModel\n  graphModel: GraphModel\n}\n\nexport class TextNode extends BaseNode<ITextNodeProps> {\n  getBackground() {\n    const { model } = this.props\n    const style = model.getTextStyle()\n    // 背景框宽度，最长一行字节数/2 * fontsize + 2\n    // 背景框宽度， 行数 * fontsize + 2\n    // FIX: #1067\n    const { width, height, x, y } = model\n    const rectAttr = {\n      ...style.background,\n      x,\n      y,\n      width,\n      height,\n    }\n    return <Rect {...rectAttr} />\n  }\n\n  getResizeControl() {\n    return null\n  }\n\n  getShape() {\n    return <g>{this.getBackground()}</g>\n  }\n}\n\nexport default TextNode\n", "import { createRef } from 'preact/compat'\nimport BaseNode from './BaseNode'\nimport { GraphModel, HtmlNodeModel } from '../../model'\n\nexport type IHtmlNodeProps = {\n  model: HtmlNodeModel\n  graphModel: GraphModel\n}\n\nexport class HtmlNode extends BaseNode<IHtmlNodeProps> {\n  ref = createRef()\n  currentProperties?: string\n  preProperties?: string\n\n  get rootEl() {\n    return this.ref.current\n  }\n\n  /**\n   * @overridable 支持重写\n   * 自定义HTML节点内容\n   * @param {HTMLElement} rootEl 自定义HTML节点内容可以挂载的dom节点\n   * @example\n   * class CustomHtmlNode extends HtmlNode {\n   *   setHtml(rootEl) {\n   *     const input = document.createElement('input');\n   *     rootEl.appendChild(input)\n   *   }\n   * }\n   */\n  setHtml(rootEl: SVGForeignObjectElement) {\n    rootEl.appendChild(document.createElement('div'))\n  }\n\n  // TODO: 1. 应该在什么时机进行更新呢？2. 如何精细化控制\n  confirmUpdate(rootEl: SVGForeignObjectElement) {\n    this.setHtml(rootEl)\n  }\n\n  /**\n   * @overridable 支持重写\n   * 和react的shouldComponentUpdate类似，都是为了避免出发不必要的render.\n   * 但是这里不一样的地方在于，setHtml方法，我们只在properties发生变化了后再触发。\n   * 而x,y等这些坐标相关的方法发生了变化，不会再重新触发setHtml.\n   */\n  shouldUpdate() {\n    if (this.preProperties && this.preProperties === this.currentProperties) {\n      return false\n    }\n    this.preProperties = this.currentProperties\n    return true\n  }\n\n  componentDidMount() {\n    console.log('HtmlNode --->>> componentDidMount - 初始化内容')\n    if (this.shouldUpdate() && this.rootEl) {\n      this.setHtml(this.rootEl)\n    }\n  }\n\n  componentDidUpdate() {\n    console.log('HtmlNode --->>> componentDidUpdate - 更新节点内容')\n    // DONE: 将 componentDidMount 和 componentDidUpdate 区分开，如果写在一次，渲染 React 组件会重复初始化，消耗过多资源\n    // 为了保证历史兼容性，先将默认 HTML 节点的 setHtml 和 confirmUpdate 保持一直，用户可通过自定义的方式重新定义\n    if (this.shouldUpdate() && this.rootEl) {\n      this.confirmUpdate(this.rootEl)\n    }\n  }\n\n  componentWillUnmount() {\n    this.rootEl.innerHTML = ''\n  }\n\n  getShape() {\n    const { model } = this.props\n    const { x, y, height, width } = model\n    const style = model.getNodeStyle()\n    this.currentProperties = JSON.stringify(model.properties)\n    return (\n      <foreignObject\n        {...style}\n        x={x - width / 2}\n        y={y - height / 2}\n        width={width}\n        height={height}\n        ref={this.ref}\n      />\n    )\n  }\n}\n\nexport default HtmlNode\n", "import { createElement as h, Component } from 'preact/compat'\nimport LogicFlow from '../../LogicFlow'\nimport { GraphModel, BaseNodeModel, BaseEdgeModel, Model } from '../../model'\nimport {\n  IDragParams,\n  StepDrag,\n  formatAnchorConnectValidateData,\n  targetNodeInfo,\n  NodeContaint,\n} from '../../util'\nimport { ElementState, EventType, ModelType } from '../../constant'\nimport Point = LogicFlow.Point\nimport NodeData = LogicFlow.NodeData\nimport AnchorConfig = Model.AnchorConfig\n\ninterface IProps {\n  x: number\n  y: number\n  type: AdjustType\n  id?: string\n  getAdjustPointShape: (\n    x: number,\n    y: number,\n    model: BaseEdgeModel,\n  ) => h.JSX.Element | null\n  graphModel: GraphModel\n  edgeModel: BaseEdgeModel\n}\n\ninterface IState {\n  dragging: boolean\n  endX: number\n  endY: number\n}\n\ninterface OldEdge {\n  startPoint: Point\n  endPoint: Point\n  pointsList: Point[]\n}\n\nexport enum AdjustType {\n  SOURCE = 'SOURCE',\n  TARGET = 'TARGET',\n}\n\nexport class AdjustPoint extends Component<IProps, IState> {\n  stepDragData: any\n  stepDrag: StepDrag\n  oldEdge?: OldEdge\n  preTargetNode: any\n  targetRuleResults: Map<any, any>\n  sourceRuleResults: Map<any, any>\n\n  constructor(props: IProps) {\n    super()\n    this.state = {\n      dragging: false,\n      endX: 0,\n      endY: 0,\n    }\n    this.targetRuleResults = new Map()\n    this.sourceRuleResults = new Map()\n    const { type, edgeModel, graphModel } = props\n    const { eventCenter } = graphModel\n    this.stepDragData = {\n      type,\n      edgeData: edgeModel.getData(),\n    }\n    this.stepDrag = new StepDrag({\n      onDragStart: this.onDragStart,\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n      eventType: 'ADJUST_POINT',\n      isStopPropagation: false,\n      eventCenter,\n      data: this.stepDragData,\n    })\n  }\n\n  handleMouseDown = (ev: MouseEvent) => {\n    if (this.stepDrag) {\n      this.stepDrag.handleMouseDown(ev)\n    }\n  }\n  onDragStart = () => {\n    const { x, y, edgeModel } = this.props\n    const { startPoint, endPoint, pointsList } = edgeModel\n    // 记录下原始路径信息，在调整中，如果放弃调整，进行路径还原\n    this.oldEdge = {\n      startPoint,\n      endPoint,\n      pointsList,\n    }\n    this.setState({\n      endX: x,\n      endY: y,\n      dragging: true,\n    })\n    // 拖拽AdjustPoint时不修改edgeModel.isHitable，避免偶尔会出现边不能点击问题(https://github.com/didi/LogicFlow/issues/974)\n    // edgeModel.isHitable = false;\n  }\n  onDragging = ({ deltaX, deltaY }: IDragParams) => {\n    const { endX, endY } = this.state\n    const { graphModel, type } = this.props\n    const { transformModel, editConfigModel } = graphModel\n    const [x, y] = transformModel.moveCanvasPointByHtml(\n      [endX, endY],\n      deltaX,\n      deltaY,\n    )\n    this.setState({\n      endX: x,\n      endY: y,\n      dragging: true,\n    })\n    // 调整过程中实时更新路径\n    const { edgeModel } = this.props\n    const info = targetNodeInfo(\n      {\n        x: endX,\n        y: endY,\n      },\n      graphModel,\n    )\n    // 如果一定的坐标能够找到目标节点，预结算当前节点与目标节点的路径进行展示\n    if (info && info.node && this.isAllowAdjust(info).pass) {\n      let params: {\n        startPoint: Point\n        endPoint: Point\n        sourceNode: BaseNodeModel\n        targetNode: BaseNodeModel\n      }\n      const { startPoint, endPoint, sourceNode, targetNode } = edgeModel\n      if (type === AdjustType.SOURCE) {\n        params = {\n          startPoint: {\n            x: info.anchor.x,\n            y: info.anchor.y,\n          },\n          endPoint: {\n            x: endPoint.x,\n            y: endPoint.y,\n          },\n          sourceNode: info.node,\n          targetNode,\n        }\n      } else if (type === AdjustType.TARGET) {\n        params = {\n          startPoint: {\n            x: startPoint.x,\n            y: startPoint.y,\n          },\n          endPoint: {\n            x: info.anchor.x,\n            y: info.anchor.y,\n          },\n          sourceNode,\n          targetNode: info.node,\n        }\n      }\n      edgeModel.updateAfterAdjustStartAndEnd(params!)\n    } else if (type === AdjustType.SOURCE) {\n      // 如果没有找到目标节点，更显起终点为当前坐标\n      edgeModel.updateStartPoint({\n        x,\n        y,\n      })\n    } else if (type === AdjustType.TARGET) {\n      edgeModel.updateEndPoint({\n        x,\n        y,\n      })\n    }\n\n    if (edgeModel.text.value && editConfigModel.adjustEdge) {\n      edgeModel.setText(\n        Object.assign({}, edgeModel.text, edgeModel.textPosition),\n      )\n    }\n  }\n  onDragEnd = ({ event }: Partial<IDragParams>) => {\n    try {\n      // 将状态置为非拖拽状态\n      this.setState({\n        dragging: false,\n      })\n      const { graphModel, edgeModel, type } = this.props\n      // 拖拽AdjustPoint时不修改edgeModel.isHitable，避免偶尔会出现边不能点击问题(https://github.com/didi/LogicFlow/issues/974)\n      // edgeModel.isHitable = true;\n      const { endX, endY, dragging } = this.state\n      const info = targetNodeInfo(\n        {\n          x: endX,\n          y: endY,\n        },\n        graphModel,\n      )\n      // 没有dragging就结束边\n      if (!dragging) return\n      // 如果找到目标节点，删除老边，创建新边\n      let needRecoveryEdge = false\n      let createEdgeInfo: LogicFlow.EdgeConfig\n      if (info && info.node) {\n        const { pass, msg, newTargetNode } = this.isAllowAdjust(info)\n        if (pass) {\n          const {\n            text,\n            sourceAnchorId = '',\n            targetAnchorId = '',\n            ...rest\n          } = edgeModel.getData()\n          createEdgeInfo = {\n            sourceAnchorId,\n            targetAnchorId,\n            ...rest,\n            text: text?.value || '',\n          }\n          // 根据调整点是边的起点或重点，计算创建边需要的参数\n          if (type === AdjustType.SOURCE) {\n            const sourceNode = graphModel.getNodeModelById(info.node.id)\n            const targetNode = graphModel.getNodeModelById(\n              edgeModel.targetNodeId,\n            )\n            const edgeInfo = graphModel.edgeGenerator?.(\n              sourceNode?.getData() as NodeData,\n              targetNode?.getData() as NodeData,\n              createEdgeInfo,\n            )\n            createEdgeInfo = {\n              ...edgeInfo,\n              sourceNodeId: info.node.id,\n              sourceAnchorId: info.anchor.id,\n              startPoint: {\n                x: info.anchor.x,\n                y: info.anchor.y,\n              },\n              targetNodeId: edgeModel.targetNodeId,\n              endPoint: { ...edgeModel.endPoint },\n            }\n            // 找到的是原有的源节点上的原锚点时，还原边\n            if (\n              edgeModel.sourceNodeId === info.node.id &&\n              edgeModel.sourceAnchorId === info.anchor.id\n            ) {\n              needRecoveryEdge = true\n            }\n          } else if (type === AdjustType.TARGET) {\n            const sourceNode = graphModel.getNodeModelById(\n              edgeModel.sourceNodeId,\n            )\n            const targetNode = graphModel.getNodeModelById(info.node.id)\n            const edgeInfo = graphModel.edgeGenerator?.(\n              sourceNode?.getData() as NodeData,\n              targetNode?.getData() as NodeData,\n              createEdgeInfo,\n            )\n            createEdgeInfo = {\n              ...edgeInfo,\n              sourceNodeId: edgeModel.sourceNodeId,\n              startPoint: { ...edgeModel.startPoint },\n              targetNodeId: info.node.id,\n              targetAnchorId: info.anchor.id,\n              endPoint: {\n                x: info.anchor.x,\n                y: info.anchor.y,\n              },\n            }\n            // 找到的是原有的目标节点上的原锚点时，还原边\n            if (\n              edgeModel.targetNodeId === info.node.id &&\n              edgeModel.targetAnchorId === info.anchor.id\n            ) {\n              needRecoveryEdge = true\n            }\n          }\n        } else {\n          // 如果没有通过校验，还原边并抛出CONNECTION_NOT_ALLOWED事件\n          needRecoveryEdge = true\n          const nodeData = newTargetNode.getData()\n          graphModel.eventCenter.emit(EventType.CONNECTION_NOT_ALLOWED, {\n            data: nodeData,\n            msg,\n          })\n        }\n      } else {\n        // 如果没有找到目标节点，还原边\n        needRecoveryEdge = true\n      }\n      if (!needRecoveryEdge) {\n        // 为了保证id不变必须要先删除老边，再创建新边，创建新边是会判断是否有重复的id\n        // 删除老边\n        const oldEdgeData = edgeModel.getData()\n        graphModel.deleteEdgeById(edgeModel.id)\n        // 创建新边\n        const edge = graphModel.addEdge({ ...createEdgeInfo! })\n        // 向外抛出事件\n        graphModel.eventCenter.emit(EventType.EDGE_EXCHANGE_NODE, {\n          data: {\n            newEdge: edge.getData(),\n            oldEdge: oldEdgeData,\n          },\n        })\n      } else {\n        // 如果没有找到目标节点或者没有通过校验，还原边\n        this.recoveryEdge()\n      }\n      this.preTargetNode?.setElementState(ElementState.DEFAULT)\n    } finally {\n      const { graphModel } = this.props\n      graphModel.eventCenter.emit(EventType.ADJUST_POINT_DRAGEND, {\n        e: event,\n        data: this.stepDragData,\n      })\n    }\n  }\n  // 还原边\n  recoveryEdge = () => {\n    const { edgeModel } = this.props\n    const { startPoint, endPoint, pointsList } = this.oldEdge!\n    edgeModel.updateStartPoint(startPoint)\n    edgeModel.updateEndPoint(endPoint)\n    // 折线和曲线还需要更新其pointsList\n    if (edgeModel.modelType !== ModelType.LINE_EDGE) {\n      edgeModel.pointsList = pointsList ?? []\n      edgeModel.initPoints()\n    }\n  }\n  // 调整点的样式默认从主题中读取， 可以复写此方法进行更加个性化的自定义\n  // 目前仅支持圆形图标进行标识，可以从圆形的r和颜色上进行调整\n  getAdjustPointStyle = () => {\n    const {\n      graphModel: { theme },\n    } = this.props\n    const { edgeAdjust } = theme\n\n    return edgeAdjust\n  }\n\n  isAllowAdjust(info: NodeContaint): {\n    pass: boolean\n    msg?: string\n    newTargetNode: BaseNodeModel\n  } {\n    const {\n      edgeModel: { id, sourceNode, targetNode, sourceAnchorId, targetAnchorId },\n      type,\n    } = this.props\n    // const newTargetNode = info.node;\n    let newSourceNode: BaseNodeModel\n    let newTargetNode: BaseNodeModel\n    let newSourceAnchor: AnchorConfig\n    let newTargetAnchor: AnchorConfig\n\n    // 如果调整的是连线起点\n    if (type === AdjustType.SOURCE) {\n      newSourceNode = info.node\n      newTargetNode = targetNode\n      newSourceAnchor = info.anchor\n      newTargetAnchor = targetNode.getAnchorInfo(targetAnchorId)!\n    } else {\n      newSourceNode = sourceNode\n      newTargetNode = info.node\n      newTargetAnchor = info.anchor\n      newSourceAnchor = sourceNode.getAnchorInfo(sourceAnchorId)!\n    }\n    // 如果前一个接触的节点和此时接触的节点不相等，则将前一个节点状态重新设置为默认状态。\n    if (this.preTargetNode && this.preTargetNode !== info.node) {\n      this.preTargetNode.setElementState(ElementState.DEFAULT)\n    }\n    this.preTargetNode = info.node\n    // #500 不允许锚点自己连自己, 在锚点一开始连接的时候, 不触发自己连接自己的校验。\n    if (newTargetAnchor.id === newSourceAnchor.id) {\n      return {\n        pass: false,\n        msg: '',\n        newTargetNode,\n      }\n    }\n    const targetInfoId = `${newSourceNode.id}_${newTargetNode.id}_${newSourceAnchor.id}_${newTargetAnchor.id}`\n    // 查看鼠标是否进入过target，若有检验结果，表示进入过, 就不重复计算了。\n    if (!this.targetRuleResults.has(targetInfoId)) {\n      const sourceRuleResult = newSourceNode.isAllowConnectedAsSource(\n        newTargetNode,\n        newSourceAnchor,\n        newTargetAnchor,\n        id,\n      )\n      const targetRuleResult = newTargetNode.isAllowConnectedAsTarget(\n        newSourceNode,\n        newSourceAnchor,\n        newTargetAnchor,\n        id,\n      )\n      this.sourceRuleResults.set(\n        targetInfoId,\n        formatAnchorConnectValidateData(sourceRuleResult),\n      )\n      this.targetRuleResults.set(\n        targetInfoId,\n        formatAnchorConnectValidateData(targetRuleResult),\n      )\n    }\n    const { isAllPass: isSourcePass, msg: sourceMsg } =\n      this.sourceRuleResults.get(targetInfoId)\n    const { isAllPass: isTargetPass, msg: targetMsg } =\n      this.targetRuleResults.get(targetInfoId)\n    // 实时提示出即将连接的节点是否允许连接\n    const state =\n      isSourcePass && isTargetPass\n        ? ElementState.ALLOW_CONNECT\n        : ElementState.NOT_ALLOW_CONNECT\n    if (type === AdjustType.SOURCE) {\n      newSourceNode.setElementState(state)\n    } else {\n      newTargetNode.setElementState(state)\n    }\n    return {\n      pass: isSourcePass && isTargetPass,\n      msg: targetMsg || sourceMsg,\n      newTargetNode,\n    }\n  }\n\n  render() {\n    const { x, y, getAdjustPointShape, edgeModel } = this.props\n    const { dragging } = this.state\n    return (\n      <g\n        pointerEvents={dragging ? 'none' : ''}\n        onMouseDown={this.handleMouseDown}\n      >\n        {!dragging ? getAdjustPointShape(x, y, edgeModel) : ''}\n      </g>\n    )\n  }\n}\n\nexport default AdjustPoint\n", "import { Component } from 'preact/compat'\nimport { Path } from '../shape'\nimport LogicFlow from '../../LogicFlow'\nimport { getVerticalPointOfLine } from '../../algorithm'\nimport ArrowInfo = LogicFlow.ArrowInfo\n\nexport type ArrowStyle = {\n  stroke?: string\n  fill?: string\n  strokeWidth?: number\n  offset: number\n  refX?: number\n  refY?: number\n  verticalLength: number\n}\n\ntype ArrowAttributesType = {\n  d: string\n} & ArrowStyle\n\ntype IProps = {\n  arrowInfo: ArrowInfo\n  style: ArrowStyle\n}\n\nexport class Arrow extends Component<IProps> {\n  getArrowAttributes(): ArrowAttributesType {\n    const { arrowInfo, style } = this.props\n    const { start, end } = arrowInfo\n    const config = {\n      start,\n      end,\n      offset: style.offset,\n      verticalLength: style.verticalLength,\n      type: 'end',\n    }\n    const { leftX, leftY, rightX, rightY } = getVerticalPointOfLine(config)\n    return {\n      d: `M${leftX} ${leftY} L${end.x} ${end.y} L${rightX} ${rightY} z`,\n      ...style,\n    }\n  }\n\n  getShape() {\n    const { d, strokeWidth, stroke, fill } = this.getArrowAttributes()\n    return <Path d={d} fill={fill} strokeWidth={strokeWidth} stroke={stroke} />\n  }\n\n  render() {\n    return <g className=\"lf-arrow\">{this.getShape()}</g>\n  }\n}\n\nexport default Arrow\n", "import { createElement as h, Component, createRef } from 'preact/compat'\nimport { Circle } from '../shape'\nimport { LineText } from '../text'\nimport LogicFlow from '../../LogicFlow'\nimport { GraphModel, BaseEdgeModel, PolylineEdgeModel } from '../../model'\nimport { ElementState, EventType, ModelType } from '../../constant'\nimport {\n  isMultipleSelect,\n  getClosestPointOfPolyline,\n  degrees,\n  getThetaOfVector,\n} from '../../util'\nimport AdjustPoint, { AdjustType } from './AdjustPoint'\n\nimport ArrowInfo = LogicFlow.ArrowInfo\nimport Point = LogicFlow.Point\n\ntype IProps = {\n  model: BaseEdgeModel\n  graphModel: GraphModel\n}\nexport type IEdgeState = {\n  hover: boolean\n}\n\nexport abstract class BaseEdge<P extends IProps> extends Component<\n  P,\n  IEdgeState\n> {\n  static isObserved: boolean = false\n  static extendsKey?: string\n\n  startTime?: number\n  contextMenuTime?: number\n  clickTimer?: number\n  textRef = createRef()\n\n  constructor() {\n    super()\n  }\n\n  /**\n   * 不支持重写，请使用getEdge\n   */\n  getShape() {\n    return <g>{this.getEdge()}</g>\n  }\n\n  /**\n   * @deprecated 请使用model.getTextStyle\n   */\n  getTextStyle() {}\n\n  /**\n   * @overridable 可重写，自定义边文本DOM\n   */\n  getText(): h.JSX.Element | null {\n    const { model, graphModel } = this.props\n    // 文本被编辑的时候，显示编辑框，不显示文本。\n    if (model.state === ElementState.TEXT_EDIT) {\n      return null\n    }\n    let draggable = false\n    const { editConfigModel } = graphModel\n    if (model.text.draggable || editConfigModel.edgeTextDraggable) {\n      draggable = true\n    }\n    return (\n      <LineText\n        ref={this.textRef}\n        editable={editConfigModel.edgeTextEdit && model.text.editable}\n        model={model}\n        graphModel={graphModel}\n        draggable={draggable}\n      />\n    )\n  }\n\n  /**\n   * @deprecated\n   */\n  getArrowInfo(): ArrowInfo {\n    const { model } = this.props\n    const { startPoint, endPoint, isSelected } = model\n    const { hover } = this.state as IEdgeState\n    return {\n      start: startPoint,\n      end: endPoint,\n      hover,\n      isSelected,\n    }\n  }\n\n  getLastTwoPoints(): [Point, Point] {\n    const { model } = this.props\n    const { startPoint, endPoint } = model\n    return [startPoint, endPoint]\n  }\n\n  /**\n   * @deprecated 请使用model.getArrowStyle\n   */\n  getArrowStyle() {\n    console.error(\n      'getArrowStyle is deprecated in 1.2.0, please use model.getArrowStyle',\n    )\n    return null\n  }\n\n  /**\n   * 定义边的箭头，不支持重写。请使用getStartArrow和getEndArrow\n   */\n  private getArrow(): h.JSX.Element | null {\n    const { model } = this.props\n    const { id } = model\n    const { refY = 0, refX = 2 } = model.getArrowStyle()\n    const [start, end] = this.getLastTwoPoints()\n    let theta: string | number = 'auto'\n    if (start !== null && end !== null) {\n      theta = degrees(\n        getThetaOfVector({\n          x: end.x - start.x,\n          y: end.y - start.y,\n          z: 0,\n        }),\n      )\n    }\n    return (\n      <g>\n        <defs>\n          <marker\n            id={`marker-start-${id}`}\n            refX={-refX}\n            refY={refY}\n            overflow=\"visible\"\n            orient=\"auto\"\n            markerUnits=\"userSpaceOnUse\"\n          >\n            {this.getStartArrow()}\n          </marker>\n          <marker\n            id={`marker-end-${id}`}\n            refX={refX}\n            refY={refY}\n            overflow=\"visible\"\n            orient={theta}\n            markerUnits=\"userSpaceOnUse\"\n            // transform={`rotate(${degrees(theta)})`}\n          >\n            {this.getEndArrow()}\n          </marker>\n        </defs>\n      </g>\n    )\n  }\n\n  /**\n   * @overridable 可重写，自定义边起点箭头形状。\n   * @example\n   * getStartArrow() {\n   *  const { model } = this.props;\n   *  const { stroke, strokeWidth, offset, verticalLength } = model.getArrowStyle();\n   *  return (\n   *    h('path', {\n   *      d: ''\n   *    })\n   *  )\n   * }\n   */\n  getStartArrow(): h.JSX.Element | null {\n    return <path />\n  }\n\n  /**\n   * @overridable 可重写，自定义边终点箭头形状。\n   * @example\n   * getEndArrow() {\n   *  const { model } = this.props;\n   *  const { stroke, strokeWidth, offset, verticalLength } = model.getArrowStyle();\n   *  return (\n   *    h('path', {\n   *      d: ''\n   *    })\n   *  )\n   * }\n   */\n  getEndArrow(): h.JSX.Element | null {\n    const { model } = this.props\n    const { stroke, strokeWidth, offset, verticalLength } =\n      model.getArrowStyle()\n    return (\n      <path\n        stroke={stroke}\n        fill={stroke}\n        strokeWidth={strokeWidth}\n        transform=\"rotate(180)\"\n        d={`M 0 0 L ${offset} -${verticalLength} L ${offset} ${verticalLength} Z`}\n      />\n    )\n  }\n\n  /**\n   * @overridable 可重写，自定义调整边连接节点形状。在开启了adjustEdgeStartAndEnd的时候，会显示调整点。\n   * @param x 调整点x坐标\n   * @param y 调整点y坐标\n   * @param model\n   * @example\n   * getAdjustPointShape(x, y) {\n   *  const { model } = this.props;\n   *  const style = model.getAdjustPointStyle();\n   *  return (\n   *    h('circle', {\n   *      ...style,\n   *     x,\n   *     y\n   *    })\n   *  )\n   * }\n   */\n  getAdjustPointShape(\n    x: number,\n    y: number,\n    model: BaseEdgeModel,\n  ): h.JSX.Element | null {\n    const style = model.getAdjustPointStyle()\n    return (\n      <Circle\n        className=\"lf-edge-adjust-point\"\n        {...style}\n        {...{\n          x,\n          y,\n        }}\n      />\n    )\n  }\n\n  /**\n   * 不支持重写。请使用getAdjustPointShape\n   */\n  private getAdjustPoints() {\n    const { model, graphModel } = this.props\n    const start = model.getAdjustStart()\n    const end = model.getAdjustEnd()\n    return (\n      <g>\n        <AdjustPoint\n          type={AdjustType.SOURCE}\n          {...start}\n          getAdjustPointShape={this.getAdjustPointShape}\n          edgeModel={model}\n          graphModel={graphModel}\n        />\n        <AdjustPoint\n          type={AdjustType.TARGET}\n          {...end}\n          getAdjustPointShape={this.getAdjustPointShape}\n          edgeModel={model}\n          graphModel={graphModel}\n        />\n      </g>\n    )\n  }\n\n  /**\n   * @deprecated\n   */\n  getAnimation() {\n    console.error(\n      'getAnimation is deprecated in 1.2.0, please use model.getEdgeAnimationStyle',\n    )\n  }\n\n  /**\n   * @overridable 可重写，在完全自定义边的时候，可以重写此方法，来自定义边的选区。\n   */\n  public getAppendWidth() {\n    return <g />\n  }\n\n  /**\n   * 不建议重写，此方法为扩大边选区，方便用户点击选中边。\n   * 如果需要自定义边选区，请使用getAppendWidth。\n   */\n  getAppend() {\n    return <g className=\"lf-edge-append\">{this.getAppendWidth()}</g>\n  }\n\n  /**\n   * 不支持重写，如果想要基于hover状态设置不同的样式，请在model中使用isHovered属性。\n   */\n  handleHover = (hovered: boolean, ev: MouseEvent) => {\n    const {\n      model,\n      graphModel: { eventCenter },\n    } = this.props\n    model.setHovered(hovered)\n    const eventName = hovered\n      ? EventType.EDGE_MOUSEENTER\n      : EventType.EDGE_MOUSELEAVE\n    const nodeData = model.getData()\n    eventCenter.emit(eventName, {\n      data: nodeData,\n      e: ev,\n    })\n  }\n  /**\n   * 不支持重写，如果想要基于hover状态设置不同的样式，请在model中使用isHovered属性。\n   */\n  setHoverOn = (ev: MouseEvent) => {\n    // ! hover多次触发, onMouseOver + onMouseEnter\n    const {\n      model: { isHovered },\n    } = this.props\n    if (isHovered) return\n    this.textRef && this.textRef.current && this.textRef.current.setHoverOn()\n    this.handleHover(true, ev)\n  }\n  /**\n   * 不支持重写，如果想要基于hover状态设置不同的样式，请在model中使用isHovered属性。\n   */\n  setHoverOff = (ev: MouseEvent) => {\n    const {\n      model: { isHovered },\n    } = this.props\n    if (!isHovered) return\n    this.textRef && this.textRef.current && this.textRef.current.setHoverOff()\n    this.handleHover(false, ev)\n  }\n  /**\n   * 不支持重写，如果想要基于contextmenu事件做处理，请监听edge:contextmenu事件。\n   */\n  handleContextMenu = (ev: MouseEvent) => {\n    ev.preventDefault()\n    // 节点右击也会触发时间，区分右击和点击(mouseup)\n    this.contextMenuTime = new Date().getTime()\n    if (this.clickTimer) {\n      clearTimeout(this.clickTimer)\n    }\n    const { model, graphModel } = this.props\n    const position = graphModel.getPointByClient({\n      x: ev.clientX,\n      y: ev.clientY,\n    })\n    graphModel.setElementStateById(\n      model.id,\n      ElementState.SHOW_MENU,\n      position.domOverlayPosition,\n    )\n    this.toFront()\n    if (!model.isSelected) {\n      graphModel.selectEdgeById(model.id)\n    }\n    // 边数据\n    const edgeData = model?.getData()\n    graphModel.eventCenter.emit(EventType.EDGE_CONTEXTMENU, {\n      data: edgeData,\n      e: ev,\n      position,\n    })\n  }\n  /**\n   * 不支持重写\n   */\n  handleMouseDown = (e: MouseEvent) => {\n    e.stopPropagation()\n    this.startTime = new Date().getTime()\n  }\n  /**\n   * 不支持重写\n   */\n  handleMouseUp = (e: MouseEvent) => {\n    if (!this.startTime) return\n    const time = new Date().getTime() - this.startTime\n    if (time > 200) return // 事件大于200ms，认为是拖拽。\n    const isRightClick = e.button === 2\n    if (isRightClick) return\n    // 这里 IE 11不能正确显示\n    const isDoubleClick = e.detail === 2\n    const { model, graphModel } = this.props\n    const edgeData = model?.getData()\n    const position = graphModel.getPointByClient({\n      x: e.clientX,\n      y: e.clientY,\n    })\n    if (isDoubleClick) {\n      const { editConfigModel, textEditElement } = graphModel\n      // 当前边正在编辑，需要先重置状态才能变更文本框位置\n      if (textEditElement && textEditElement.id === model.id) {\n        graphModel.setElementStateById(model.id, ElementState.DEFAULT)\n      }\n      // 边文案可编辑状态，才可以进行文案编辑\n      if (editConfigModel.edgeTextEdit && model.text.editable) {\n        graphModel.setElementStateById(model.id, ElementState.TEXT_EDIT)\n      }\n      if (model.modelType === ModelType.POLYLINE_EDGE) {\n        const polylineEdgeModel = model as PolylineEdgeModel\n        const {\n          canvasOverlayPosition: { x, y },\n        } = graphModel.getPointByClient({\n          x: e.x,\n          y: e.y,\n        })\n        const crossPoint = getClosestPointOfPolyline(\n          {\n            x,\n            y,\n          },\n          polylineEdgeModel.points,\n        )\n        polylineEdgeModel.dbClickPosition = crossPoint\n      }\n      graphModel.eventCenter.emit(EventType.EDGE_DBCLICK, {\n        data: edgeData,\n        e,\n        position,\n      })\n    } else {\n      // 单击\n      // 边右击也会触发mouseup事件，判断是否有右击，如果有右击则取消点击事件触发\n      // 边数据\n      graphModel.eventCenter.emit(EventType.ELEMENT_CLICK, {\n        data: edgeData,\n        e,\n        position,\n      })\n      graphModel.eventCenter.emit(EventType.EDGE_CLICK, {\n        data: edgeData,\n        e,\n        position,\n      })\n    }\n    const { editConfigModel } = graphModel\n    graphModel.selectEdgeById(model.id, isMultipleSelect(e, editConfigModel))\n    this.toFront()\n  }\n\n  /**\n   * @overridable 支持重写, 此方法为获取边的形状，如果需要自定义边的形状，请重写此方法。\n   * @example https://docs.logic-flow.cn/docs/#/zh/guide/basic/edge?id=%e5%9f%ba%e4%ba%8e-react-%e7%bb%84%e4%bb%b6%e8%87%aa%e5%ae%9a%e4%b9%89%e8%be%b9\n   */\n  getEdge(): h.JSX.Element | null {\n    return null\n  }\n\n  /**\n   * @overridable 支持重写, 此方法为边在被选中时将其置顶，如果不需要此功能，可以重写此方法。\n   */\n  toFront() {\n    const { graphModel, model } = this.props\n    graphModel.toFront(model.id)\n  }\n\n  /**\n   * 不建议重写，如果要自定义边的形状，请重写getEdge方法。\n   */\n  render() {\n    const {\n      model: { isSelected, isHitable, isShowAdjustPoint },\n    } = this.props\n    return (\n      <g>\n        <g\n          className={[\n            'lf-edge',\n            !isHitable && 'pointer-none',\n            isSelected && 'lf-edge-selected',\n          ]\n            .filter(Boolean)\n            .join(' ')}\n          onMouseDown={this.handleMouseDown}\n          onMouseUp={this.handleMouseUp}\n          onContextMenu={this.handleContextMenu}\n          onMouseOver={this.setHoverOn}\n          onMouseEnter={this.setHoverOn}\n          onMouseLeave={this.setHoverOff}\n        >\n          {this.getShape()}\n          {this.getAppend()}\n          {this.getText()}\n          {this.getArrow()}\n        </g>\n        {isShowAdjustPoint && isSelected ? this.getAdjustPoints() : ''}\n      </g>\n    )\n  }\n}\n\nexport default BaseEdge\n", "import BaseEdge, { IEdgeState } from './BaseEdge'\nimport { Path } from '../shape'\nimport LogicFlow from '../../LogicFlow'\nimport { getEndTangent } from '../../util'\nimport { BezierEdgeModel, GraphModel } from '../../model'\n\nimport Point = LogicFlow.Point\n\nimport ArrowInfo = LogicFlow.ArrowInfo\n\nexport type IBezierEdgeProps = {\n  model: BezierEdgeModel\n  graphModel: GraphModel\n}\n\nexport class BezierEdge extends BaseEdge<IBezierEdgeProps> {\n  /**\n   * @overridable 支持重写, 此方法为获取边的形状，如果需要自定义边的形状，请重写此方法。\n   * @example https://docs.logic-flow.cn/docs/#/zh/guide/basic/edge?id=%e5%9f%ba%e4%ba%8e-react-%e7%bb%84%e4%bb%b6%e8%87%aa%e5%ae%9a%e4%b9%89%e8%be%b9\n   */\n  getEdge() {\n    const { model } = this.props\n    const style = model.getEdgeStyle()\n    const { path, isAnimation, arrowConfig } = model as BezierEdgeModel\n    const animationStyle = model.getEdgeAnimationStyle()\n    const {\n      strokeDasharray,\n      stroke,\n      strokeDashoffset,\n      animationName,\n      animationDuration,\n      animationIterationCount,\n      animationTimingFunction,\n      animationDirection,\n    } = animationStyle\n\n    return (\n      <Path\n        d={path}\n        {...style}\n        {...arrowConfig}\n        {...(isAnimation\n          ? {\n              strokeDasharray,\n              stroke,\n              style: {\n                strokeDashoffset,\n                animationName,\n                animationDuration,\n                animationIterationCount,\n                animationTimingFunction,\n                animationDirection,\n              },\n            }\n          : {})}\n      />\n    )\n  }\n\n  /**\n   * @overridable 可重写，在完全自定义边的时候，可以重写此方法，来自定义边的选区。\n   */\n  getAppendWidth() {\n    const { path } = this.props.model as BezierEdgeModel\n    return <Path d={path} strokeWidth={10} stroke=\"transparent\" fill=\"none\" />\n  }\n\n  /**\n   * @deprecated\n   */\n  getArrowInfo(): ArrowInfo {\n    const { model } = this.props\n    const { hover } = this.state as IEdgeState\n    const { isSelected } = model as BezierEdgeModel\n    const { offset } = model.getArrowStyle()\n    const points = model.pointsList.map((point) => ({\n      x: point.x,\n      y: point.y,\n    }))\n    const [ePre, end] = getEndTangent(points, offset)\n    const arrowInfo = {\n      start: ePre,\n      end,\n      hover,\n      isSelected,\n    }\n    return arrowInfo\n  }\n\n  getLastTwoPoints(): [Point, Point] {\n    const { model } = this.props\n    const { offset } = model.getArrowStyle()\n    const points = model.pointsList.map((point) => ({\n      x: point.x,\n      y: point.y,\n    }))\n    return getEndTangent(points, offset)\n  }\n}\n\nexport default BezierEdge\n", "import BaseEdge from './BaseEdge'\nimport { Line, Path } from '../shape'\nimport { getAppendAttributes } from '../../util'\nimport { GraphModel, LineEdgeModel } from '../../model'\n\nexport type ILineEdgeProps = {\n  model: LineEdgeModel\n  graphModel: GraphModel\n}\n\nexport class LineEdge extends BaseEdge<ILineEdgeProps> {\n  /**\n   * @overridable 支持重写, 此方法为获取边的形状，如果需要自定义边的形状，请重写此方法。\n   * @example https://docs.logic-flow.cn/docs/#/zh/guide/basic/edge?id=%e5%9f%ba%e4%ba%8e-react-%e7%bb%84%e4%bb%b6%e8%87%aa%e5%ae%9a%e4%b9%89%e8%be%b9\n   */\n  getEdge() {\n    const { model } = this.props\n    const { startPoint, endPoint, isAnimation, arrowConfig } = model\n    const style = model.getEdgeStyle()\n    const animationStyle = model.getEdgeAnimationStyle()\n    const {\n      strokeDasharray,\n      stroke,\n      strokeDashoffset,\n      animationName,\n      animationDuration,\n      animationIterationCount,\n      animationTimingFunction,\n      animationDirection,\n    } = animationStyle\n    return (\n      <Line\n        {...style}\n        x1={startPoint.x}\n        y1={startPoint.y}\n        x2={endPoint.x}\n        y2={endPoint.y}\n        {...arrowConfig}\n        {...(isAnimation\n          ? {\n              strokeDasharray,\n              stroke,\n              style: {\n                strokeDashoffset,\n                animationName,\n                animationDuration,\n                animationIterationCount,\n                animationTimingFunction,\n                animationDirection,\n              },\n            }\n          : {})}\n      />\n    )\n  }\n\n  /**\n   * @overridable 可重写，在完全自定义边的时候，可以重写此方法，来自定义边的选区。\n   */\n  getAppendWidth() {\n    const { model } = this.props\n    const { startPoint, endPoint } = model\n    const appendInfo = {\n      start: startPoint,\n      end: endPoint,\n    }\n    const { d, strokeWidth, fill, strokeDasharray, stroke } =\n      getAppendAttributes(appendInfo)\n    return (\n      <Path\n        d={d}\n        fill={fill}\n        strokeWidth={strokeWidth}\n        stroke={stroke}\n        strokeDasharray={strokeDasharray}\n      />\n    )\n  }\n}\n\nexport default LineEdge\n", "import { createElement as h } from 'preact/compat'\nimport BaseEdge, { IEdgeState } from './BaseEdge'\nimport { Polyline, Path } from '../shape'\nimport LogicFlow from '../../LogicFlow'\nimport { GraphModel, PolylineEdgeModel } from '../../model'\nimport { EventType, SegmentDirection } from '../../constant'\nimport { StepDrag, points2PointsList } from '../../util'\nimport { getVerticalPointOfLine } from '../../algorithm'\n\nimport ArrowInfo = LogicFlow.ArrowInfo\nimport AppendConfig = LogicFlow.AppendConfig\nimport Point = LogicFlow.Point\n\ntype AppendAttributesType = {\n  d: string\n  fill: string\n  stroke: string\n  strokeWidth: number\n  strokeDasharray: string\n}\n\nexport type IPolylineEdgeProps = {\n  model: PolylineEdgeModel\n  graphModel: GraphModel\n}\n\nexport class PolylineEdge extends BaseEdge<IPolylineEdgeProps> {\n  drag: StepDrag\n  isDragging?: boolean\n  isShowAdjustPointTemp?: boolean\n  appendInfo?: AppendConfig\n\n  constructor() {\n    super()\n    this.drag = new StepDrag({\n      onDragStart: this.onDragStart,\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n      isStopPropagation: false,\n    })\n  }\n\n  /**\n   * 不支持重写\n   */\n  onDragStart = () => {\n    const polylineModel = this.props.model as PolylineEdgeModel\n    polylineModel.dragAppendStart()\n    this.isShowAdjustPointTemp = polylineModel.isShowAdjustPoint\n    polylineModel.isShowAdjustPoint = false\n  }\n  /**\n   * 不支持重写\n   */\n  onDragging = ({ deltaX, deltaY }) => {\n    const { model, graphModel } = this.props\n    this.isDragging = true\n    const { transformModel, editConfigModel } = graphModel\n    const [curDeltaX, curDeltaY] = transformModel.fixDeltaXY(deltaX, deltaY)\n    const polylineModel = model as PolylineEdgeModel\n    // 更新当前拖拽的线段信息\n    // 1、如果只允许调整中间线段调用dragAppendSimple\n    // 2、如果允许调整所有线段调用dragAppend\n    const { adjustEdgeMiddle } = editConfigModel\n    if (adjustEdgeMiddle) {\n      this.appendInfo = polylineModel.dragAppendSimple(this.appendInfo!, {\n        x: curDeltaX,\n        y: curDeltaY,\n      })\n    } else {\n      this.appendInfo = polylineModel.dragAppend(this.appendInfo!, {\n        x: curDeltaX,\n        y: curDeltaY,\n      })\n    }\n  }\n  /**\n   * 不支持重写\n   */\n  onDragEnd = () => {\n    const {\n      model,\n      graphModel: { eventCenter },\n    } = this.props\n    const polylineModel = model as PolylineEdgeModel\n    polylineModel.dragAppendEnd()\n    this.isDragging = false\n\n    polylineModel.isShowAdjustPoint = this.isShowAdjustPointTemp ?? false\n    // 情况当前拖拽的线段信息\n    this.appendInfo = undefined\n    // 向外抛出事件\n    eventCenter.emit(EventType.EDGE_ADJUST, { data: polylineModel.getData() })\n  }\n  /**\n   * 不支持重写\n   */\n  beforeDragStart = (e, appendInfo) => {\n    // 如果允许拖拽调整触发事件处理\n    if (appendInfo.draggable) {\n      this.drag.handleMouseDown(e)\n    }\n    // 记录当前拖拽的线段信息\n    this.appendInfo = appendInfo\n  }\n\n  /**\n   * @overridable 支持重写, 此方法为获取边的形状，如果需要自定义边的形状，请重写此方法。\n   * @example https://docs.logic-flow.cn/docs/#/zh/guide/basic/edge?id=%e5%9f%ba%e4%ba%8e-react-%e7%bb%84%e4%bb%b6%e8%87%aa%e5%ae%9a%e4%b9%89%e8%be%b9\n   */\n  getEdge() {\n    const { model } = this.props\n    const { points, isAnimation, arrowConfig } = model\n    const style = model.getEdgeStyle()\n    const animationStyle = model.getEdgeAnimationStyle()\n    const {\n      strokeDasharray,\n      stroke,\n      strokeDashoffset,\n      animationName,\n      animationDuration,\n      animationIterationCount,\n      animationTimingFunction,\n      animationDirection,\n    } = animationStyle\n    return (\n      <Polyline\n        points={points}\n        {...style}\n        {...arrowConfig}\n        {...(isAnimation\n          ? {\n              strokeDasharray,\n              stroke,\n              style: {\n                strokeDashoffset,\n                animationName,\n                animationDuration,\n                animationIterationCount,\n                animationTimingFunction,\n                animationDirection,\n              },\n            }\n          : {})}\n      />\n    )\n  }\n\n  /**\n   * @deprecated\n   */\n  getArrowInfo(): ArrowInfo {\n    const { model } = this.props\n    const { points, isSelected } = model\n    const { hover } = this.state as IEdgeState\n    const currentPositionList = points2PointsList(points)\n    let startPoint: LogicFlow.Point = currentPositionList[0]\n    let endPoint: LogicFlow.Point = currentPositionList[0]\n\n    // 两点重合时不计算起终点\n    if (currentPositionList.length >= 2) {\n      startPoint = currentPositionList[currentPositionList.length - 2]\n      endPoint = currentPositionList[currentPositionList.length - 1]\n    }\n    return {\n      start: startPoint,\n      end: endPoint,\n      hover,\n      isSelected,\n    }\n  }\n\n  getLastTwoPoints(): [Point, Point] {\n    const { model } = this.props\n    const { points } = model\n    const currentPositionList = points2PointsList(points)\n    let startPoint: LogicFlow.Point = currentPositionList[0]\n    let endPoint: LogicFlow.Point = currentPositionList[0]\n    // 两点重合时不计算起终点\n    if (currentPositionList.length >= 2) {\n      startPoint = currentPositionList[currentPositionList.length - 2]\n      endPoint = currentPositionList[currentPositionList.length - 1]\n    }\n    return [startPoint, endPoint]\n  }\n\n  private getAppendAttributes(appendInfo: AppendConfig): AppendAttributesType {\n    const { start, end } = appendInfo\n    let d\n    if (start.x === end.x && start.y === end.y) {\n      // 拖拽过程中会出现起终点重合的情况，这时候append无法计算\n      d = ''\n    } else {\n      const config = {\n        start,\n        end,\n        offset: 10,\n        verticalLength: 5,\n      }\n      const startPosition = getVerticalPointOfLine({\n        ...config,\n        type: 'start',\n      })\n      const endPosition = getVerticalPointOfLine({\n        ...config,\n        type: 'end',\n      })\n      d = `M${startPosition.leftX} ${startPosition.leftY}\n      L${startPosition.rightX} ${startPosition.rightY}\n      L${endPosition.rightX} ${endPosition.rightY}\n      L${endPosition.leftX} ${endPosition.leftY} z`\n    }\n    return {\n      d,\n      fill: 'transparent',\n      stroke: 'transparent',\n      strokeWidth: 1,\n      strokeDasharray: '4, 4',\n    }\n  }\n\n  private getAppendShape(appendInfo: AppendConfig) {\n    const { d, strokeWidth, fill, strokeDasharray, stroke } =\n      this.getAppendAttributes(appendInfo)\n    return (\n      <Path\n        d={d}\n        fill={fill}\n        strokeWidth={strokeWidth}\n        stroke={stroke}\n        strokeDasharray={strokeDasharray}\n      />\n    )\n  }\n\n  /**\n   * @overridable 可重写，在完全自定义边的时候，可以重写此方法，来自定义边的选区。\n   */\n  getAppendWidth() {\n    const { model, graphModel } = this.props\n    const { pointsList, draggable } = model\n    const LineAppendList: h.JSX.Element[] = []\n    const pointsLen = pointsList.length\n    for (let i = 0; i < pointsLen - 1; i++) {\n      let className = 'lf-polyline-append'\n      const appendInfo: AppendConfig = {\n        start: {\n          x: pointsList[i].x,\n          y: pointsList[i].y,\n        },\n        end: {\n          x: pointsList[i + 1].x,\n          y: pointsList[i + 1].y,\n        },\n        startIndex: i,\n        endIndex: i + 1,\n        direction: SegmentDirection.HORIZONTAL,\n        draggable: true,\n      }\n      let append: h.JSX.Element = (\n        <g className={className}>{this.getAppendShape(appendInfo)}</g>\n      )\n      const { editConfigModel } = graphModel\n      const { adjustEdge, adjustEdgeMiddle } = editConfigModel\n      if (adjustEdge && draggable) {\n        const { startIndex, endIndex } = appendInfo\n        // 如果不允许调整起点和终点相连的线段，设置该线段appendInfo的dragAble为false\n        const dragDisable =\n          adjustEdgeMiddle && (startIndex === 0 || endIndex === pointsLen - 1)\n        appendInfo.draggable = !dragDisable\n        if (appendInfo.start.x === appendInfo.end.x) {\n          // 水平\n          if (appendInfo.draggable) {\n            className += '-ew-resize'\n          }\n          appendInfo.direction = SegmentDirection.VERTICAL\n        } else if (appendInfo.start.y === appendInfo.end.y) {\n          // 垂直\n          if (appendInfo.draggable) {\n            className += '-ns-resize'\n          }\n          appendInfo.direction = SegmentDirection.HORIZONTAL\n        }\n        append = (\n          <g\n            className={this.isDragging ? 'lf-dragging' : 'lf-drag-able'}\n            onMouseDown={(e) => this.beforeDragStart(e, appendInfo)}\n          >\n            <g className={className}>{this.getAppendShape(appendInfo)}</g>\n          </g>\n        )\n      }\n      LineAppendList.push(append)\n    }\n    return <g>{LineAppendList}</g>\n  }\n}\n\nexport default PolylineEdge\n", "import { get } from 'lodash-es'\nimport LogicFlow from '../../LogicFlow'\nimport { BaseNodeModel } from '../../model'\nimport { snapToGrid } from '../../util'\nimport { EventType } from '../../constant'\n\nimport Position = LogicFlow.Position\nimport OnDragNodeConfig = LogicFlow.OnDragNodeConfig\n\nexport class Dnd {\n  nodeConfig: OnDragNodeConfig | null = null\n  lf: LogicFlow\n  fakeNode: BaseNodeModel | null = null\n\n  constructor(params: { lf: LogicFlow }) {\n    const { lf } = params\n    this.lf = lf\n  }\n\n  clientToLocalPoint({ x, y }: Position): Position {\n    const gridSize = get(this.lf.options, ['grid', 'size'])\n    // 处理 container 的 offset 等\n    const position = this.lf.graphModel.getPointByClient({\n      x,\n      y,\n    })\n    // 处理缩放和偏移\n    const { x: x1, y: y1 } = position.canvasOverlayPosition\n    // x, y 对齐到网格的 size\n    return {\n      x: snapToGrid(x1, gridSize),\n      y: snapToGrid(y1, gridSize),\n    }\n  }\n\n  startDrag(nodeConfig: OnDragNodeConfig) {\n    const { editConfigModel } = this.lf.graphModel\n    if (!editConfigModel?.isSilentMode) {\n      this.nodeConfig = nodeConfig\n      window.document.addEventListener('mouseup', this.stopDrag)\n    }\n  }\n\n  stopDrag = () => {\n    this.nodeConfig = null\n    window.document.removeEventListener('mouseup', this.stopDrag)\n  }\n  dragEnter = (e: MouseEvent) => {\n    if (!this.nodeConfig || this.fakeNode) return\n    this.fakeNode = this.lf.createFakeNode({\n      ...this.nodeConfig,\n      ...this.clientToLocalPoint({\n        x: e.clientX,\n        y: e.clientY,\n      }),\n    })\n  }\n  onDragOver = (e: MouseEvent) => {\n    e.preventDefault()\n    if (this.fakeNode) {\n      const { x, y } = this.clientToLocalPoint({\n        x: e.clientX,\n        y: e.clientY,\n      })\n      this.fakeNode.moveTo(x, y)\n      const nodeData = this.fakeNode.getData()\n      this.lf.setNodeSnapLine(nodeData)\n      this.lf.graphModel.eventCenter.emit(EventType.NODE_DND_DRAG, {\n        data: nodeData,\n      })\n    }\n    return false\n  }\n  onDragLeave = () => {\n    if (this.fakeNode) {\n      this.lf.removeNodeSnapLine()\n      this.lf.graphModel.removeFakeNode()\n      this.fakeNode = null\n    }\n  }\n  onDrop = (e: MouseEvent) => {\n    if (!this.lf.graphModel || !e || !this.nodeConfig) {\n      return\n    }\n    this.lf.addNode(\n      {\n        ...this.nodeConfig,\n        ...this.clientToLocalPoint({\n          x: e.clientX,\n          y: e.clientY,\n        }),\n      },\n      EventType.NODE_DND_ADD,\n      e,\n    )\n    e.preventDefault()\n    e.stopPropagation()\n    this.nodeConfig = null\n    this.lf.removeNodeSnapLine()\n    this.lf.graphModel.removeFakeNode()\n    this.fakeNode = null\n  }\n\n  eventMap() {\n    return {\n      onMouseEnter: this.dragEnter,\n      onMouseOver: this.dragEnter, // IE11\n      onMouseMove: this.onDragOver,\n      onMouseLeave: this.onDragLeave,\n      // onMouseOut: this.onDragLeave, // IE11\n      onMouseUp: this.onDrop,\n    }\n  }\n}\n\nexport default Dnd\n", "import { createRef, Component } from 'preact'\nimport { ElementState, observer } from '..'\nimport { ElementType, EventType, ModelType } from '../constant'\nimport { IToolProps } from './tool'\n\ntype IState = {\n  style: {\n    left: number\n    top: number\n  }\n}\n\n@observer\nexport class TextEditTool extends Component<IToolProps, IState> {\n  static toolName = 'textEdit'\n  ref = createRef()\n  __prevText = {\n    type: '',\n    text: '',\n    id: '',\n  }\n\n  constructor(props: IToolProps) {\n    super(props)\n    this.state = {\n      style: {\n        left: 0,\n        top: 0,\n      },\n    }\n  }\n\n  static getDerivedStateFromProps(props: IToolProps): IState | null {\n    const { textEditElement, graphModel } = props\n    const { transformModel, theme } = graphModel\n    const { inputText } = theme\n\n    let autoStyle\n    if (textEditElement) {\n      // 由于边上的文本是依据显示的时候动态计算出来的\n      // 所以不能在边创建的时候就初始化文本位置。\n      // 而是在边上新建文本的时候创建。\n      if (!textEditElement.text?.value) {\n        if (textEditElement.BaseType === ElementType.EDGE) {\n          // textEditElement = textEditElement as BaseEdgeModel\n          const textConfig = textEditElement.text\n          const { x, y } = textEditElement.textPosition\n          textConfig.x = x\n          textConfig.y = y\n          textEditElement.setText(textConfig)\n        }\n      }\n      // 自动换行节点边通用样式\n      const commonAutoStyle = {\n        resize: 'auto',\n        whiteSpace: 'normal',\n        wordBreak: 'break-all',\n      }\n      if (textEditElement.BaseType === ElementType.EDGE) {\n        // 如果边文案自动换行, 设置编辑框宽度\n        const {\n          edgeText: { overflowMode, lineHeight, wrapPadding, textWidth },\n        } = theme\n        if (textWidth && overflowMode === 'autoWrap') {\n          autoStyle = {\n            ...commonAutoStyle,\n            width: textWidth,\n            minWidth: textWidth,\n            lineHeight,\n            padding: wrapPadding,\n          }\n        }\n      } else if (textEditElement.BaseType === ElementType.NODE) {\n        // 如果节点文案自动换行, 设置编辑框宽度\n        const {\n          nodeText: { overflowMode, lineHeight, wrapPadding, textWidth },\n        } = theme\n        const { width, modelType, textWidth: nodeTextWidth } = textEditElement\n\n        const finalTextWidth = nodeTextWidth || textWidth || width\n        // 文本节点没有默认宽高，只有在设置了textWidth之后才能进行自动换行\n        if (\n          (modelType !== ModelType.TEXT_NODE && overflowMode === 'autoWrap') ||\n          (modelType === ModelType.TEXT_NODE && textWidth)\n        ) {\n          autoStyle = {\n            ...commonAutoStyle,\n            width: finalTextWidth,\n            minWidth: finalTextWidth,\n            lineHeight,\n            padding: wrapPadding,\n          }\n        }\n      }\n\n      const { x, y } = textEditElement.text\n      const [left, top] = transformModel.CanvasPointToHtmlPoint([x, y])\n      return {\n        style: {\n          left,\n          top,\n          ...autoStyle,\n          ...inputText,\n        },\n      }\n    }\n\n    return null\n  }\n\n  componentDidUpdate() {\n    const { graphModel } = this.props\n    if (this.ref.current) {\n      this.ref.current.focus()\n      this.placeCaretAtEnd(this.ref.current)\n    }\n    if (this.__prevText.id !== '') {\n      const { text, id } = this.__prevText\n      graphModel.updateText(id, text)\n      graphModel.eventCenter.emit(EventType.TEXT_UPDATE, {\n        data: { ...this.__prevText },\n      })\n      this.__prevText.id = ''\n      this.__prevText.text = ''\n      this.__prevText.type = ''\n    }\n  }\n\n  keyupHandler = (ev: KeyboardEvent) => {\n    const {\n      graphModel: { textEditElement },\n    } = this.props\n    // 按下alt+enter表示输入完成\n    if (ev.key === 'Enter' && ev.altKey) {\n      textEditElement?.setElementState(ElementState.DEFAULT)\n    }\n  }\n  inputHandler = (ev: any) => {\n    const { innerText: value } = ev.target as HTMLElement\n    const {\n      graphModel: { textEditElement },\n    } = this.props\n    if (textEditElement) {\n      this.__prevText = {\n        type: textEditElement.type,\n        text: value.replace(/(\\r\\n)+$|(\\n)+$/, ''), // fix #488: 文本后面的换行符不保留\n        id: textEditElement.id,\n      }\n    }\n  }\n  // fix: #587 #760\n  keydownHandler = (ev: any) => {\n    ev.stopPropagation()\n  }\n\n  placeCaretAtEnd(el: any) {\n    if (\n      window.getSelection !== undefined &&\n      document.createRange !== undefined\n    ) {\n      const range = document.createRange()\n      range.selectNodeContents(el)\n      range.collapse(false)\n      const sel = window.getSelection()\n      sel?.removeAllRanges()\n      sel?.addRange(range)\n    }\n  }\n\n  render() {\n    const {\n      graphModel: { textEditElement },\n    } = this.props\n    const { style } = this.state\n    return textEditElement ? (\n      <div\n        contentEditable\n        className=\"lf-text-input\"\n        style={style}\n        ref={this.ref}\n        key={textEditElement.id}\n        onKeyUp={this.keyupHandler}\n        onKeyDown={this.keydownHandler}\n        onKeyPress={this.keydownHandler}\n        onInput={this.inputHandler}\n      >\n        {textEditElement.text?.value}\n      </div>\n    ) : null\n  }\n}\n\nexport default TextEditTool\n", "import { ModelType } from '../constant'\nimport {\n  Model,\n  PolylineEdgeModel,\n  BezierEdgeModel,\n  BaseNodeModel,\n  BaseEdgeModel,\n  LineEdgeModel,\n} from '../model'\nimport { points2PointsList, getBBoxOfPoints, getBezierPoints } from '../util'\n\nimport OutlineInfo = Model.OutlineInfo\n\n// 获取节点的out\nexport const getNodeOutline = (node: BaseNodeModel): OutlineInfo => {\n  const { x, y, width, height } = node\n  return {\n    x: x - width / 2,\n    y: y - height / 2,\n    x1: x + width / 2,\n    y1: y + height / 2,\n  }\n}\n\nexport const getLineOutline = (edge: LineEdgeModel): OutlineInfo => {\n  const { startPoint, endPoint } = edge\n  const x = (startPoint.x + endPoint.x) / 2\n  const y = (startPoint.y + endPoint.y) / 2\n  const width = Math.abs(startPoint.x - endPoint.x) + 10\n  const height = Math.abs(startPoint.y - endPoint.y) + 10\n  return {\n    x: x - width / 2,\n    y: y - height / 2,\n    x1: x + width / 2,\n    y1: y + height / 2,\n  }\n}\n\nexport const getPolylineOutline = (edge: PolylineEdgeModel): OutlineInfo => {\n  const { points } = edge\n  const pointsList = points2PointsList(points)\n  const bbox = getBBoxOfPoints(pointsList, 8)\n  const { x, y, width, height } = bbox\n  return {\n    x: x - width / 2,\n    y: y - height / 2,\n    x1: x + width / 2,\n    y1: y + height / 2,\n  }\n}\n\nexport const getBezierOutline = (edge: BezierEdgeModel): OutlineInfo => {\n  const { path } = edge\n  const pointsList = getBezierPoints(path)\n  const bbox = getBBoxOfPoints(pointsList, 8)\n  const { x, y, width, height } = bbox\n  return {\n    x: x - width / 2,\n    y: y - height / 2,\n    x1: x + width / 2,\n    y1: y + height / 2,\n  }\n}\n\nexport const getEdgeOutline = (\n  edge: BaseEdgeModel,\n): OutlineInfo | undefined => {\n  if (edge.modelType === ModelType.LINE_EDGE) {\n    return getLineOutline(edge)\n  }\n  if (edge.modelType === ModelType.POLYLINE_EDGE) {\n    return getPolylineOutline(edge as PolylineEdgeModel)\n  }\n  if (edge.modelType === ModelType.BEZIER_EDGE) {\n    return getBezierOutline(edge as BezierEdgeModel)\n  }\n}\n", "import { Component } from 'preact/compat'\nimport { Model, observer } from '..'\nimport LogicFlow from '../LogicFlow'\nimport { StepDrag, IDragParams } from '../util'\nimport { ElementType, EventType } from '../constant'\nimport { getNodeOutline, getEdgeOutline } from '../algorithm/outline'\nimport { IToolProps } from './tool'\n\nimport GraphData = LogicFlow.GraphData\n\n@observer\nexport default class MultipleSelect extends Component<IToolProps> {\n  static toolName = 'multipleSelect'\n  stepDrag: StepDrag\n\n  constructor(props: IToolProps) {\n    super(props)\n    const {\n      graphModel: { gridSize, eventCenter },\n    } = props\n    this.stepDrag = new StepDrag({\n      onDragging: this.onDragging,\n      step: gridSize,\n      eventType: 'SELECTION',\n      eventCenter,\n    })\n  }\n\n  handleMouseDown = (ev: MouseEvent) => {\n    this.stepDrag.handleMouseDown(ev)\n  }\n  // 使多选区域的滚轮事件可以触发画布的滚轮事件\n  handleWheelEvent = (ev: WheelEvent) => {\n    ev.preventDefault()\n    const { deltaX, deltaY, clientX, clientY, ctrlKey } = ev\n    const newEvent = new WheelEvent('wheel', {\n      deltaX,\n      deltaY,\n      clientX,\n      clientY,\n      ctrlKey,\n    })\n    this.props.logicFlow.container\n      ?.querySelector('.lf-canvas-overlay[name=\"canvas-overlay\"]')\n      ?.dispatchEvent(newEvent)\n  }\n  onDragging = ({ deltaX, deltaY }: IDragParams) => {\n    const { graphModel, logicFlow } = this.props\n    const { SCALE_X, SCALE_Y } = logicFlow.getTransform()\n    const selectElements = graphModel.getSelectElements(true)\n    graphModel.moveNodes(\n      selectElements.nodes.map((node) => node.id),\n      deltaX / SCALE_X,\n      deltaY / SCALE_Y,\n    )\n  }\n  handleContextMenu = (ev: MouseEvent) => {\n    ev.preventDefault()\n    const {\n      graphModel,\n      graphModel: { eventCenter, selectElements },\n    } = this.props\n    const position = graphModel.getPointByClient({\n      x: ev.clientX,\n      y: ev.clientY,\n    })\n    const selectGraphData: GraphData = {\n      nodes: [],\n      edges: [],\n    }\n    const models = [...selectElements.values()]\n    models.forEach((model) => {\n      if (model.BaseType === ElementType.NODE) {\n        selectGraphData.nodes.push(model.getData())\n      }\n      if (model.BaseType === ElementType.EDGE) {\n        selectGraphData.edges.push(model.getData())\n      }\n    })\n    eventCenter.emit(EventType.SELECTION_CONTEXTMENU, {\n      data: selectGraphData,\n      e: ev,\n      position,\n    })\n  }\n\n  render() {\n    const {\n      graphModel: { selectElements, transformModel },\n    } = this.props\n    const { SCALE_X, SCALE_Y } = this.props.logicFlow.getTransform()\n    if (selectElements.size <= 1) return\n    let x = Number.MAX_SAFE_INTEGER\n    let y = Number.MAX_SAFE_INTEGER\n    let x1 = Number.MIN_SAFE_INTEGER\n    let y1 = Number.MIN_SAFE_INTEGER\n    selectElements.forEach((element) => {\n      let outline: Model.OutlineInfo | undefined\n      if (element.BaseType === ElementType.NODE) {\n        outline = getNodeOutline(element)\n      }\n      if (element.BaseType === ElementType.EDGE) {\n        outline = getEdgeOutline(element)\n      }\n\n      if (outline !== undefined) {\n        x = Math.min(x, outline.x)\n        y = Math.min(y, outline.y)\n        x1 = Math.max(x1, outline.x1)\n        y1 = Math.max(y1, outline.y1)\n      }\n    })\n    ;[x, y] = transformModel.CanvasPointToHtmlPoint([x, y])\n    ;[x1, y1] = transformModel.CanvasPointToHtmlPoint([x1, y1])\n    const style = {\n      left: `${x - (20 * SCALE_X) / 2}px`,\n      top: `${y - (20 * SCALE_Y) / 2}px`,\n      width: `${x1 - x + 20 * SCALE_X}px`,\n      height: `${y1 - y + 20 * SCALE_Y}px`,\n      'border-width': `${2 * SCALE_X}px`,\n    }\n    return (\n      <div\n        className=\"lf-multiple-select\"\n        style={style}\n        onMouseDown={this.handleMouseDown}\n        onContextMenu={this.handleContextMenu}\n        onWheel={this.handleWheelEvent}\n      />\n    )\n  }\n}\n", "import { Component } from 'preact/compat'\nimport { VNode } from 'preact'\nimport TextEdit from './TextEditTool'\nimport MultipleSelect from './MultipleSelectTool'\nimport LogicFlow from '../LogicFlow'\nimport { ElementState, EventType } from '../constant'\nimport { GraphModel, BaseEdgeModel, BaseNodeModel } from '../model'\n\nexport type IToolProps = {\n  textEditElement?: BaseNodeModel | BaseEdgeModel\n  graphModel: GraphModel\n  logicFlow: LogicFlow\n}\n\ntype ToolConstructor = new (props: IToolProps) => Component<IToolProps>\n\nexport class Tool {\n  tools?: Component[]\n  components?: VNode<IToolProps>[]\n  toolMap = new Map<string, ToolConstructor>()\n  instance: LogicFlow\n\n  constructor(instance: LogicFlow) {\n    this.instance = instance\n    if (!this.isDisabledTool(TextEdit.toolName)) {\n      this.registerTool(TextEdit.toolName, TextEdit)\n    }\n    if (!this.isDisabledTool(MultipleSelect.toolName)) {\n      this.registerTool(MultipleSelect.toolName, MultipleSelect)\n    }\n    // @see https://github.com/didi/LogicFlow/issues/152\n    const { graphModel } = instance\n    const { eventCenter } = graphModel\n    eventCenter.on(\n      `${EventType.GRAPH_TRANSFORM},${EventType.NODE_CLICK},${EventType.BLANK_CLICK} `,\n      () => {\n        const {\n          textEditElement,\n          editConfigModel: { edgeTextEdit, nodeTextEdit },\n        } = graphModel\n        // fix #826, 保留之前的文本可以编辑点击空白才设置为不可编辑。如果以后有其他需求再改。\n        if ((edgeTextEdit || nodeTextEdit) && textEditElement) {\n          graphModel.textEditElement?.setElementState(ElementState.DEFAULT)\n        }\n      },\n    )\n  }\n\n  private isDisabledTool(toolName) {\n    return this.instance.options.disabledTools?.indexOf(toolName) !== -1\n  }\n\n  registerTool(name: string, component: ToolConstructor) {\n    this.toolMap.set(name, component)\n  }\n\n  getTools() {\n    return Array.from(this.toolMap.values())\n  }\n\n  getInstance() {\n    return this.instance\n  }\n}\n\nexport default Tool\n", "import EventEmitter from '../event/eventEmitter'\nimport SnaplineModel from '../model/SnaplineModel'\n\nexport function snapline(\n  eventCenter: EventEmitter,\n  snaplineModel: SnaplineModel,\n): void {\n  // 节点拖动时启动对齐线计算\n  eventCenter.on('node:mousemove', ({ data }: any) => {\n    // TODO: 取消注释，定义 data 类型，解决编译问题\n    snaplineModel.setNodeSnapLine(data)\n  })\n  // 节点拖动结束时，对齐线消失\n  eventCenter.on('node:mouseup', () => {\n    snaplineModel.clearSnapline()\n  })\n}\n", "import { isArray } from 'lodash-es'\nimport Mousetrap, { MousetrapInstance } from 'mousetrap'\nimport LogicFlow from '../LogicFlow'\n\nexport type Action = 'keypress' | 'keydown' | 'keyup'\nexport type Handler = (e: KeyboardEvent) => void\n\nexport interface KeyboardDef {\n  enabled: boolean\n  shortcuts?: Array<{\n    keys: string | string[]\n    callback: Handler\n    action?: Action\n  }>\n}\n\nexport interface KeyboardOptions {\n  lf: LogicFlow\n  keyboard?: KeyboardDef\n}\n\nexport class Keyboard {\n  public readonly mousetrap: MousetrapInstance\n  public options: KeyboardOptions\n  private readonly target: HTMLElement\n\n  constructor(options: KeyboardOptions) {\n    if (!options.keyboard) {\n      options.keyboard = { enabled: false }\n    }\n    this.options = options\n    const { lf } = options\n    this.target = lf.container\n    this.mousetrap = new Mousetrap(this.target)\n    // 默认开启快捷键，且不是静默模式时enable\n    if (options.keyboard.enabled && !lf.options.isSilentMode) {\n      this.enable(true)\n    }\n  }\n\n  initShortcuts() {\n    const { shortcuts } = this.options.keyboard ?? {}\n    if (shortcuts) {\n      if (isArray(shortcuts)) {\n        shortcuts.forEach(({ keys, callback, action }) =>\n          this.on(keys, callback, action),\n        )\n      } else {\n        const { keys, callback, action } = shortcuts\n        this.on(keys, callback, action)\n      }\n    }\n  }\n\n  on(keys: string | string[], callback: Handler, action?: Action) {\n    this.mousetrap.bind(this.getKeys(keys), callback, action)\n  }\n\n  get disabled() {\n    return this.options?.keyboard?.enabled !== true\n  }\n\n  off(keys: string | string[], action?: Action) {\n    this.mousetrap.unbind(this.getKeys(keys), action)\n  }\n\n  enable(force: boolean) {\n    if (this.disabled || force) {\n      if (this.options.keyboard) {\n        this.options.keyboard.enabled = true\n      }\n      if (this.target instanceof HTMLElement) {\n        this.target.setAttribute('tabindex', '-1')\n        // 去掉节点被选中时container出现的边框\n        this.target.style.outline = 'none'\n      }\n    }\n  }\n\n  disable() {\n    if (!this.disabled) {\n      if (this.options.keyboard) {\n        this.options.keyboard.enabled = false\n      }\n      if (this.target instanceof HTMLElement) {\n        this.target.removeAttribute('tabindex')\n      }\n    }\n  }\n\n  private getKeys(keys: string | string[]) {\n    return (Array.isArray(keys) ? keys : [keys]).map((key) =>\n      this.formatKey(key),\n    )\n  }\n\n  protected formatKey(key: string) {\n    return key\n      .toLowerCase()\n      .replace(/\\s/g, '')\n      .replace('delete', 'del')\n      .replace('cmd', 'command')\n  }\n}\n\nexport default Keyboard\n", "import { action, extendObservable, $mobx, observable, _allowStateChanges, createAtom, computed, runInAction, keys, isObservableArray, isObservableMap, isComputed, isObservableObject, isComputedProp, _getAdministration, when, getAtom, isAction, autorun, _isComputingDerivation, flow, onBecomeUnobserved, observe, entries, values, transaction, reaction, ObservableMap, _startAction, _endAction } from 'mobx';\n\nvar NOOP = function () { };\r\nvar IDENTITY = function (_) { return _; };\r\nfunction fail$1(message) {\r\n    throw new Error(\"[mobx-utils] \" + message);\r\n}\r\nfunction invariant(cond, message) {\r\n    if (message === void 0) { message = \"Illegal state\"; }\r\n    if (!cond)\r\n        fail$1(message);\r\n}\r\nvar deprecatedMessages = [];\r\nfunction deprecated(msg) {\r\n    if (deprecatedMessages.indexOf(msg) !== -1)\r\n        return;\r\n    deprecatedMessages.push(msg);\r\n    console.error(\"[mobx-utils] Deprecated: \" + msg);\r\n}\r\nfunction addHiddenProp(object, propName, value) {\r\n    Object.defineProperty(object, propName, {\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n        value: value,\r\n    });\r\n}\r\nvar deepFields = function (x) {\r\n    return (x &&\r\n        x !== Object.prototype &&\r\n        Object.getOwnPropertyNames(x).concat(deepFields(Object.getPrototypeOf(x)) || []));\r\n};\r\nvar distinctDeepFields = function (x) {\r\n    var deepFieldsIndistinct = deepFields(x);\r\n    var deepFieldsDistinct = deepFieldsIndistinct.filter(function (item, index) { return deepFieldsIndistinct.indexOf(item) === index; });\r\n    return deepFieldsDistinct;\r\n};\r\nvar getAllMethodsAndProperties = function (x) {\r\n    return distinctDeepFields(x).filter(function (name) { return name !== \"constructor\" && !~name.indexOf(\"__\"); });\r\n};\n\nvar PENDING = \"pending\";\r\nvar FULFILLED = \"fulfilled\";\r\nvar REJECTED = \"rejected\";\r\nfunction caseImpl(handlers) {\r\n    switch (this.state) {\r\n        case PENDING:\r\n            return handlers.pending && handlers.pending(this.value);\r\n        case REJECTED:\r\n            return handlers.rejected && handlers.rejected(this.value);\r\n        case FULFILLED:\r\n            return handlers.fulfilled ? handlers.fulfilled(this.value) : this.value;\r\n    }\r\n}\r\n/**\r\n * `fromPromise` takes a Promise, extends it with 2 observable properties that track\r\n * the status of the promise and returns it. The returned object has the following observable properties:\r\n *  - `value`: either the initial value, the value the Promise resolved to, or the value the Promise was rejected with. use `.state` if you need to be able to tell the difference.\r\n *  - `state`: one of `\"pending\"`, `\"fulfilled\"` or `\"rejected\"`\r\n *\r\n * And the following methods:\r\n * - `case({fulfilled, rejected, pending})`: maps over the result using the provided handlers, or returns `undefined` if a handler isn't available for the current promise state.\r\n * - `then((value: TValue) => TResult1 | PromiseLike<TResult1>, [(rejectReason: any) => any])`: chains additional handlers to the provided promise.\r\n *\r\n * The returned object implements `PromiseLike<TValue>`, so you can chain additional `Promise` handlers using `then`. You may also use it with `await` in `async` functions.\r\n *\r\n * Note that the status strings are available as constants:\r\n * `mobxUtils.PENDING`, `mobxUtils.REJECTED`, `mobxUtil.FULFILLED`\r\n *\r\n * fromPromise takes an optional second argument, a previously created `fromPromise` based observable.\r\n * This is useful to replace one promise based observable with another, without going back to an intermediate\r\n * \"pending\" promise state while fetching data. For example:\r\n *\r\n * @example\r\n * \\@observer\r\n * class SearchResults extends React.Component {\r\n *   \\@observable.ref searchResults\r\n *\r\n *   componentDidUpdate(nextProps) {\r\n *     if (nextProps.query !== this.props.query)\r\n *       this.searchResults = fromPromise(\r\n *         window.fetch(\"/search?q=\" + nextProps.query),\r\n *         // by passing, we won't render a pending state if we had a successful search query before\r\n *         // rather, we will keep showing the previous search results, until the new promise resolves (or rejects)\r\n *         this.searchResults\r\n *       )\r\n *   }\r\n *\r\n *   render() {\r\n *     return this.searchResults.case({\r\n *        pending: (staleValue) => {\r\n *          return staleValue || \"searching\" // <- value might set to previous results while the promise is still pending\r\n *        },\r\n *        fulfilled: (value) => {\r\n *          return value // the fresh results\r\n *        },\r\n *        rejected: (error) => {\r\n *          return \"Oops: \" + error\r\n *        }\r\n *     })\r\n *   }\r\n * }\r\n *\r\n * Observable promises can be created immediately in a certain state using\r\n * `fromPromise.reject(reason)` or `fromPromise.resolve(value?)`.\r\n * The main advantage of `fromPromise.resolve(value)` over `fromPromise(Promise.resolve(value))` is that the first _synchronously_ starts in the desired state.\r\n *\r\n * It is possible to directly create a promise using a resolve, reject function:\r\n * `fromPromise((resolve, reject) => setTimeout(() => resolve(true), 1000))`\r\n *\r\n * @example\r\n * const fetchResult = fromPromise(fetch(\"http://someurl\"))\r\n *\r\n * // combine with when..\r\n * when(\r\n *   () => fetchResult.state !== \"pending\",\r\n *   () => {\r\n *     console.log(\"Got \", fetchResult.value)\r\n *   }\r\n * )\r\n *\r\n * // or a mobx-react component..\r\n * const myComponent = observer(({ fetchResult }) => {\r\n *   switch(fetchResult.state) {\r\n *      case \"pending\": return <div>Loading...</div>\r\n *      case \"rejected\": return <div>Ooops... {fetchResult.value}</div>\r\n *      case \"fulfilled\": return <div>Gotcha: {fetchResult.value}</div>\r\n *   }\r\n * })\r\n *\r\n * // or using the case method instead of switch:\r\n *\r\n * const myComponent = observer(({ fetchResult }) =>\r\n *   fetchResult.case({\r\n *     pending:   () => <div>Loading...</div>,\r\n *     rejected:  error => <div>Ooops.. {error}</div>,\r\n *     fulfilled: value => <div>Gotcha: {value}</div>,\r\n *   }))\r\n *\r\n * // chain additional handler(s) to the resolve/reject:\r\n *\r\n * fetchResult.then(\r\n *   (result) =>  doSomeTransformation(result),\r\n *   (rejectReason) => console.error('fetchResult was rejected, reason: ' + rejectReason)\r\n * ).then(\r\n *   (transformedResult) => console.log('transformed fetchResult: ' + transformedResult)\r\n * )\r\n *\r\n * @param {IThenable<T>} promise The promise which will be observed\r\n * @param {IThenable<T>} oldPromise? The previously observed promise\r\n * @returns {IPromiseBasedObservable<T>}\r\n */\r\nfunction fromPromise(origPromise, oldPromise) {\r\n    invariant(arguments.length <= 2, \"fromPromise expects up to two arguments\");\r\n    invariant(typeof origPromise === \"function\" ||\r\n        (typeof origPromise === \"object\" &&\r\n            origPromise &&\r\n            typeof origPromise.then === \"function\"), \"Please pass a promise or function to fromPromise\");\r\n    if (origPromise.isPromiseBasedObservable === true)\r\n        return origPromise;\r\n    if (typeof origPromise === \"function\") {\r\n        // If it is a (reject, resolve function, wrap it)\r\n        origPromise = new Promise(origPromise);\r\n    }\r\n    var promise = origPromise;\r\n    origPromise.then(action(\"observableFromPromise-resolve\", function (value) {\r\n        promise.value = value;\r\n        promise.state = FULFILLED;\r\n    }), action(\"observableFromPromise-reject\", function (reason) {\r\n        promise.value = reason;\r\n        promise.state = REJECTED;\r\n    }));\r\n    promise.isPromiseBasedObservable = true;\r\n    promise.case = caseImpl;\r\n    var oldData = oldPromise && oldPromise.state === FULFILLED\r\n        ? oldPromise.value\r\n        : undefined;\r\n    extendObservable(promise, {\r\n        value: oldData,\r\n        state: PENDING,\r\n    }, {}, { deep: false });\r\n    return promise;\r\n}\r\n(function (fromPromise) {\r\n    fromPromise.reject = action(\"fromPromise.reject\", function (reason) {\r\n        var p = fromPromise(Promise.reject(reason));\r\n        p.state = REJECTED;\r\n        p.value = reason;\r\n        return p;\r\n    });\r\n    function resolveBase(value) {\r\n        if (value === void 0) { value = undefined; }\r\n        var p = fromPromise(Promise.resolve(value));\r\n        p.state = FULFILLED;\r\n        p.value = value;\r\n        return p;\r\n    }\r\n    fromPromise.resolve = action(\"fromPromise.resolve\", resolveBase);\r\n})(fromPromise || (fromPromise = {}));\r\n/**\r\n * Returns true if the provided value is a promise-based observable.\r\n * @param value any\r\n * @returns {boolean}\r\n */\r\nfunction isPromiseBasedObservable(value) {\r\n    return value && value.isPromiseBasedObservable === true;\r\n}\n\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n/**\r\n * Moves an item from one position to another, checking that the indexes given are within bounds.\r\n *\r\n * @example\r\n * const source = observable([1, 2, 3])\r\n * moveItem(source, 0, 1)\r\n * console.log(source.map(x => x)) // [2, 1, 3]\r\n *\r\n * @export\r\n * @param {ObservableArray<T>} target\r\n * @param {number} fromIndex\r\n * @param {number} toIndex\r\n * @returns {ObservableArray<T>}\r\n */\r\nfunction moveItem(target, fromIndex, toIndex) {\r\n    checkIndex(target, fromIndex);\r\n    checkIndex(target, toIndex);\r\n    if (fromIndex === toIndex) {\r\n        return;\r\n    }\r\n    var oldItems = target[$mobx].values;\r\n    var newItems;\r\n    if (fromIndex < toIndex) {\r\n        newItems = __spreadArrays(oldItems.slice(0, fromIndex), oldItems.slice(fromIndex + 1, toIndex + 1), [\r\n            oldItems[fromIndex]\r\n        ], oldItems.slice(toIndex + 1));\r\n    }\r\n    else {\r\n        // toIndex < fromIndex\r\n        newItems = __spreadArrays(oldItems.slice(0, toIndex), [\r\n            oldItems[fromIndex]\r\n        ], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));\r\n    }\r\n    target.replace(newItems);\r\n    return target;\r\n}\r\n/**\r\n * Checks whether the specified index is within bounds. Throws if not.\r\n *\r\n * @private\r\n * @param {ObservableArray<any>} target\r\n * @param {number }index\r\n */\r\nfunction checkIndex(target, index) {\r\n    if (index < 0) {\r\n        throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is negative\");\r\n    }\r\n    var length = target[$mobx].values.length;\r\n    if (index >= length) {\r\n        throw new Error(\"[mobx.array] Index out of bounds: \" + index + \" is not smaller than \" + length);\r\n    }\r\n}\n\n/**\r\n * `lazyObservable` creates an observable around a `fetch` method that will not be invoked\r\n * until the observable is needed the first time.\r\n * The fetch method receives a `sink` callback which can be used to replace the\r\n * current value of the lazyObservable. It is allowed to call `sink` multiple times\r\n * to keep the lazyObservable up to date with some external resource.\r\n *\r\n * Note that it is the `current()` call itself which is being tracked by MobX,\r\n * so make sure that you don't dereference to early.\r\n *\r\n * @example\r\n * const userProfile = lazyObservable(\r\n *   sink => fetch(\"/myprofile\").then(profile => sink(profile))\r\n * )\r\n *\r\n * // use the userProfile in a React component:\r\n * const Profile = observer(({ userProfile }) =>\r\n *   userProfile.current() === undefined\r\n *   ? <div>Loading user profile...</div>\r\n *   : <div>{userProfile.current().displayName}</div>\r\n * )\r\n *\r\n * // triggers refresh the userProfile\r\n * userProfile.refresh()\r\n *\r\n * @param {(sink: (newValue: T) => void) => void} fetch method that will be called the first time the value of this observable is accessed. The provided sink can be used to produce a new value, synchronously or asynchronously\r\n * @param {T} [initialValue=undefined] optional initialValue that will be returned from `current` as long as the `sink` has not been called at least once\r\n * @returns {{\r\n *     current(): T,\r\n *     refresh(): T,\r\n *     reset(): T\r\n *     pending: boolean\r\n * }}\r\n */\r\nfunction lazyObservable(fetch, initialValue) {\r\n    if (initialValue === void 0) { initialValue = undefined; }\r\n    var started = false;\r\n    var value = observable.box(initialValue, { deep: false });\r\n    var pending = observable.box(false);\r\n    var currentFnc = function () {\r\n        if (!started) {\r\n            started = true;\r\n            _allowStateChanges(true, function () {\r\n                pending.set(true);\r\n            });\r\n            fetch(function (newValue) {\r\n                _allowStateChanges(true, function () {\r\n                    value.set(newValue);\r\n                    pending.set(false);\r\n                });\r\n            });\r\n        }\r\n        return value.get();\r\n    };\r\n    var resetFnc = action(\"lazyObservable-reset\", function () {\r\n        started = false;\r\n        value.set(initialValue);\r\n        return value.get();\r\n    });\r\n    return {\r\n        current: currentFnc,\r\n        refresh: function () {\r\n            if (started) {\r\n                started = false;\r\n                return currentFnc();\r\n            }\r\n            else {\r\n                return value.get();\r\n            }\r\n        },\r\n        reset: function () {\r\n            return resetFnc();\r\n        },\r\n        get pending() {\r\n            return pending.get();\r\n        },\r\n    };\r\n}\n\n/**\r\n * `fromResource` creates an observable whose current state can be inspected using `.current()`,\r\n * and which can be kept in sync with some external datasource that can be subscribed to.\r\n *\r\n * The created observable will only subscribe to the datasource if it is in use somewhere,\r\n * (un)subscribing when needed. To enable `fromResource` to do that two callbacks need to be provided,\r\n * one to subscribe, and one to unsubscribe. The subscribe callback itself will receive a `sink` callback, which can be used\r\n * to update the current state of the observable, allowing observes to react.\r\n *\r\n * Whatever is passed to `sink` will be returned by `current()`. The values passed to the sink will not be converted to\r\n * observables automatically, but feel free to do so.\r\n * It is the `current()` call itself which is being tracked,\r\n * so make sure that you don't dereference to early.\r\n *\r\n * For inspiration, an example integration with the apollo-client on [github](https://github.com/apollostack/apollo-client/issues/503#issuecomment-241101379),\r\n * or the [implementation](https://github.com/mobxjs/mobx-utils/blob/1d17cf7f7f5200937f68cc0b5e7ec7f3f71dccba/src/now.ts#L43-L57) of `mobxUtils.now`\r\n *\r\n * The following example code creates an observable that connects to a `dbUserRecord`,\r\n * which comes from an imaginary database and notifies when it has changed.\r\n *\r\n * @example\r\n * function createObservableUser(dbUserRecord) {\r\n *   let currentSubscription;\r\n *   return fromResource(\r\n *     (sink) => {\r\n *       // sink the current state\r\n *       sink(dbUserRecord.fields)\r\n *       // subscribe to the record, invoke the sink callback whenever new data arrives\r\n *       currentSubscription = dbUserRecord.onUpdated(() => {\r\n *         sink(dbUserRecord.fields)\r\n *       })\r\n *     },\r\n *     () => {\r\n *       // the user observable is not in use at the moment, unsubscribe (for now)\r\n *       dbUserRecord.unsubscribe(currentSubscription)\r\n *     }\r\n *   )\r\n * }\r\n *\r\n * // usage:\r\n * const myUserObservable = createObservableUser(myDatabaseConnector.query(\"name = 'Michel'\"))\r\n *\r\n * // use the observable in autorun\r\n * autorun(() => {\r\n *   // printed everytime the database updates its records\r\n *   console.log(myUserObservable.current().displayName)\r\n * })\r\n *\r\n * // ... or a component\r\n * const userComponent = observer(({ user }) =>\r\n *   <div>{user.current().displayName}</div>\r\n * )\r\n *\r\n * @export\r\n * @template T\r\n * @param {(sink: (newValue: T) => void) => void} subscriber\r\n * @param {IDisposer} [unsubscriber=NOOP]\r\n * @param {T} [initialValue=undefined] the data that will be returned by `get()` until the `sink` has emitted its first data\r\n * @returns {{\r\n *     current(): T;\r\n *     dispose(): void;\r\n *     isAlive(): boolean;\r\n * }}\r\n */\r\nfunction fromResource(subscriber, unsubscriber, initialValue) {\r\n    if (unsubscriber === void 0) { unsubscriber = NOOP; }\r\n    if (initialValue === void 0) { initialValue = undefined; }\r\n    var isActive = false;\r\n    var isDisposed = false;\r\n    var value = initialValue;\r\n    var suspender = function () {\r\n        if (isActive) {\r\n            isActive = false;\r\n            unsubscriber();\r\n        }\r\n    };\r\n    var atom = createAtom(\"ResourceBasedObservable\", function () {\r\n        invariant(!isActive && !isDisposed);\r\n        isActive = true;\r\n        subscriber(function (newValue) {\r\n            _allowStateChanges(true, function () {\r\n                value = newValue;\r\n                atom.reportChanged();\r\n            });\r\n        });\r\n    }, suspender);\r\n    return {\r\n        current: function () {\r\n            invariant(!isDisposed, \"subscribingObservable has already been disposed\");\r\n            var isBeingTracked = atom.reportObserved();\r\n            if (!isBeingTracked && !isActive)\r\n                console.warn(\"Called `get` of a subscribingObservable outside a reaction. Current value will be returned but no new subscription has started\");\r\n            return value;\r\n        },\r\n        dispose: function () {\r\n            isDisposed = true;\r\n            suspender();\r\n        },\r\n        isAlive: function () { return isActive; },\r\n    };\r\n}\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nfunction observableSymbol() {\r\n    return (typeof Symbol === \"function\" && Symbol.observable) || \"@@observable\";\r\n}\r\n/**\r\n * Converts an expression to an observable stream (a.k.a. TC 39 Observable / RxJS observable).\r\n * The provided expression is tracked by mobx as long as there are subscribers, automatically\r\n * emitting when new values become available. The expressions respect (trans)actions.\r\n *\r\n * @example\r\n *\r\n * const user = observable({\r\n *   firstName: \"C.S\",\r\n *   lastName: \"Lewis\"\r\n * })\r\n *\r\n * Rx.Observable\r\n *   .from(mobxUtils.toStream(() => user.firstname + user.lastName))\r\n *   .scan(nameChanges => nameChanges + 1, 0)\r\n *   .subscribe(nameChanges => console.log(\"Changed name \", nameChanges, \"times\"))\r\n *\r\n * @export\r\n * @template T\r\n * @param {() => T} expression\r\n * @param {boolean} fireImmediately (by default false)\r\n * @returns {IObservableStream<T>}\r\n */\r\nfunction toStream(expression, fireImmediately) {\r\n    var _a;\r\n    if (fireImmediately === void 0) { fireImmediately = false; }\r\n    var computedValue = computed(expression);\r\n    return _a = {\r\n            subscribe: function (observer) {\r\n                if (\"function\" === typeof observer) {\r\n                    return {\r\n                        unsubscribe: computedValue.observe(function (_a) {\r\n                            var newValue = _a.newValue;\r\n                            return observer(newValue);\r\n                        }, fireImmediately),\r\n                    };\r\n                }\r\n                if (observer && \"object\" === typeof observer && observer.next) {\r\n                    return {\r\n                        unsubscribe: computedValue.observe(function (_a) {\r\n                            var newValue = _a.newValue;\r\n                            return observer.next(newValue);\r\n                        }, fireImmediately),\r\n                    };\r\n                }\r\n                return {\r\n                    unsubscribe: function () { },\r\n                };\r\n            }\r\n        },\r\n        _a[observableSymbol()] = function () {\r\n            return this;\r\n        },\r\n        _a;\r\n}\r\nvar StreamListener = /** @class */ (function () {\r\n    function StreamListener(observable, initialValue) {\r\n        var _this = this;\r\n        runInAction(function () {\r\n            _this.current = initialValue;\r\n            _this.subscription = observable.subscribe(_this);\r\n        });\r\n    }\r\n    StreamListener.prototype.dispose = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    };\r\n    StreamListener.prototype.next = function (value) {\r\n        this.current = value;\r\n    };\r\n    StreamListener.prototype.complete = function () {\r\n        this.dispose();\r\n    };\r\n    StreamListener.prototype.error = function (value) {\r\n        this.current = value;\r\n        this.dispose();\r\n    };\r\n    __decorate([\r\n        observable.ref\r\n    ], StreamListener.prototype, \"current\", void 0);\r\n    __decorate([\r\n        action.bound\r\n    ], StreamListener.prototype, \"next\", null);\r\n    __decorate([\r\n        action.bound\r\n    ], StreamListener.prototype, \"complete\", null);\r\n    __decorate([\r\n        action.bound\r\n    ], StreamListener.prototype, \"error\", null);\r\n    return StreamListener;\r\n}());\r\nfunction fromStream(observable, initialValue) {\r\n    if (initialValue === void 0) { initialValue = undefined; }\r\n    return new StreamListener(observable, initialValue);\r\n}\n\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar RESERVED_NAMES = [\"model\", \"reset\", \"submit\", \"isDirty\", \"isPropertyDirty\", \"resetProperty\"];\r\nvar ViewModel = /** @class */ (function () {\r\n    function ViewModel(model) {\r\n        var _this = this;\r\n        this.model = model;\r\n        this.localValues = observable.map({});\r\n        this.localComputedValues = observable.map({});\r\n        this.isPropertyDirty = function (key) {\r\n            return _this.localValues.has(key);\r\n        };\r\n        invariant(isObservableObject(model), \"createViewModel expects an observable object\");\r\n        // use this helper as Object.getOwnPropertyNames doesn't return getters\r\n        getAllMethodsAndProperties(model).forEach(function (key) {\r\n            if (key === $mobx || key === \"__mobxDidRunLazyInitializers\") {\r\n                return;\r\n            }\r\n            invariant(RESERVED_NAMES.indexOf(key) === -1, \"The propertyname \" + key + \" is reserved and cannot be used with viewModels\");\r\n            if (isComputedProp(model, key)) {\r\n                var derivation = _getAdministration(model, key).derivation; // Fixme: there is no clear api to get the derivation\r\n                _this.localComputedValues.set(key, computed(derivation.bind(_this)));\r\n            }\r\n            var descriptor = Object.getOwnPropertyDescriptor(model, key);\r\n            var additionalDescriptor = descriptor ? { enumerable: descriptor.enumerable } : {};\r\n            Object.defineProperty(_this, key, __assign(__assign({}, additionalDescriptor), { configurable: true, get: function () {\r\n                    if (isComputedProp(model, key))\r\n                        return _this.localComputedValues.get(key).get();\r\n                    if (_this.isPropertyDirty(key))\r\n                        return _this.localValues.get(key);\r\n                    else\r\n                        return _this.model[key];\r\n                }, set: action(function (value) {\r\n                    if (value !== _this.model[key]) {\r\n                        _this.localValues.set(key, value);\r\n                    }\r\n                    else {\r\n                        _this.localValues.delete(key);\r\n                    }\r\n                }) }));\r\n        });\r\n    }\r\n    Object.defineProperty(ViewModel.prototype, \"isDirty\", {\r\n        get: function () {\r\n            return this.localValues.size > 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ViewModel.prototype, \"changedValues\", {\r\n        get: function () {\r\n            return this.localValues.toJS();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ViewModel.prototype.submit = function () {\r\n        var _this = this;\r\n        keys(this.localValues).forEach(function (key) {\r\n            var source = _this.localValues.get(key);\r\n            var destination = _this.model[key];\r\n            if (isObservableArray(destination)) {\r\n                destination.replace(source);\r\n            }\r\n            else if (isObservableMap(destination)) {\r\n                destination.clear();\r\n                destination.merge(source);\r\n            }\r\n            else if (!isComputed(source)) {\r\n                _this.model[key] = source;\r\n            }\r\n        });\r\n        this.localValues.clear();\r\n    };\r\n    ViewModel.prototype.reset = function () {\r\n        this.localValues.clear();\r\n    };\r\n    ViewModel.prototype.resetProperty = function (key) {\r\n        this.localValues.delete(key);\r\n    };\r\n    __decorate$1([\r\n        computed\r\n    ], ViewModel.prototype, \"isDirty\", null);\r\n    __decorate$1([\r\n        computed\r\n    ], ViewModel.prototype, \"changedValues\", null);\r\n    __decorate$1([\r\n        action.bound\r\n    ], ViewModel.prototype, \"submit\", null);\r\n    __decorate$1([\r\n        action.bound\r\n    ], ViewModel.prototype, \"reset\", null);\r\n    __decorate$1([\r\n        action.bound\r\n    ], ViewModel.prototype, \"resetProperty\", null);\r\n    return ViewModel;\r\n}());\r\n/**\r\n * `createViewModel` takes an object with observable properties (model)\r\n * and wraps a viewmodel around it. The viewmodel proxies all enumerable properties of the original model with the following behavior:\r\n *  - as long as no new value has been assigned to the viewmodel property, the original property will be returned.\r\n *  - any future change in the model will be visible in the viewmodel as well unless the viewmodel property was dirty at the time of the attempted change.\r\n *  - once a new value has been assigned to a property of the viewmodel, that value will be returned during a read of that property in the future. However, the original model remain untouched until `submit()` is called.\r\n *\r\n * The viewmodel exposes the following additional methods, besides all the enumerable properties of the model:\r\n * - `submit()`: copies all the values of the viewmodel to the model and resets the state\r\n * - `reset()`: resets the state of the viewmodel, abandoning all local modifications\r\n * - `resetProperty(propName)`: resets the specified property of the viewmodel\r\n * - `isDirty`: observable property indicating if the viewModel contains any modifications\r\n * - `isPropertyDirty(propName)`: returns true if the specified property is dirty\r\n * - `changedValues`: returns a key / value map with the properties that have been changed in the model so far\r\n * - `model`: The original model object for which this viewModel was created\r\n *\r\n * You may use observable arrays, maps and objects with `createViewModel` but keep in mind to assign fresh instances of those to the viewmodel's properties, otherwise you would end up modifying the properties of the original model.\r\n * Note that if you read a non-dirty property, viewmodel only proxies the read to the model. You therefore need to assign a fresh instance not only the first time you make the assignment but also after calling `reset()` or `submit()`.\r\n *\r\n * @example\r\n * class Todo {\r\n *   \\@observable title = \"Test\"\r\n * }\r\n *\r\n * const model = new Todo()\r\n * const viewModel = createViewModel(model);\r\n *\r\n * autorun(() => console.log(viewModel.model.title, \",\", viewModel.title))\r\n * // prints \"Test, Test\"\r\n * model.title = \"Get coffee\"\r\n * // prints \"Get coffee, Get coffee\", viewModel just proxies to model\r\n * viewModel.title = \"Get tea\"\r\n * // prints \"Get coffee, Get tea\", viewModel's title is now dirty, and the local value will be printed\r\n * viewModel.submit()\r\n * // prints \"Get tea, Get tea\", changes submitted from the viewModel to the model, viewModel is proxying again\r\n * viewModel.title = \"Get cookie\"\r\n * // prints \"Get tea, Get cookie\" // viewModel has diverged again\r\n * viewModel.reset()\r\n * // prints \"Get tea, Get tea\", changes of the viewModel have been abandoned\r\n *\r\n * @param {T} model\r\n * @returns {(T & IViewModel<T>)}\r\n * ```\r\n */\r\nfunction createViewModel(model) {\r\n    return new ViewModel(model);\r\n}\n\n/**\r\n * Like normal `when`, except that this `when` will automatically dispose if the condition isn't met within a certain amount of time.\r\n *\r\n * @example\r\n * test(\"expect store to load\", t => {\r\n *   const store = {\r\n *     items: [],\r\n *     loaded: false\r\n *   }\r\n *   fetchDataForStore((data) => {\r\n *     store.items = data;\r\n *     store.loaded = true;\r\n *   })\r\n *   whenWithTimeout(\r\n *     () => store.loaded\r\n *     () => t.end()\r\n *     2000,\r\n *     () => t.fail(\"store didn't load with 2 secs\")\r\n *   )\r\n * })\r\n *\r\n *\r\n * @export\r\n * @param {() => boolean} expr see when, the expression to await\r\n * @param {() => void} action see when, the action to execut when expr returns truthy\r\n * @param {number} [timeout=10000] maximum amount when spends waiting before giving up\r\n * @param {any} [onTimeout=() => {}] the ontimeout handler will be called if the condition wasn't met within the given time\r\n * @returns {IDisposer} disposer function that can be used to cancel the when prematurely. Neither action or onTimeout will be fired if disposed\r\n */\r\nfunction whenWithTimeout(expr, action, timeout, onTimeout) {\r\n    if (timeout === void 0) { timeout = 10000; }\r\n    if (onTimeout === void 0) { onTimeout = function () { }; }\r\n    deprecated(\"whenWithTimeout is deprecated, use mobx.when with timeout option instead\");\r\n    return when(expr, action, {\r\n        timeout: timeout,\r\n        onError: onTimeout,\r\n    });\r\n}\n\n/**\r\n * MobX normally suspends any computed value that is not in use by any reaction,\r\n * and lazily re-evaluates the expression if needed outside a reaction while not in use.\r\n * `keepAlive` marks a computed value as always in use, meaning that it will always fresh, but never disposed automatically.\r\n *\r\n * @example\r\n * const obj = observable({\r\n *   number: 3,\r\n *   doubler: function() { return this.number * 2 }\r\n * })\r\n * const stop = keepAlive(obj, \"doubler\")\r\n *\r\n * @param {Object} target an object that has a computed property, created by `@computed` or `extendObservable`\r\n * @param {string} property the name of the property to keep alive\r\n * @returns {IDisposer} stops this keep alive so that the computed value goes back to normal behavior\r\n */\r\n/**\r\n * @example\r\n * const number = observable(3)\r\n * const doubler = computed(() => number.get() * 2)\r\n * const stop = keepAlive(doubler)\r\n * // doubler will now stay in sync reactively even when there are no further observers\r\n * stop()\r\n * // normal behavior, doubler results will be recomputed if not observed but needed, but lazily\r\n *\r\n * @param {IComputedValue<any>} computedValue created using the `computed` function\r\n * @returns {IDisposer} stops this keep alive so that the computed value goes back to normal behavior\r\n */\r\nfunction keepAlive(_1, _2) {\r\n    var computed = getAtom(_1, _2);\r\n    if (!computed)\r\n        throw new Error(\"No computed provided, please provide an object created with `computed(() => expr)` or an object + property name\");\r\n    return computed.observe(function () { });\r\n}\n\n/**\r\n * `queueProcessor` takes an observable array, observes it and calls `processor`\r\n * once for each item added to the observable array, optionally debouncing the action\r\n *\r\n * @example\r\n * const pendingNotifications = observable([])\r\n * const stop = queueProcessor(pendingNotifications, msg => {\r\n *   // show Desktop notification\r\n *   new Notification(msg);\r\n * })\r\n *\r\n * // usage:\r\n * pendingNotifications.push(\"test!\")\r\n *\r\n * @param {T[]} observableArray observable array instance to track\r\n * @param {(item: T) => void} processor action to call per item\r\n * @param {number} [debounce=0] optional debounce time in ms. With debounce 0 the processor will run synchronously\r\n * @returns {IDisposer} stops the processor\r\n */\r\nfunction queueProcessor(observableArray, processor, debounce) {\r\n    if (debounce === void 0) { debounce = 0; }\r\n    if (!isObservableArray(observableArray))\r\n        throw new Error(\"Expected observable array as first argument\");\r\n    if (!isAction(processor))\r\n        processor = action(\"queueProcessor\", processor);\r\n    var runner = function () {\r\n        // construct a final set\r\n        var items = observableArray.slice(0);\r\n        // clear the queue for next iteration\r\n        runInAction(function () { return observableArray.splice(0); });\r\n        // fire processor\r\n        items.forEach(processor);\r\n    };\r\n    if (debounce > 0)\r\n        return autorun(runner, { delay: debounce });\r\n    else\r\n        return autorun(runner);\r\n}\n\n/**\r\n * `chunkProcessor` takes an observable array, observes it and calls `processor`\r\n * once for a chunk of items added to the observable array, optionally deboucing the action.\r\n * The maximum chunk size can be limited by number.\r\n * This allows both, splitting larger into smaller chunks or (when debounced) combining smaller\r\n * chunks and/or single items into reasonable chunks of work.\r\n *\r\n * @example\r\n * const trackedActions = observable([])\r\n * const stop = chunkProcessor(trackedActions, chunkOfMax10Items => {\r\n *   sendTrackedActionsToServer(chunkOfMax10Items);\r\n * }, 100, 10)\r\n *\r\n * // usage:\r\n * trackedActions.push(\"scrolled\")\r\n * trackedActions.push(\"hoveredButton\")\r\n * // when both pushes happen within 100ms, there will be only one call to server\r\n *\r\n * @param {T[]} observableArray observable array instance to track\r\n * @param {(item: T[]) => void} processor action to call per item\r\n * @param {number} [debounce=0] optional debounce time in ms. With debounce 0 the processor will run synchronously\r\n * @param {number} [maxChunkSize=0] optionally do not call on full array but smaller chunks. With 0 it will process the full array.\r\n * @returns {IDisposer} stops the processor\r\n */\r\nfunction chunkProcessor(observableArray, processor, debounce, maxChunkSize) {\r\n    if (debounce === void 0) { debounce = 0; }\r\n    if (maxChunkSize === void 0) { maxChunkSize = 0; }\r\n    if (!isObservableArray(observableArray))\r\n        throw new Error(\"Expected observable array as first argument\");\r\n    if (!isAction(processor))\r\n        processor = action(\"chunkProcessor\", processor);\r\n    var runner = function () {\r\n        var _loop_1 = function () {\r\n            var chunkSize = maxChunkSize === 0\r\n                ? observableArray.length\r\n                : Math.min(observableArray.length, maxChunkSize);\r\n            // construct a final set\r\n            var items = observableArray.slice(0, chunkSize);\r\n            // clear the slice for next iteration\r\n            runInAction(function () { return observableArray.splice(0, chunkSize); });\r\n            // fire processor\r\n            processor(items);\r\n        };\r\n        while (observableArray.length > 0) {\r\n            _loop_1();\r\n        }\r\n    };\r\n    if (debounce > 0)\r\n        return autorun(runner, { delay: debounce });\r\n    else\r\n        return autorun(runner);\r\n}\n\nvar tickers = {};\r\n/**\r\n * Returns the current date time as epoch number.\r\n * The date time is read from an observable which is updated automatically after the given interval.\r\n * So basically it treats time as an observable.\r\n *\r\n * The function takes an interval as parameter, which indicates how often `now()` will return a new value.\r\n * If no interval is given, it will update each second. If \"frame\" is specified, it will update each time a\r\n * `requestAnimationFrame` is available.\r\n *\r\n * Multiple clocks with the same interval will automatically be synchronized.\r\n *\r\n * Countdown example: https://jsfiddle.net/mweststrate/na0qdmkw/\r\n *\r\n * @example\r\n *\r\n * const start = Date.now()\r\n *\r\n * autorun(() => {\r\n *   console.log(\"Seconds elapsed: \", (mobxUtils.now() - start) / 1000)\r\n * })\r\n *\r\n *\r\n * @export\r\n * @param {(number | \"frame\")} [interval=1000] interval in milliseconds about how often the interval should update\r\n * @returns\r\n */\r\nfunction now(interval) {\r\n    if (interval === void 0) { interval = 1000; }\r\n    if (!_isComputingDerivation()) {\r\n        // See #40\r\n        return Date.now();\r\n    }\r\n    if (!tickers[interval]) {\r\n        if (typeof interval === \"number\")\r\n            tickers[interval] = createIntervalTicker(interval);\r\n        else\r\n            tickers[interval] = createAnimationFrameTicker();\r\n    }\r\n    return tickers[interval].current();\r\n}\r\nfunction createIntervalTicker(interval) {\r\n    var subscriptionHandle;\r\n    return fromResource(function (sink) {\r\n        sink(Date.now());\r\n        subscriptionHandle = setInterval(function () { return sink(Date.now()); }, interval);\r\n    }, function () {\r\n        clearInterval(subscriptionHandle);\r\n    }, Date.now());\r\n}\r\nfunction createAnimationFrameTicker() {\r\n    var frameBasedTicker = fromResource(function (sink) {\r\n        sink(Date.now());\r\n        function scheduleTick() {\r\n            window.requestAnimationFrame(function () {\r\n                sink(Date.now());\r\n                if (frameBasedTicker.isAlive())\r\n                    scheduleTick();\r\n            });\r\n        }\r\n        scheduleTick();\r\n    }, function () { }, Date.now());\r\n    return frameBasedTicker;\r\n}\n\nvar __assign$1 = (undefined && undefined.__assign) || function () {\r\n    __assign$1 = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\r\n/**\r\n * _deprecated_ this functionality can now be found as `flow` in the mobx package. However, `flow` is not applicable as decorator, where `asyncAction` still is.\r\n *\r\n *\r\n *\r\n * `asyncAction` takes a generator function and automatically wraps all parts of the process in actions. See the examples below.\r\n * `asyncAction` can be used both as decorator or to wrap functions.\r\n *\r\n * - It is important that `asyncAction should always be used with a generator function (recognizable as `function*` or `*name` syntax)\r\n * - Each yield statement should return a Promise. The generator function will continue as soon as the promise settles, with the settled value\r\n * - When the generator function finishes, you can return a normal value. The `asyncAction` wrapped function will always produce a promise delivering that value.\r\n *\r\n * When using the mobx devTools, an asyncAction will emit `action` events with names like:\r\n * * `\"fetchUsers - runid: 6 - init\"`\r\n * * `\"fetchUsers - runid: 6 - yield 0\"`\r\n * * `\"fetchUsers - runid: 6 - yield 1\"`\r\n *\r\n * The `runId` represents the generator instance. In other words, if `fetchUsers` is invoked multiple times concurrently, the events with the same `runid` belong together.\r\n * The `yield` number indicates the progress of the generator. `init` indicates spawning (it won't do anything, but you can find the original arguments of the `asyncAction` here).\r\n * `yield 0` ... `yield n` indicates the code block that is now being executed. `yield 0` is before the first `yield`, `yield 1` after the first one etc. Note that yield numbers are not determined lexically but by the runtime flow.\r\n *\r\n * `asyncActions` requires `Promise` and `generators` to be available on the target environment. Polyfill `Promise` if needed. Both TypeScript and Babel can compile generator functions down to ES5.\r\n *\r\n *  N.B. due to a [babel limitation](https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy/issues/26), in Babel generatos cannot be combined with decorators. See also [#70](https://github.com/mobxjs/mobx-utils/issues/70)\r\n *\r\n *\r\n * @example\r\n * import {asyncAction} from \"mobx-utils\"\r\n *\r\n * let users = []\r\n *\r\n * const fetchUsers = asyncAction(\"fetchUsers\", function* (url) {\r\n *   const start = Date.now()\r\n *   const data = yield window.fetch(url)\r\n *   users = yield data.json()\r\n *   return start - Date.now()\r\n * })\r\n *\r\n * fetchUsers(\"http://users.com\").then(time => {\r\n *   console.dir(\"Got users\", users, \"in \", time, \"ms\")\r\n * })\r\n *\r\n * @example\r\n * import {asyncAction} from \"mobx-utils\"\r\n *\r\n * mobx.configure({ enforceActions: \"observed\" }) // don't allow state modifications outside actions\r\n *\r\n * class Store {\r\n * \t\\@observable githubProjects = []\r\n * \t\\@observable = \"pending\" // \"pending\" / \"done\" / \"error\"\r\n *\r\n * \t\\@asyncAction\r\n * \t*fetchProjects() { // <- note the star, this a generator function!\r\n * \t\tthis.githubProjects = []\r\n * \t\tthis.state = \"pending\"\r\n * \t\ttry {\r\n * \t\t\tconst projects = yield fetchGithubProjectsSomehow() // yield instead of await\r\n * \t\t\tconst filteredProjects = somePreprocessing(projects)\r\n * \t\t\t// the asynchronous blocks will automatically be wrapped actions\r\n * \t\t\tthis.state = \"done\"\r\n * \t\t\tthis.githubProjects = filteredProjects\r\n * \t\t} catch (error) {\r\n * \t\t\tthis.state = \"error\"\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @export\r\n * @returns {Promise}\r\n */\r\nfunction asyncAction(arg1, arg2) {\r\n    // decorator\r\n    if (typeof arguments[1] === \"string\") {\r\n        var name_1 = arguments[1];\r\n        var descriptor_1 = arguments[2];\r\n        if (descriptor_1 && descriptor_1.value) {\r\n            return Object.assign({}, descriptor_1, {\r\n                value: flow(descriptor_1.value),\r\n            });\r\n        }\r\n        else {\r\n            return Object.assign({}, descriptor_1, {\r\n                set: function (v) {\r\n                    Object.defineProperty(this, name_1, __assign$1(__assign$1({}, descriptor_1), { value: flow(v) }));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    // direct invocation\r\n    var generator = typeof arg1 === \"string\" ? arg2 : arg1;\r\n    var name = typeof arg1 === \"string\" ? arg1 : generator.name || \"<unnamed async action>\";\r\n    deprecated(\"asyncAction is deprecated. use mobx.flow instead\");\r\n    return flow(generator); // name get's dropped..\r\n}\n\n/**\r\n * _deprecated_ whenAsync is deprecated, use mobx.when without effect instead.\r\n *\r\n * Like normal `when`, except that this `when` will return a promise that resolves when the expression becomes truthy\r\n *\r\n * @example\r\n * await whenAsync(() => !state.someBoolean)\r\n *\r\n * @export\r\n * @param {() => boolean} fn see when, the expression to await\r\n * @param {number} timeout maximum amount of time to wait, before the promise rejects\r\n * @returns Promise for when an observable eventually matches some condition. Rejects if timeout is provided and has expired\r\n */\r\nfunction whenAsync(fn, timeout) {\r\n    if (timeout === void 0) { timeout = 0; }\r\n    deprecated(\"whenAsync is deprecated, use mobx.when without effect instead\");\r\n    return when(fn, {\r\n        timeout: timeout,\r\n    });\r\n}\n\n/**\r\n * expr can be used to create temporarily views inside views.\r\n * This can be improved to improve performance if a value changes often, but usually doesn't affect the outcome of an expression.\r\n *\r\n * In the following example the expression prevents that a component is rerender _each time_ the selection changes;\r\n * instead it will only rerenders when the current todo is (de)selected.\r\n *\r\n * @example\r\n * const Todo = observer((props) => {\r\n *     const todo = props.todo;\r\n *     const isSelected = mobxUtils.expr(() => props.viewState.selection === todo);\r\n *     return <div className={isSelected ? \"todo todo-selected\" : \"todo\"}>{todo.title}</div>\r\n * });\r\n *\r\n */\r\nfunction expr(expr) {\r\n    if (!_isComputingDerivation())\r\n        console.warn(\"'expr' should only be used inside other reactive functions.\");\r\n    // optimization: would be more efficient if the expr itself wouldn't be evaluated first on the next change, but just a 'changed' signal would be fired\r\n    return computed(expr).get();\r\n}\n\nvar __assign$2 = (undefined && undefined.__assign) || function () {\r\n    __assign$2 = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$2.apply(this, arguments);\r\n};\r\nvar memoizationId = 0;\r\nfunction createTransformer(transformer, arg2) {\r\n    invariant(typeof transformer === \"function\" && transformer.length < 2, \"createTransformer expects a function that accepts one argument\");\r\n    // Memoizes: object id -> reactive view that applies transformer to the object\r\n    var views = {};\r\n    var onCleanup = undefined;\r\n    var keepAlive = false;\r\n    var debugNameGenerator = undefined;\r\n    if (typeof arg2 === \"object\") {\r\n        onCleanup = arg2.onCleanup;\r\n        keepAlive = arg2.keepAlive !== undefined ? arg2.keepAlive : false;\r\n        debugNameGenerator = arg2.debugNameGenerator;\r\n    }\r\n    else if (typeof arg2 === \"function\") {\r\n        onCleanup = arg2;\r\n    }\r\n    function createView(sourceIdentifier, sourceObject) {\r\n        var latestValue;\r\n        var computedValueOptions = {};\r\n        if (typeof arg2 === \"object\") {\r\n            onCleanup = arg2.onCleanup;\r\n            debugNameGenerator = arg2.debugNameGenerator;\r\n            computedValueOptions = arg2;\r\n        }\r\n        else if (typeof arg2 === \"function\") {\r\n            onCleanup = arg2;\r\n        }\r\n        else {\r\n            onCleanup = undefined;\r\n            debugNameGenerator = undefined;\r\n        }\r\n        var prettifiedName = debugNameGenerator\r\n            ? debugNameGenerator(sourceObject)\r\n            : \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier;\r\n        var expr = computed(function () {\r\n            return (latestValue = transformer(sourceObject));\r\n        }, __assign$2(__assign$2({}, computedValueOptions), { name: prettifiedName }));\r\n        if (!keepAlive) {\r\n            var disposer_1 = onBecomeUnobserved(expr, function () {\r\n                delete views[sourceIdentifier];\r\n                disposer_1();\r\n                if (onCleanup)\r\n                    onCleanup(latestValue, sourceObject);\r\n            });\r\n        }\r\n        return expr;\r\n    }\r\n    var memoWarned = false;\r\n    return function (object) {\r\n        var identifier = getMemoizationId(object);\r\n        var reactiveView = views[identifier];\r\n        if (reactiveView)\r\n            return reactiveView.get();\r\n        if (!keepAlive && !_isComputingDerivation()) {\r\n            if (!memoWarned) {\r\n                console.warn(\"invoking a transformer from outside a reactive context won't memorized \" +\r\n                    \"and is cleaned up immediately, unless keepAlive is set\");\r\n                memoWarned = true;\r\n            }\r\n            var value = transformer(object);\r\n            if (onCleanup)\r\n                onCleanup(value, object);\r\n            return value;\r\n        }\r\n        // Not in cache; create a reactive view\r\n        reactiveView = views[identifier] = createView(identifier, object);\r\n        return reactiveView.get();\r\n    };\r\n}\r\nfunction getMemoizationId(object) {\r\n    var objectType = typeof object;\r\n    if (objectType === \"string\")\r\n        return \"string:\" + object;\r\n    if (objectType === \"number\")\r\n        return \"number:\" + object;\r\n    if (object === null || (objectType !== \"object\" && objectType !== \"function\"))\r\n        throw new Error(\"[mobx-utils] transform expected an object, function, string or number, got: \" + String(object));\r\n    var tid = object.$transformId;\r\n    if (tid === undefined) {\r\n        tid = \"memoizationId:\" + ++memoizationId;\r\n        addHiddenProp(object, \"$transformId\", tid);\r\n    }\r\n    return tid;\r\n}\n\nfunction buildPath(entry) {\r\n    if (!entry)\r\n        return \"ROOT\";\r\n    var res = [];\r\n    while (entry.parent) {\r\n        res.push(entry.path);\r\n        entry = entry.parent;\r\n    }\r\n    return res.reverse().join(\"/\");\r\n}\r\nfunction isRecursivelyObservable(thing) {\r\n    return isObservableObject(thing) || isObservableArray(thing) || isObservableMap(thing);\r\n}\r\n/**\r\n * Given an object, deeply observes the given object.\r\n * It is like `observe` from mobx, but applied recursively, including all future children.\r\n *\r\n * Note that the given object cannot ever contain cycles and should be a tree.\r\n *\r\n * As benefit: path and root will be provided in the callback, so the signature of the listener is\r\n * (change, path, root) => void\r\n *\r\n * The returned disposer can be invoked to clean up the listener\r\n *\r\n * deepObserve cannot be used on computed values.\r\n *\r\n * @example\r\n * const disposer = deepObserve(target, (change, path) => {\r\n *    console.dir(change)\r\n * })\r\n */\r\nfunction deepObserve(target, listener) {\r\n    var entrySet = new WeakMap();\r\n    function genericListener(change) {\r\n        var entry = entrySet.get(change.object);\r\n        processChange(change, entry);\r\n        listener(change, buildPath(entry), target);\r\n    }\r\n    function processChange(change, parent) {\r\n        switch (change.type) {\r\n            // Object changes\r\n            case \"add\": // also for map\r\n                observeRecursively(change.newValue, parent, change.name);\r\n                break;\r\n            case \"update\": // also for array and map\r\n                unobserveRecursively(change.oldValue);\r\n                observeRecursively(change.newValue, parent, change.name || \"\" + change.index);\r\n                break;\r\n            case \"remove\": // object\r\n            case \"delete\": // map\r\n                unobserveRecursively(change.oldValue);\r\n                break;\r\n            // Array changes\r\n            case \"splice\":\r\n                change.removed.map(unobserveRecursively);\r\n                change.added.forEach(function (value, idx) {\r\n                    return observeRecursively(value, parent, \"\" + (change.index + idx));\r\n                });\r\n                // update paths\r\n                for (var i = change.index + change.addedCount; i < change.object.length; i++) {\r\n                    if (isRecursivelyObservable(change.object[i])) {\r\n                        var entry = entrySet.get(change.object[i]);\r\n                        if (entry)\r\n                            entry.path = \"\" + i;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    function observeRecursively(thing, parent, path) {\r\n        if (isRecursivelyObservable(thing)) {\r\n            var entry = entrySet.get(thing);\r\n            if (entry) {\r\n                if (entry.parent !== parent || entry.path !== path)\r\n                    // MWE: this constraint is artificial, and this tool could be made to work with cycles,\r\n                    // but it increases administration complexity, has tricky edge cases and the meaning of 'path'\r\n                    // would become less clear. So doesn't seem to be needed for now\r\n                    throw new Error(\"The same observable object cannot appear twice in the same tree,\" +\r\n                        (\" trying to assign it to '\" + buildPath(parent) + \"/\" + path + \"',\") +\r\n                        (\" but it already exists at '\" + buildPath(entry.parent) + \"/\" + entry.path + \"'\"));\r\n            }\r\n            else {\r\n                var entry_1 = {\r\n                    parent: parent,\r\n                    path: path,\r\n                    dispose: observe(thing, genericListener),\r\n                };\r\n                entrySet.set(thing, entry_1);\r\n                entries(thing).forEach(function (_a) {\r\n                    var key = _a[0], value = _a[1];\r\n                    return observeRecursively(value, entry_1, key);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    function unobserveRecursively(thing) {\r\n        if (isRecursivelyObservable(thing)) {\r\n            var entry = entrySet.get(thing);\r\n            if (!entry)\r\n                return;\r\n            entrySet.delete(thing);\r\n            entry.dispose();\r\n            values(thing).forEach(unobserveRecursively);\r\n        }\r\n    }\r\n    observeRecursively(target, undefined, \"\");\r\n    return function () {\r\n        unobserveRecursively(target);\r\n    };\r\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * Reactively sorts a base observable array into multiple observable arrays based on the value of a\r\n * `groupBy: (item: T) => G` function.\r\n *\r\n * This observes the individual computed groupBy values and only updates the source and dest arrays\r\n * when there is an actual change, so this is far more efficient than, for example\r\n * `base.filter(i => groupBy(i) === 'we')`. Call #dispose() to stop tracking.\r\n *\r\n * No guarantees are made about the order of items in the grouped arrays.\r\n *\r\n * The resulting map of arrays is read-only. clear(), set(), delete() are not supported and\r\n * modifying the group arrays will lead to undefined behavior.\r\n *\r\n * NB: ObservableGroupMap relies on `Symbol`s. If you are targeting a platform which doesn't\r\n * support these natively, you will need to provide a polyfill.\r\n *\r\n * @param {array} base The array to sort into groups.\r\n * @param {function} groupBy The function used for grouping.\r\n * @param options Object with properties:\r\n *  `name`: Debug name of this ObservableGroupMap.\r\n *  `keyToName`: Function to create the debug names of the observable group arrays.\r\n *\r\n * @example\r\n * const slices = observable([\r\n *     { day: \"mo\", hours: 12 },\r\n *     { day: \"tu\", hours: 2 },\r\n * ])\r\n * const slicesByDay = new ObservableGroupMap(slices, (slice) => slice.day)\r\n * autorun(() => console.log(\r\n *     slicesByDay.get(\"mo\")?.length ?? 0,\r\n *     slicesByDay.get(\"we\"))) // outputs 1, undefined\r\n * slices[0].day = \"we\" // outputs 0, [{ day: \"we\", hours: 12 }]\r\n */\r\nvar ObservableGroupMap = /** @class */ (function (_super) {\r\n    __extends(ObservableGroupMap, _super);\r\n    function ObservableGroupMap(base, groupBy, _a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.name, name = _c === void 0 ? \"ogm\" + ((Math.random() * 1000) | 0) : _c, _d = _b.keyToName, keyToName = _d === void 0 ? function (x) { return \"\" + x; } : _d;\r\n        var _this = _super.call(this) || this;\r\n        _this._keyToName = keyToName;\r\n        _this._groupBy = groupBy;\r\n        _this._ogmInfoKey = Symbol(\"ogmInfo\" + name);\r\n        _this._base = base;\r\n        for (var i = 0; i < base.length; i++) {\r\n            _this._addItem(base[i]);\r\n        }\r\n        _this._disposeBaseObserver = observe(_this._base, function (change) {\r\n            if (\"splice\" === change.type) {\r\n                transaction(function () {\r\n                    for (var _i = 0, _a = change.removed; _i < _a.length; _i++) {\r\n                        var removed = _a[_i];\r\n                        _this._removeItem(removed);\r\n                    }\r\n                    for (var _b = 0, _c = change.added; _b < _c.length; _b++) {\r\n                        var added = _c[_b];\r\n                        _this._addItem(added);\r\n                    }\r\n                });\r\n            }\r\n            else if (\"update\" === change.type) {\r\n                transaction(function () {\r\n                    _this._removeItem(change.oldValue);\r\n                    _this._addItem(change.newValue);\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(\"illegal state\");\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    ObservableGroupMap.prototype.clear = function () {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    ObservableGroupMap.prototype.delete = function (_key) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    ObservableGroupMap.prototype.set = function (_key, _value) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    /**\r\n     * Disposes all observers created during construction and removes state added to base array\r\n     * items.\r\n     */\r\n    ObservableGroupMap.prototype.dispose = function () {\r\n        this._disposeBaseObserver();\r\n        for (var i = 0; i < this._base.length; i++) {\r\n            var item = this._base[i];\r\n            var grouperItemInfo = item[this._ogmInfoKey];\r\n            grouperItemInfo.reaction();\r\n            delete item[this._ogmInfoKey];\r\n        }\r\n    };\r\n    ObservableGroupMap.prototype._getGroupArr = function (key) {\r\n        var result = _super.prototype.get.call(this, key);\r\n        if (undefined === result) {\r\n            result = observable([], { name: \"GroupArray[\" + this._keyToName(key) + \"]\", deep: false });\r\n            _super.prototype.set.call(this, key, result);\r\n        }\r\n        return result;\r\n    };\r\n    ObservableGroupMap.prototype._removeFromGroupArr = function (key, itemIndex) {\r\n        var arr = _super.prototype.get.call(this, key);\r\n        if (1 === arr.length) {\r\n            _super.prototype.delete.call(this, key);\r\n        }\r\n        else if (itemIndex === arr.length - 1) {\r\n            // last position in array\r\n            arr.length--;\r\n        }\r\n        else {\r\n            arr[itemIndex] = arr[arr.length - 1];\r\n            arr[itemIndex][this._ogmInfoKey].groupArrIndex = itemIndex;\r\n            arr.length--;\r\n        }\r\n    };\r\n    ObservableGroupMap.prototype._addItem = function (item) {\r\n        var _this = this;\r\n        var groupByValue = this._groupBy(item);\r\n        var groupArr = this._getGroupArr(groupByValue);\r\n        var value = {\r\n            groupByValue: groupByValue,\r\n            groupArrIndex: groupArr.length,\r\n            reaction: reaction(function () { return _this._groupBy(item); }, function (newGroupByValue, _r) {\r\n                var grouperItemInfo = item[_this._ogmInfoKey];\r\n                _this._removeFromGroupArr(grouperItemInfo.groupByValue, grouperItemInfo.groupArrIndex);\r\n                var newGroupArr = _this._getGroupArr(newGroupByValue);\r\n                var newGroupArrIndex = newGroupArr.length;\r\n                newGroupArr.push(item);\r\n                grouperItemInfo.groupByValue = newGroupByValue;\r\n                grouperItemInfo.groupArrIndex = newGroupArrIndex;\r\n            }),\r\n        };\r\n        Object.defineProperty(item, this._ogmInfoKey, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            value: value,\r\n        });\r\n        groupArr.push(item);\r\n    };\r\n    ObservableGroupMap.prototype._removeItem = function (item) {\r\n        var grouperItemInfo = item[this._ogmInfoKey];\r\n        this._removeFromGroupArr(grouperItemInfo.groupByValue, grouperItemInfo.groupArrIndex);\r\n        grouperItemInfo.reaction();\r\n        delete item[this._ogmInfoKey];\r\n    };\r\n    return ObservableGroupMap;\r\n}(ObservableMap));\n\n/**\r\n * @private\r\n */\r\nvar DeepMapEntry = /** @class */ (function () {\r\n    function DeepMapEntry(base, args) {\r\n        this.base = base;\r\n        this.args = args;\r\n        this.closestIdx = 0;\r\n        this.isDisposed = false;\r\n        var current = (this.closest = this.root = base);\r\n        var i = 0;\r\n        for (; i < this.args.length - 1; i++) {\r\n            current = current.get(args[i]);\r\n            if (current)\r\n                this.closest = current;\r\n            else\r\n                break;\r\n        }\r\n        this.closestIdx = i;\r\n    }\r\n    DeepMapEntry.prototype.exists = function () {\r\n        this.assertNotDisposed();\r\n        var l = this.args.length;\r\n        return this.closestIdx >= l - 1 && this.closest.has(this.args[l - 1]);\r\n    };\r\n    DeepMapEntry.prototype.get = function () {\r\n        this.assertNotDisposed();\r\n        if (!this.exists())\r\n            throw new Error(\"Entry doesn't exist\");\r\n        return this.closest.get(this.args[this.args.length - 1]);\r\n    };\r\n    DeepMapEntry.prototype.set = function (value) {\r\n        this.assertNotDisposed();\r\n        var l = this.args.length;\r\n        var current = this.closest;\r\n        // create remaining maps\r\n        for (var i = this.closestIdx; i < l - 1; i++) {\r\n            var m = new Map();\r\n            current.set(this.args[i], m);\r\n            current = m;\r\n        }\r\n        this.closestIdx = l - 1;\r\n        this.closest = current;\r\n        current.set(this.args[l - 1], value);\r\n    };\r\n    DeepMapEntry.prototype.delete = function () {\r\n        this.assertNotDisposed();\r\n        if (!this.exists())\r\n            throw new Error(\"Entry doesn't exist\");\r\n        var l = this.args.length;\r\n        this.closest.delete(this.args[l - 1]);\r\n        // clean up remaining maps if needed (reconstruct stack first)\r\n        var c = this.root;\r\n        var maps = [c];\r\n        for (var i = 0; i < l - 1; i++) {\r\n            c = c.get(this.args[i]);\r\n            maps.push(c);\r\n        }\r\n        for (var i = maps.length - 1; i > 0; i--) {\r\n            if (maps[i].size === 0)\r\n                maps[i - 1].delete(this.args[i - 1]);\r\n        }\r\n        this.isDisposed = true;\r\n    };\r\n    DeepMapEntry.prototype.assertNotDisposed = function () {\r\n        // TODO: once this becomes annoying, we should introduce a reset method to re-run the constructor logic\r\n        if (this.isDisposed)\r\n            throw new Error(\"Concurrent modification exception\");\r\n    };\r\n    return DeepMapEntry;\r\n}());\r\n/**\r\n * @private\r\n */\r\nvar DeepMap = /** @class */ (function () {\r\n    function DeepMap() {\r\n        this.store = new Map();\r\n        this.argsLength = -1;\r\n    }\r\n    DeepMap.prototype.entry = function (args) {\r\n        if (this.argsLength === -1)\r\n            this.argsLength = args.length;\r\n        else if (this.argsLength !== args.length)\r\n            throw new Error(\"DeepMap should be used with functions with a consistent length, expected: \" + this.argsLength + \", got: \" + args.length);\r\n        if (this.last)\r\n            this.last.isDisposed = true;\r\n        return (this.last = new DeepMapEntry(this.store, args));\r\n    };\r\n    return DeepMap;\r\n}());\n\nvar __assign$3 = (undefined && undefined.__assign) || function () {\r\n    __assign$3 = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$3.apply(this, arguments);\r\n};\r\n/**\r\n * computedFn takes a function with an arbitrary amount of arguments,\r\n * and memoizes the output of the function based on the arguments passed in.\r\n *\r\n * computedFn(fn) returns a function with the very same signature. There is no limit on the amount of arguments\r\n * that is accepted. However, the amount of arguments must be constant and default arguments are not supported.\r\n *\r\n * By default the output of a function call will only be memoized as long as the\r\n * output is being observed.\r\n *\r\n * The function passes into `computedFn` should be pure, not be an action and only be relying on\r\n * observables.\r\n *\r\n * Setting `keepAlive` to `true` will cause the output to be forcefully cached forever.\r\n * Note that this might introduce memory leaks!\r\n *\r\n * @example\r\n * const store = observable({\r\n    a: 1,\r\n    b: 2,\r\n    c: 3,\r\n    m: computedFn(function(x) {\r\n      return this.a * this.b * x\r\n    })\r\n  })\r\n\r\n  const d = autorun(() => {\r\n    // store.m(3) will be cached as long as this autorun is running\r\n    console.log(store.m(3) * store.c)\r\n  })\r\n *\r\n * @param fn\r\n * @param keepAliveOrOptions\r\n */\r\nfunction computedFn(fn, keepAliveOrOptions) {\r\n    if (keepAliveOrOptions === void 0) { keepAliveOrOptions = false; }\r\n    if (isAction(fn))\r\n        throw new Error(\"computedFn shouldn't be used on actions\");\r\n    var memoWarned = false;\r\n    var i = 0;\r\n    var opts = typeof keepAliveOrOptions === \"boolean\"\r\n        ? { keepAlive: keepAliveOrOptions }\r\n        : keepAliveOrOptions;\r\n    var d = new DeepMap();\r\n    return function () {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var entry = d.entry(args);\r\n        // cache hit, return\r\n        if (entry.exists())\r\n            return entry.get().get();\r\n        // if function is invoked, and its a cache miss without reactive, there is no point in caching...\r\n        if (!opts.keepAlive && !_isComputingDerivation()) {\r\n            if (!memoWarned) {\r\n                console.warn(\"invoking a computedFn from outside an reactive context won't be memoized, unless keepAlive is set\");\r\n                memoWarned = true;\r\n            }\r\n            return fn.apply(this, args);\r\n        }\r\n        // create new entry\r\n        var c = computed(function () {\r\n            return fn.apply(_this, args);\r\n        }, __assign$3(__assign$3({}, opts), { name: \"computedFn(\" + fn.name + \"#\" + ++i + \")\" }));\r\n        entry.set(c);\r\n        // clean up if no longer observed\r\n        if (!opts.keepAlive)\r\n            onBecomeUnobserved(c, function () {\r\n                d.entry(args).delete();\r\n            });\r\n        // return current val\r\n        return c.get();\r\n    };\r\n}\n\nfunction decorateMethodOrField(decoratorName, decorateFn, target, prop, descriptor) {\r\n    if (descriptor) {\r\n        return decorateMethod(decoratorName, decorateFn, prop, descriptor);\r\n    }\r\n    else {\r\n        decorateField(decorateFn, target, prop);\r\n    }\r\n}\r\nfunction decorateMethod(decoratorName, decorateFn, prop, descriptor) {\r\n    if (descriptor.get !== undefined) {\r\n        return fail(decoratorName + \" cannot be used with getters\");\r\n    }\r\n    // babel / typescript\r\n    // @action method() { }\r\n    if (descriptor.value) {\r\n        // typescript\r\n        return {\r\n            value: decorateFn(prop, descriptor.value),\r\n            enumerable: false,\r\n            configurable: true,\r\n            writable: true,\r\n        };\r\n    }\r\n    // babel only: @action method = () => {}\r\n    var initializer = descriptor.initializer;\r\n    return {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        initializer: function () {\r\n            // N.B: we can't immediately invoke initializer; this would be wrong\r\n            return decorateFn(prop, initializer.call(this));\r\n        },\r\n    };\r\n}\r\nfunction decorateField(decorateFn, target, prop) {\r\n    // Simple property that writes on first invocation to the current instance\r\n    Object.defineProperty(target, prop, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: function () {\r\n            return undefined;\r\n        },\r\n        set: function (value) {\r\n            addHiddenProp(this, prop, decorateFn(prop, value));\r\n        },\r\n    });\r\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar runId = 0;\r\nvar unfinishedIds = new Set();\r\nvar currentlyActiveIds = new Set();\r\nvar inOrderExecution;\r\n{\r\n    var taskOrderPromise_1 = Promise.resolve();\r\n    var queueMicrotaskPolyfill_1;\r\n    if (typeof queueMicrotask !== \"undefined\") {\r\n        // use real implementation if possible in modern browsers/node\r\n        queueMicrotaskPolyfill_1 = queueMicrotask;\r\n    }\r\n    else if (typeof process !== \"undefined\" && process.nextTick) {\r\n        // fallback to node's process.nextTick in node <= 10\r\n        queueMicrotaskPolyfill_1 = function (cb) {\r\n            process.nextTick(cb);\r\n        };\r\n    }\r\n    else {\r\n        // use setTimeout for old browsers\r\n        queueMicrotaskPolyfill_1 = function (cb) {\r\n            setTimeout(cb, 0);\r\n        };\r\n    }\r\n    var idle_1 = function () {\r\n        return new Promise(function (r) {\r\n            queueMicrotaskPolyfill_1(r);\r\n        });\r\n    };\r\n    // we use this trick to force a proper order of execution\r\n    // even for immediately resolved promises\r\n    inOrderExecution = function () {\r\n        taskOrderPromise_1 = taskOrderPromise_1.then(idle_1);\r\n        return taskOrderPromise_1;\r\n    };\r\n}\r\nvar actionAsyncContextStack = [];\r\nfunction task(value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ctx, runId, actionName, args, scope, actionRunInfo, step, nextStep, ret, err_1, actionRunInfo_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ctx = actionAsyncContextStack[actionAsyncContextStack.length - 1];\r\n                    if (!ctx) {\r\n                        fail$1(\"'actionAsync' context not present when running 'task'. did you await inside an 'actionAsync' without using 'task(promise)'? did you forget to await the task?\");\r\n                    }\r\n                    runId = ctx.runId, actionName = ctx.actionName, args = ctx.args, scope = ctx.scope, actionRunInfo = ctx.actionRunInfo, step = ctx.step;\r\n                    nextStep = step + 1;\r\n                    actionAsyncContextStack.pop();\r\n                    _endAction(actionRunInfo);\r\n                    currentlyActiveIds.delete(runId);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 4, 6, 7]);\r\n                    return [4 /*yield*/, value];\r\n                case 2:\r\n                    ret = _a.sent();\r\n                    return [4 /*yield*/, inOrderExecution()];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, ret];\r\n                case 4:\r\n                    err_1 = _a.sent();\r\n                    return [4 /*yield*/, inOrderExecution()];\r\n                case 5:\r\n                    _a.sent();\r\n                    throw err_1;\r\n                case 6:\r\n                    // only restart if it not a dangling promise (the action is not yet finished)\r\n                    if (unfinishedIds.has(runId)) {\r\n                        actionRunInfo_1 = _startAction(getActionAsyncName(actionName, runId, nextStep), this, args);\r\n                        actionAsyncContextStack.push({\r\n                            runId: runId,\r\n                            step: nextStep,\r\n                            actionRunInfo: actionRunInfo_1,\r\n                            actionName: actionName,\r\n                            args: args,\r\n                            scope: scope,\r\n                        });\r\n                        currentlyActiveIds.add(runId);\r\n                    }\r\n                    return [7 /*endfinally*/];\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// base\r\n/**\r\n * Alternative syntax for async actions, similar to `flow` but more compatible with\r\n * Typescript typings. Not to be confused with `asyncAction`, which is deprecated.\r\n *\r\n * `actionAsync` can be used either as a decorator or as a function.\r\n * It takes an async function that internally must use `await task(promise)` rather than\r\n * the standard `await promise`.\r\n *\r\n * When using the mobx devTools, an asyncAction will emit `action` events with names like:\r\n * * `\"fetchUsers - runid 6 - step 0\"`\r\n * * `\"fetchUsers - runid 6 - step 1\"`\r\n * * `\"fetchUsers - runid 6 - step 2\"`\r\n *\r\n * The `runId` represents the action instance. In other words, if `fetchUsers` is invoked\r\n * multiple times concurrently, the events with the same `runid` belong together.\r\n * The `step` number indicates the code block that is now being executed.\r\n *\r\n * @example\r\n * import {actionAsync, task} from \"mobx-utils\"\r\n *\r\n * let users = []\r\n *\r\n * const fetchUsers = actionAsync(\"fetchUsers\", async (url) => {\r\n *   const start = Date.now()\r\n *   // note the use of task when awaiting!\r\n *   const data = await task(window.fetch(url))\r\n *   users = await task(data.json())\r\n *   return start - Date.now()\r\n * })\r\n *\r\n * const time = await fetchUsers(\"http://users.com\")\r\n * console.log(\"Got users\", users, \"in \", time, \"ms\")\r\n *\r\n * @example\r\n * import {actionAsync, task} from \"mobx-utils\"\r\n *\r\n * mobx.configure({ enforceActions: \"observed\" }) // don't allow state modifications outside actions\r\n *\r\n * class Store {\r\n *   \\@observable githubProjects = []\r\n *   \\@observable = \"pending\" // \"pending\" / \"done\" / \"error\"\r\n *\r\n *   \\@actionAsync\r\n *   async fetchProjects() {\r\n *     this.githubProjects = []\r\n *     this.state = \"pending\"\r\n *     try {\r\n *       // note the use of task when awaiting!\r\n *       const projects = await task(fetchGithubProjectsSomehow())\r\n *       const filteredProjects = somePreprocessing(projects)\r\n *       // the asynchronous blocks will automatically be wrapped actions\r\n *       this.state = \"done\"\r\n *       this.githubProjects = filteredProjects\r\n *     } catch (error) {\r\n *        this.state = \"error\"\r\n *     }\r\n *   }\r\n * }\r\n */\r\nfunction actionAsync(arg1, arg2, arg3) {\r\n    // decorator\r\n    if (typeof arguments[1] === \"string\") {\r\n        return decorateMethodOrField(\"@actionAsync\", function (prop, v) {\r\n            return actionAsyncFn(prop, v);\r\n        }, arg1, arg2, arg3);\r\n    }\r\n    // direct invocation\r\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\r\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\r\n    return actionAsyncFn(actionName, fn);\r\n}\r\nfunction actionAsyncFn(actionName, fn) {\r\n    if (!_startAction || !_endAction) {\r\n        fail$1(\"'actionAsync' requires mobx >=5.13.1 or >=4.13.1\");\r\n    }\r\n    invariant(typeof fn === \"function\", \"'asyncAction' expects a function\");\r\n    if (typeof actionName !== \"string\" || !actionName)\r\n        fail$1(\"actions should have valid names, got: '\" + actionName + \"'\");\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nextRunId, actionRunInfo, finish, promise, ret, err_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        nextRunId = runId++;\r\n                        unfinishedIds.add(nextRunId);\r\n                        actionRunInfo = _startAction(getActionAsyncName(actionName, nextRunId, 0), this, args);\r\n                        actionAsyncContextStack.push({\r\n                            runId: nextRunId,\r\n                            step: 0,\r\n                            actionRunInfo: actionRunInfo,\r\n                            actionName: actionName,\r\n                            args: args,\r\n                            scope: this,\r\n                        });\r\n                        currentlyActiveIds.add(nextRunId);\r\n                        finish = function (err) {\r\n                            unfinishedIds.delete(nextRunId);\r\n                            var ctx = actionAsyncContextStack.pop();\r\n                            if (!ctx || ctx.runId !== nextRunId) {\r\n                                // push it back if invalid\r\n                                if (ctx) {\r\n                                    actionAsyncContextStack.push(ctx);\r\n                                }\r\n                                var msg = \"invalid 'actionAsync' context when finishing action '\" + actionName + \"'.\";\r\n                                if (!ctx) {\r\n                                    msg += \" no action context could be found instead.\";\r\n                                }\r\n                                else {\r\n                                    msg += \" an action context for '\" + ctx.actionName + \"' was found instead.\";\r\n                                }\r\n                                msg +=\r\n                                    \" did you await inside an 'actionAsync' without using 'task(promise)'? did you forget to await the task?\";\r\n                                fail$1(msg);\r\n                            }\r\n                            ctx.actionRunInfo.error = err;\r\n                            _endAction(ctx.actionRunInfo);\r\n                            currentlyActiveIds.delete(nextRunId);\r\n                            if (err) {\r\n                                throw err;\r\n                            }\r\n                        };\r\n                        try {\r\n                            promise = fn.apply(this, args);\r\n                        }\r\n                        catch (err) {\r\n                            finish(err);\r\n                        }\r\n                        // are we done sync? (no task run)\r\n                        if (currentlyActiveIds.has(nextRunId)) {\r\n                            finish(undefined);\r\n                            return [2 /*return*/, promise];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, promise];\r\n                    case 2:\r\n                        ret = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        err_2 = _a.sent();\r\n                        finish(err_2);\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        finish(undefined);\r\n                        return [2 /*return*/, ret];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\nfunction getActionAsyncName(actionName, runId, step) {\r\n    return actionName + \" - runid \" + runId + \" - step \" + step;\r\n}\n\nexport { FULFILLED, IDENTITY, NOOP, ObservableGroupMap, PENDING, REJECTED, ViewModel, actionAsync, addHiddenProp, asyncAction, chunkProcessor, computedFn, createTransformer, createViewModel, deepObserve, deprecated, expr, fail$1 as fail, fromPromise, fromResource, fromStream, getAllMethodsAndProperties, invariant, isPromiseBasedObservable, keepAlive, lazyObservable, moveItem, now, queueProcessor, task, toStream, whenAsync, whenWithTimeout };\n", "import { debounce, isEqual, last, cloneDeep } from 'lodash-es'\nimport { deepObserve, IDisposer } from 'mobx-utils'\nimport LogicFlow from '..'\nimport { GraphModel } from '../model'\nimport { EventType } from '../constant'\nimport EventEmitter from '../event/eventEmitter'\n\nimport GraphData = LogicFlow.GraphData\n\nexport class History {\n  undos: GraphData[] = []\n  redos: GraphData[] = []\n  callbacks = []\n  stopWatch: IDisposer | null = null\n  curData: GraphData | null = null\n  maxSize = 50\n  // 发生数据变化后，最多再等500ms，把距离上次的数据变更存储起来。\n  // 所以waitTime值越小，History对数据变化越敏感，存的undos就越细。\n  waitTime = 100\n  eventCenter: EventEmitter\n\n  constructor(eventCenter: EventEmitter) {\n    this.eventCenter = eventCenter\n  }\n\n  add(data: GraphData) {\n    if (isEqual(last(this.undos), data)) return\n    this.undos.push(data)\n    // 因为undo的时候，会触发add.\n    // 所以需要区分这个add是undo触发的，还是用户正常操作触发的。\n    // 如果是用户正常操作触发的，需要清空redos\n    if (!isEqual(this.curData, data)) {\n      this.redos = []\n    }\n    this.eventCenter.emit(EventType.HISTORY_CHANGE, {\n      data: {\n        undos: this.undos,\n        redos: this.redos,\n        undoAble: this.undoAble(),\n        redoAble: this.redoAble(),\n      },\n    })\n    if (this.undos.length > this.maxSize) {\n      this.undos.shift()\n    }\n  }\n\n  undoAble() {\n    // undos栈顶就是当前图渲染出来的数据。\n    return this.undos.length > 1\n  }\n\n  // 1) undo方法触发\n  // 2) graphModel重新渲染nodes和edges\n  // 3) graphModel发生变化，触发watch\n  // 4) watch触发add\n  undo() {\n    if (!this.undoAble()) return\n    const preData = this.undos.pop()!\n    this.redos.push(preData)\n    const curData = this.undos.pop()!\n    this.curData = cloneDeep(curData)\n    return curData\n  }\n\n  redoAble() {\n    return this.redos.length > 0\n  }\n\n  redo() {\n    if (!this.redoAble()) return\n    const curData = this.redos.pop()!\n    this.curData = cloneDeep(curData)\n    return curData\n  }\n\n  watch(model: GraphModel) {\n    this.stopWatch && this.stopWatch()\n\n    // 把当前watch的model转换一下数据存起来，无需清空redos。\n    this.undos.push(model.modelToGraphData())\n\n    this.stopWatch = deepObserve(\n      // TODO：避免用户触发「The same observable object cannot appear twice in the same tree」 错误\n      // 例如：在自定义节点的 setAttributes 方法中，将 nodeModel 属性赋值给另一个 observable 属性\n      // eg:\n      // setAttributes() {\n      //   this.width = 120\n      //   this.height = 50\n      //\n      //   if (this.text) {\n      //     this.properties.text = this.text;\n      //     this.text.value = '';\n      //   }\n      // }\n      // 解决方案：使用 cloneDeep 方法，将 observable 对象克隆一份。需要测试下面操作是否会造成其它问题\n      // https://stackoverflow.com/questions/55328504/a-node-cannot-exists-twice-in-the-state-tree-mobx-state-tree\n      // cloneDeep(model),\n      model,\n      debounce(() => {\n        // 数据变更后，把最新的当前model数据存起来，并清空 redos。\n        // 因为这个回调函数的触发，一般是用户交互而引起的，所以按正常逻辑需要清空 redos。\n        const data = model.modelToHistoryData()\n        if (data) {\n          this.add({ ...data })\n        }\n      }, this.waitTime),\n    )\n  }\n}\n\nexport default History\n", "import LogicFlow from '../LogicFlow'\nimport GraphModel from '../model/GraphModel'\n\nimport NodeData = LogicFlow.NodeData\nimport EdgeData = LogicFlow.EdgeData\n\nlet selected: LogicFlow.GraphData | null = null\n\nfunction translationNodeData(nodeData: NodeData, distance: number) {\n  nodeData.x += distance\n  nodeData.y += distance\n  if (nodeData.text) {\n    nodeData.text.x += distance\n    nodeData.text.y += distance\n  }\n  return nodeData\n}\n\nfunction translationEdgeData(edgeData: EdgeData, distance: number) {\n  if (edgeData.startPoint) {\n    edgeData.startPoint.x += distance\n    edgeData.startPoint.y += distance\n  }\n  if (edgeData.endPoint) {\n    edgeData.endPoint.x += distance\n    edgeData.endPoint.y += distance\n  }\n  if (edgeData.pointsList && edgeData.pointsList.length > 0) {\n    edgeData.pointsList.forEach((point) => {\n      point.x += distance\n      point.y += distance\n    })\n  }\n  if (edgeData.text) {\n    edgeData.text.x += distance\n    edgeData.text.y += distance\n  }\n  return edgeData\n}\n\nconst TRANSLATION_DISTANCE = 40\nlet CHILDREN_TRANSLATION_DISTANCE = 40\n\nexport function initDefaultShortcut(lf: LogicFlow, graph: GraphModel) {\n  const { keyboard } = lf\n  const {\n    options: { keyboard: keyboardOptions },\n  } = keyboard\n\n  // 复制\n  keyboard.on(['cmd + c', 'ctrl + c'], () => {\n    CHILDREN_TRANSLATION_DISTANCE = TRANSLATION_DISTANCE\n    if (!keyboardOptions?.enabled) return true\n    if (graph.textEditElement) return true\n    const { guards } = lf.options\n    const elements = graph.getSelectElements(false)\n    const enabledClone =\n      guards && guards.beforeClone ? guards.beforeClone(elements) : true\n    if (\n      !enabledClone ||\n      (elements.nodes.length === 0 && elements.edges.length === 0)\n    ) {\n      selected = null\n      return true\n    }\n    selected = elements\n    selected.nodes.forEach((node) =>\n      translationNodeData(node, TRANSLATION_DISTANCE),\n    )\n    selected.edges.forEach((edge) =>\n      translationEdgeData(edge, TRANSLATION_DISTANCE),\n    )\n    return false\n  })\n  // 粘贴\n  keyboard.on(['cmd + v', 'ctrl + v'], () => {\n    if (!keyboardOptions?.enabled) return true\n    if (graph.textEditElement) return true\n    if (selected && (selected.nodes || selected.edges)) {\n      lf.clearSelectElements()\n      const addElements = lf.addElements(\n        selected,\n        CHILDREN_TRANSLATION_DISTANCE,\n      )\n      if (!addElements) return true\n      addElements.nodes.forEach((node) => lf.selectElementById(node.id, true))\n      addElements.edges.forEach((edge) => lf.selectElementById(edge.id, true))\n      selected.nodes.forEach((node) =>\n        translationNodeData(node, TRANSLATION_DISTANCE),\n      )\n      selected.edges.forEach((edge) =>\n        translationEdgeData(edge, TRANSLATION_DISTANCE),\n      )\n      CHILDREN_TRANSLATION_DISTANCE =\n        CHILDREN_TRANSLATION_DISTANCE + TRANSLATION_DISTANCE\n    }\n    return false\n  })\n  // undo\n  keyboard.on(['cmd + z', 'ctrl + z'], () => {\n    if (!keyboardOptions?.enabled) return true\n    if (graph.textEditElement) return true\n    lf.undo()\n    return false\n  })\n  // redo\n  keyboard.on(['cmd + y', 'ctrl + y'], () => {\n    if (!keyboardOptions?.enabled) return true\n    if (graph.textEditElement) return true\n    lf.redo()\n    return false\n  })\n  // delete\n  keyboard.on(['backspace'], () => {\n    if (!keyboardOptions?.enabled) return true\n    if (graph.textEditElement) return true\n    const elements = graph.getSelectElements(true)\n    lf.clearSelectElements()\n    elements.edges.forEach((edge) => edge.id && lf.deleteEdge(edge.id))\n    elements.nodes.forEach((node) => node.id && lf.deleteNode(node.id))\n    return false\n  })\n}\n", "import { ComponentType, createElement as h, render } from 'preact/compat'\nimport { cloneDeep, forEach, indexOf } from 'lodash-es'\nimport { observer } from '.'\nimport { Options as LFOptions } from './options'\nimport * as _Model from './model'\nimport {\n  BaseEdgeModel,\n  BaseNodeModel,\n  EditConfigInterface,\n  GraphModel,\n  SnaplineModel,\n  ZoomParamType,\n} from './model'\n\nimport Graph from './view/Graph'\nimport * as _View from './view'\nimport { formatData } from './util'\n\nimport Dnd from './view/behavior/dnd'\nimport Tool from './tool/tool'\nimport { snapline } from './tool'\nimport Keyboard from './keyboard'\nimport History from './history'\nimport { EventCallback, CallbackArgs, EventArgs } from './event/eventEmitter'\nimport { ElementType, EventType, SegmentDirection } from './constant'\nimport { initDefaultShortcut } from './keyboard/shortcut'\n\nimport Extension = LogicFlow.Extension\nimport ExtensionConfig = LogicFlow.ExtensionConfig\nimport ExtensionConstructor = LogicFlow.ExtensionConstructor\nimport GraphConfigData = LogicFlow.GraphConfigData\nimport NodeConfig = LogicFlow.NodeConfig\nimport EdgeConfig = LogicFlow.EdgeConfig\nimport GraphData = LogicFlow.GraphData\nimport NodeData = LogicFlow.NodeData\nimport EdgeData = LogicFlow.EdgeData\nimport RegisterConfig = LogicFlow.RegisterConfig\nimport RegisterParam = LogicFlow.RegisterParam\nimport GraphElements = LogicFlow.GraphElements\nimport Position = LogicFlow.Position\nimport PointTuple = LogicFlow.PointTuple\nimport ExtensionRenderFunc = LogicFlow.ExtensionRenderFunc\nimport RegisterElementFunc = LogicFlow.RegisterElementFunc\nimport PropertiesType = LogicFlow.PropertiesType\nimport BaseNodeModelCtor = LogicFlow.BaseNodeModelCtor\nimport ClientPosition = LogicFlow.ClientPosition\nimport ExtensionDefinition = LogicFlow.ExtensionDefinition\nimport ExtensionType = LogicFlow.ExtensionType\n\nconst pluginFlag = Symbol('plugin registered by Logicflow.use')\n\nexport class LogicFlow {\n  // 只读：logicflow实例挂载的容器。\n  readonly container: HTMLElement\n  // 只读：logicflow实例的配置\n  readonly options: LFOptions.Definition\n  // 只读：控制整个 LogicFlow 画布的model\n  readonly graphModel: GraphModel\n\n  viewMap: Map<string, ComponentType> = new Map()\n  history: History\n  keyboard: Keyboard\n  dnd: Dnd\n  tool: Tool\n  snaplineModel?: SnaplineModel\n\n  components: ExtensionRenderFunc[] = []\n  // 个性配置的插件，覆盖全局配置的插件\n  readonly plugins: ExtensionType[]\n  // 全局配置的插件，所有的LogicFlow示例都会使用\n  static extensions: Map<string, ExtensionConfig> = new Map()\n  // 插件扩展方法\n  extension: Record<string, Extension | ExtensionDefinition> = {}\n\n  readonly width?: number // 只读：画布宽度\n  readonly height?: number // 只读：画布高度\n  /**\n   * 自定义数据转换方法\n   * 当接入系统格式和 LogicFlow 数据格式不一致时，可自定义此方法来进行数据格式转换\n   * 详情请参考 adapter docs\n   * 包括 adapterIn 和 adapterOut 两个方法\n   */\n  // TODO: 如何让用户执行时定义下面方法参数和返回值的类型\n  adapterIn?: (data: unknown) => GraphData\n  adapterOut?: (data: GraphData, ...rest: any) => unknown;\n\n  // 支持插件在 LogicFlow 实例上增加自定义方法\n  [propName: string]: any\n\n  private initContainer(\n    container: HTMLElement | HTMLDivElement,\n    width?: number,\n    height?: number,\n  ) {\n    // TODO: 确认是否需要，后续是否只要返回 container 即可（下面方法是为了解决事件绑定问题的）\n    // fix: destroy keyboard events while destroy LogicFlow.(#1110)\n    const lfContainer = document.createElement('div')\n    lfContainer.style.position = 'relative'\n    lfContainer.style.width = width ? `${width}px` : '100%'\n    lfContainer.style.height = height ? `${height}px` : '100%'\n    container.innerHTML = ''\n    container.appendChild(lfContainer)\n    return lfContainer\n  }\n\n  protected get [Symbol.toStringTag]() {\n    return LogicFlow.toStringTag\n  }\n\n  constructor(options: LFOptions.Common) {\n    const initOptions = LFOptions.get(options)\n    const { container, width, height } = initOptions\n    this.options = initOptions\n    this.container = this.initContainer(container, width, height)\n    this.graphModel = new GraphModel({\n      ...initOptions,\n      container: this.container, // TODO：测试该部分是否会有问题\n    })\n\n    this.plugins = initOptions.plugins ?? []\n\n    const { eventCenter } = this.graphModel\n    this.tool = new Tool(this)\n    this.dnd = new Dnd({ lf: this })\n    this.history = new History(eventCenter)\n    this.keyboard = new Keyboard({\n      lf: this,\n      keyboard: initOptions.keyboard,\n    })\n\n    if (initOptions.snapline !== false) {\n      this.snaplineModel = new SnaplineModel(this.graphModel)\n      snapline(eventCenter, this.snaplineModel)\n    }\n    if (!initOptions.isSilentMode) {\n      // 先初始化默认内置快捷键，自定义快捷键可以覆盖默认快捷键\n      initDefaultShortcut(this, this.graphModel)\n      // 然后再初始化自定义快捷键，自定义快捷键可以覆盖默认快捷键.\n      // 插件最后初始化。方便插件强制覆盖内置快捷键\n      this.keyboard.initShortcuts()\n    }\n\n    this.defaultRegister()\n    this.installPlugins(initOptions.disabledPlugins)\n  }\n\n  /*********************************************************\n   * Register 相关\n   ********************************************************/\n  private setView = (type: string, component: ComponentType) =>\n    this.viewMap.set(type, component)\n  // 根据 type 获取对应的 view\n  private getView = (type: string): ComponentType | undefined =>\n    this.viewMap.get(type)\n\n  // register 方法重载\n  register(element: RegisterConfig): void\n  register(\n    type: string,\n    fn: RegisterElementFunc,\n    isObserverView?: boolean,\n  ): void\n  /**\n   * 注册自定义节点和边\n   * 支持两种方式\n   * 方式一（推荐）\n   * 详情见 todo: docs link\n   * @example\n   * import { RectNode, RectModel } from '@logicflow/core'\n   * class CustomView extends RectNode {\n   * }\n   * class CustomModel extends RectModel {\n   * }\n   * lf.register({\n   *   type: 'custom',\n   *   view: CustomView,\n   *   model: CustomModel\n   * })\n   * 方式二\n   * 不推荐，极个别在自定义的时候需要用到lf的情况下可以用这种方式。\n   * 大多数情况下，我们可以直接在view中从this.props中获取graphModel\n   * 或者model中直接this.graphModel获取model的方法。\n   * @example\n   * lf.register('custom', ({ RectNode, RectModel }) => {\n   *    class CustomView extends RectNode {}\n   *    class CustomModel extends RectModel {}\n   *    return {\n   *      view: CustomView,\n   *      model: CustomModel\n   *    }\n   * })\n   */\n  register(\n    element: string | RegisterConfig,\n    fn?: RegisterElementFunc,\n    isObserverView = true,\n  ) {\n    // 方式1\n    if (typeof element !== 'string') {\n      this.registerElement(element)\n      return\n    }\n\n    // 方式2 TODO: 优化下面这段代码，没太看懂这一块的背景\n    const registerParam: RegisterParam = {\n      BaseEdge: _View.BaseEdge,\n      BaseEdgeModel: _Model.BaseEdgeModel,\n      BaseNode: _View.BaseNode,\n      BaseNodeModel: _Model.BaseNodeModel,\n      RectNode: _View.RectNode,\n      RectNodeModel: _Model.RectNodeModel,\n      CircleNode: _View.CircleNode,\n      CircleNodeModel: _Model.CircleNodeModel,\n      PolygonNode: _View.PolygonNode,\n      PolygonNodeModel: _Model.PolygonNodeModel,\n      TextNode: _View.TextNode,\n      TextNodeModel: _Model.TextNodeModel,\n      LineEdge: _View.LineEdge,\n      LineEdgeModel: _Model.LineEdgeModel,\n      DiamondNode: _View.DiamondNode,\n      DiamondNodeModel: _Model.DiamondNodeModel,\n      PolylineEdge: _View.PolylineEdge,\n      PolylineEdgeModel: _Model.PolylineEdgeModel,\n      BezierEdge: _View.BezierEdge,\n      BezierEdgeModel: _Model.BezierEdgeModel,\n      EllipseNode: _View.EllipseNode,\n      EllipseNodeModel: _Model.EllipseNodeModel,\n      HtmlNode: _View.HtmlNode,\n      HtmlNodeModel: _Model.HtmlNodeModel,\n      // mobx,\n      h,\n      type: element,\n    }\n    // 为了能让后来注册的可以继承前面注册的\n    // 例如我注册一个“开始节点”\n    // 然后我再想注册一个“立即开始节点”\n    // 注册传递参数改为动态。\n    // TODO: 确定 extendKey 的作用\n    this.viewMap.forEach((component) => {\n      const key = (component as any).extendKey\n      if (key) {\n        registerParam[key] = component\n      }\n    })\n    this.graphModel.modelMap.forEach((component) => {\n      const key = (component as any).extendKey\n      if (key) {\n        registerParam[key as string] = component\n      }\n    })\n    if (fn) {\n      const { view: ViewClass, model: ModelClass } = fn(registerParam)\n      let vClass = ViewClass as any // TODO: 确认 ViewClass 类型\n      if (isObserverView && !vClass.isObserved) {\n        vClass.isObserved = true\n        vClass = observer(vClass)\n      }\n      this.setView(element, vClass)\n      this.graphModel.setModel(element, ModelClass)\n    }\n  }\n\n  /**\n   * 注册元素（节点 or 边）\n   * @param config 注册元素的配置项\n   * @private\n   */\n  private registerElement(config: RegisterConfig) {\n    let ViewComp = config.view\n\n    if (config.isObserverView !== false && !ViewComp.isObserved) {\n      ViewComp.isObserved = true\n      ViewComp = observer(ViewComp)\n    }\n\n    this.setView(config.type, ViewComp)\n    this.graphModel.setModel(config.type, config.model)\n  }\n\n  /**\n   * 批量注册元素\n   * @param elements 注册的元素\n   */\n  batchRegister(elements: RegisterConfig[] = []) {\n    forEach(elements, (element) => {\n      this.registerElement(element)\n    })\n  }\n\n  private defaultRegister() {\n    // LogicFlow default Nodes and Edges\n    const defaultElements: RegisterConfig[] = [\n      // Node\n      {\n        type: 'rect',\n        view: _View.RectNode,\n        model: _Model.RectNodeModel,\n      },\n      {\n        type: 'circle',\n        view: _View.CircleNode,\n        model: _Model.CircleNodeModel,\n      },\n      {\n        type: 'polygon',\n        view: _View.PolygonNode,\n        model: _Model.PolygonNodeModel,\n      },\n      {\n        type: 'text',\n        view: _View.TextNode,\n        model: _Model.TextNodeModel,\n      },\n      {\n        type: 'ellipse',\n        view: _View.EllipseNode,\n        model: _Model.EllipseNodeModel,\n      },\n      {\n        type: 'diamond',\n        view: _View.DiamondNode,\n        model: _Model.DiamondNodeModel,\n      },\n      {\n        type: 'html',\n        view: _View.HtmlNode,\n        model: _Model.HtmlNodeModel,\n      },\n      // Edge\n      {\n        type: 'line',\n        view: _View.LineEdge,\n        model: _Model.LineEdgeModel,\n      },\n      {\n        type: 'polyline',\n        view: _View.PolylineEdge,\n        model: _Model.PolylineEdgeModel,\n      },\n      {\n        type: 'bezier',\n        view: _View.BezierEdge,\n        model: _Model.BezierEdgeModel,\n      },\n    ]\n    this.batchRegister(defaultElements)\n  }\n\n  /*********************************************************\n   * Node 相关方法\n   ********************************************************/\n  /**\n   * 添加节点\n   * @param nodeConfig 节点配置\n   * @param eventType 新增节点事件类型，默认EventType.NODE_ADD\n   * @param e MouseEvent 事件\n   */\n  addNode(\n    nodeConfig: NodeConfig,\n    eventType: EventType = EventType.NODE_ADD,\n    e?: MouseEvent,\n  ): BaseNodeModel {\n    return this.graphModel.addNode(nodeConfig, eventType, e)\n  }\n\n  /**\n   * 删除节点\n   * @param {string} nodeId 节点Id\n   */\n  deleteNode(nodeId: string): boolean {\n    const nodeModel = this.graphModel.getNodeModelById(nodeId)\n    if (!nodeModel) return false\n\n    const nodeData = nodeModel.getData()\n    const { guards } = this.options\n    const isEnableDelete = guards?.beforeDelete\n      ? guards.beforeDelete(nodeData)\n      : true\n    if (isEnableDelete) {\n      this.graphModel.deleteNode(nodeId)\n    }\n    return isEnableDelete\n  }\n\n  /**\n   * 克隆节点\n   * @param nodeId 节点Id\n   */\n  cloneNode(nodeId: string): NodeData | undefined {\n    const nodeModel = this.graphModel.getNodeModelById(nodeId)\n    const nodeData = nodeModel?.getData()\n\n    if (nodeData) {\n      const { guards } = this.options\n      const isEnableClone = guards?.beforeClone\n        ? guards.beforeClone(nodeData)\n        : true\n      if (isEnableClone) {\n        return this.graphModel.cloneNode(nodeId)\n      }\n    }\n  }\n\n  /**\n   * 修改节点的id，如果不传新的id，会内部自动创建一个。\n   * @param { string } nodeId 将要被修改的id\n   * @param { string } newId 可选，修改后的id\n   * @returns 修改后的节点id, 如果传入的oldId不存在，返回空字符串\n   */\n  changeNodeId(nodeId: string, newId?: string): string {\n    return this.graphModel.changeNodeId(nodeId, newId)\n  }\n\n  /**\n   * 修改指定节点类型\n   * @param nodeId 节点id\n   * @param type 节点类型\n   */\n  changeNodeType(nodeId: string, type: string): void {\n    this.graphModel.changeNodeType(nodeId, type)\n  }\n\n  /**\n   * 获取节点对象\n   * @param nodeId 节点Id\n   */\n  getNodeModelById(nodeId: string): BaseNodeModel | undefined {\n    return this.graphModel.getNodeModelById(nodeId)\n  }\n\n  /**\n   * 获取节点数据\n   * @param nodeId 节点\n   */\n  getNodeDataById(nodeId: string): NodeData | undefined {\n    const nodeModel = this.getNodeModelById(nodeId)\n    return nodeModel?.getData()\n  }\n\n  /**\n   * 获取所有以此节点为终点的边\n   * @param { string } nodeId\n   */\n  getNodeIncomingEdge(nodeId: string) {\n    return this.graphModel.getNodeIncomingEdge(nodeId)\n  }\n\n  /**\n   * 获取所有以此节点为起点的边\n   * @param {string} nodeId\n   */\n  getNodeOutgoingEdge(nodeId: string) {\n    return this.graphModel.getNodeOutgoingEdge(nodeId)\n  }\n\n  /**\n   * 获取节点连接到的所有起始节点\n   * @param {string} nodeId\n   */\n  getNodeIncomingNode(nodeId: string) {\n    return this.graphModel.getNodeIncomingNode(nodeId)\n  }\n\n  /**\n   * 获取节点连接到的所有目标节点\n   * @param {string} nodeId\n   */\n  getNodeOutgoingNode(nodeId: string) {\n    return this.graphModel.getNodeOutgoingNode(nodeId)\n  }\n\n  /**\n   * 内部保留方法\n   * 创建一个fakeNode，用于dnd插件拖动节点进画布的时候使用。\n   */\n  createFakeNode(nodeConfig: NodeConfig) {\n    const Model = this.graphModel.modelMap.get(\n      nodeConfig.type,\n    ) as BaseNodeModelCtor\n    if (!Model) {\n      console.warn(`不存在为${nodeConfig.type}类型的节点`)\n      return null\n    }\n    // * initNodeData区分是否为虚拟节点\n    const fakeNodeModel = new Model(\n      {\n        ...nodeConfig,\n        virtual: true,\n      },\n      this.graphModel,\n    )\n    this.graphModel.setFakeNode(fakeNodeModel)\n    return fakeNodeModel\n  }\n\n  /**\n   * 内部保留方法\n   * 移除fakeNode\n   */\n  removeFakeNode() {\n    this.graphModel.removeFakeNode()\n  }\n\n  /**\n   * 内部保留方法\n   * 用于fakeNode显示对齐线\n   */\n  setNodeSnapLine(data: NodeData) {\n    this.snaplineModel?.setNodeSnapLine(data)\n  }\n\n  /**\n   * 内部保留方法\n   * 用于fakeNode移除对齐线\n   */\n  removeNodeSnapLine() {\n    this.snaplineModel?.clearSnapline()\n  }\n\n  /*********************************************************\n   * Edge 相关方法\n   ********************************************************/\n  /**\n   * 设置默认的边类型。\n   * 也就是设置在节点直接由用户手动绘制的连线类型。\n   * @param type LFOptions.EdgeType\n   */\n  setDefaultEdgeType(type: LFOptions.EdgeType): void {\n    this.graphModel.setDefaultEdgeType(type)\n  }\n\n  /**\n   * 给两个节点之间添加一条边\n   * @example\n   * lf.addEdge({\n   *   type: 'polygon'\n   *   sourceNodeId: 'node_id_1',\n   *   targetNodeId: 'node_id_2',\n   * })\n   * @param {EdgeConfig} edgeConfig\n   */\n  addEdge(edgeConfig: EdgeConfig): BaseEdgeModel {\n    return this.graphModel.addEdge(edgeConfig)\n  }\n\n  /**\n   * 基于id获取边数据\n   * @param edgeId 边Id\n   * @returns EdgeData\n   */\n  getEdgeDataById(edgeId: string): EdgeData | undefined {\n    const edgeModel = this.getEdgeModelById(edgeId)\n    return edgeModel?.getData()\n  }\n\n  /**\n   * 基于边Id获取边的model\n   * @param edgeId 边的Id\n   * @return model\n   */\n  getEdgeModelById(edgeId: string): BaseEdgeModel | undefined {\n    return this.graphModel.getEdgeModelById(edgeId)\n  }\n\n  /**\n   * 获取满足条件边的model\n   * @param edgeFilter 过滤条件\n   * @example\n   * 获取所有起点为节点 A 的边的 model\n   * lf.getEdgeModels({\n   *   sourceNodeId: 'nodeA_id'\n   * })\n   * 获取所有终点为节点 B 的边的 model\n   * lf.getEdgeModels({\n   *   targetNodeId: 'nodeB_id'\n   * })\n   * 获取起点为节点 A，终点为节点 B 的边\n   * lf.getEdgeModels({\n   *   sourceNodeId: 'nodeA_id',\n   *   targetNodeId: 'nodeB_id'\n   * })\n   * @return model数组\n   */\n  getEdgeModels({\n    sourceNodeId,\n    targetNodeId,\n  }: {\n    sourceNodeId?: string\n    targetNodeId?: string\n  }): BaseEdgeModel[] {\n    const results: BaseEdgeModel[] = []\n    const { edges } = this.graphModel\n    if (sourceNodeId && targetNodeId) {\n      forEach(edges, (edge) => {\n        if (\n          edge.sourceNodeId === sourceNodeId &&\n          edge.targetNodeId === targetNodeId\n        ) {\n          results.push(edge)\n        }\n      })\n    } else if (sourceNodeId) {\n      forEach(edges, (edge) => {\n        if (edge.sourceNodeId === sourceNodeId) {\n          results.push(edge)\n        }\n      })\n    } else if (targetNodeId) {\n      forEach(edges, (edge) => {\n        if (edge.targetNodeId === targetNodeId) {\n          results.push(edge)\n        }\n      })\n    }\n    return results\n  }\n\n  /**\n   * 修改边的id， 如果不传新的id，会内部自动创建一个。\n   * @param { string } edgeId 将要被修改的id\n   * @param { string } newId 可选，修改后的id\n   * @returns 修改后的节点id, 如果传入的oldId不存在，返回空字符串\n   */\n  changeEdgeId(edgeId: string, newId?: string): string {\n    return this.graphModel.changeEdgeId(edgeId, newId)\n  }\n\n  /**\n   * 切换边的类型\n   * @param edgeId 边Id\n   * @param type 边类型\n   */\n  changeEdgeType(edgeId: string, type: LFOptions.EdgeType): void {\n    this.graphModel.changeEdgeType(edgeId, type)\n  }\n\n  /**\n   * 删除边\n   * @param {string} edgeId 边Id\n   */\n  deleteEdge(edgeId: string): boolean {\n    const edgeModel = this.graphModel.getEdgeModelById(edgeId)\n    if (!edgeModel) return false\n\n    const edgeData = edgeModel.getData()\n    const { guards } = this.options\n    const isEnableDelete = guards?.beforeDelete\n      ? guards.beforeDelete(edgeData)\n      : true\n    if (isEnableDelete) {\n      this.graphModel.deleteEdgeById(edgeId)\n    }\n    return isEnableDelete\n  }\n\n  /**\n   * 基于给定节点（作为边起点或终点，可以只传其一），删除对应的边\n   * @param sourceNodeId 边的起点节点ID\n   * @param targetNodeId 边的终点节点ID\n   */\n  deleteEdgeByNodeId({\n    sourceNodeId,\n    targetNodeId,\n  }: {\n    sourceNodeId?: string\n    targetNodeId?: string\n  }): void {\n    // TODO: 将下面方法从 this.graphModel 解构，并测试代码功能是否正常（需要确认 this 指向是否有异常）\n    if (sourceNodeId && targetNodeId) {\n      this.graphModel.deleteEdgeBySourceAndTarget(sourceNodeId, targetNodeId)\n    } else if (sourceNodeId) {\n      this.graphModel.deleteEdgeBySource(sourceNodeId)\n    } else if (targetNodeId) {\n      this.graphModel.deleteEdgeByTarget(targetNodeId)\n    }\n  }\n\n  /**\n   * 获取节点连接的所有边的model\n   * @param nodeId 节点ID\n   * @returns model数组\n   */\n  getNodeEdges(nodeId: string): BaseEdgeModel[] {\n    return this.graphModel.getNodeEdges(nodeId)\n  }\n\n  /*********************************************************\n   * Element 相关方法\n   ********************************************************/\n  /**\n   * 添加多个元素, 包括边和节点。\n   * @param nodes\n   * @param edges\n   * @param distance\n   */\n  addElements(\n    { nodes, edges }: GraphConfigData,\n    distance = 40,\n  ): GraphElements | undefined {\n    // TODO: 1. 解决下面方法中 distance 传参缺未使用的问题；该方法在快捷键中有调用\n    console.log('addElements', nodes, edges, distance)\n    // TODO: 2. review 一下本函数代码逻辑，确认 nodeIdMap 的作用，看是否有优化的空间\n    const nodeIdMap: Record<string, string> = {}\n    const elements: GraphElements = {\n      nodes: [],\n      edges: [],\n    }\n    forEach(nodes, (node) => {\n      const nodeId = node.id\n      const nodeModel = this.addNode(node)\n\n      if (nodeId) nodeIdMap[nodeId] = nodeModel.id\n      elements.nodes.push(nodeModel)\n    })\n\n    forEach(edges, (edge) => {\n      let { sourceNodeId, targetNodeId } = edge\n      if (nodeIdMap[sourceNodeId]) sourceNodeId = nodeIdMap[sourceNodeId]\n      if (nodeIdMap[targetNodeId]) targetNodeId = nodeIdMap[targetNodeId]\n      const edgeModel = this.graphModel.addEdge({\n        ...edge,\n        sourceNodeId,\n        targetNodeId,\n      })\n      elements.edges.push(edgeModel)\n    })\n    return elements\n  }\n\n  /**\n   * 将图形选中\n   * @param id 选择元素ID\n   * @param multiple 是否允许多选，如果为true，不会将上一个选中的元素重置\n   * @param toFront 是否将选中的元素置顶，默认为true\n   */\n  selectElementById(id: string, multiple = false, toFront = true) {\n    this.graphModel.selectElementById(id, multiple)\n    if (!multiple && toFront) {\n      this.graphModel.toFront(id)\n    }\n  }\n\n  /**\n   * 获取选中的元素数据\n   * @param isIgnoreCheck 是否包括sourceNode和targetNode没有被选中的边,默认包括。\n   * 注意：复制的时候不能包括此类边, 因为复制的时候不允许悬空的边。\n   */\n  getSelectElements(isIgnoreCheck = true): GraphData {\n    return this.graphModel.getSelectElements(isIgnoreCheck)\n  }\n\n  /**\n   * 将所有选中的元素设置为非选中\n   */\n  clearSelectElements() {\n    this.graphModel.clearSelectElements()\n  }\n\n  /**\n   * 获取节点或边对象\n   * @param id id\n   */\n  getModelById(id: string): LogicFlow.GraphElement | undefined {\n    return this.graphModel.getElement(id)\n  }\n\n  /**\n   * 获取节点或边的数据\n   * @param id id\n   */\n  getDataById(id: string): NodeData | EdgeData | undefined {\n    return this.graphModel.getElement(id)?.getData()\n  }\n\n  /**\n   * 删除元素，在不确定当前id是节点还是边时使用\n   * @param id 元素id\n   */\n  deleteElement(id: string): boolean {\n    const model = this.getModelById(id)\n    if (!model) return false\n\n    const callback = {\n      [ElementType.NODE]: this.deleteNode,\n      [ElementType.EDGE]: this.deleteEdge,\n    }\n    return callback[model.BaseType]?.call(this, id) ?? false\n  }\n\n  /**\n   * 设置元素的zIndex.\n   * 注意：默认堆叠模式下，不建议使用此方法。\n   * @see todo link 堆叠模式\n   * @param id 元素id\n   * @param zIndex zIndex的值，可以传数字，也支持传入 'top' 和 'bottom'\n   */\n  setElementZIndex(id: string, zIndex: number | 'top' | 'bottom') {\n    return this.graphModel.setElementZIndex(id, zIndex)\n  }\n\n  /**\n   * 获取指定区域内的所有元素，此区域必须是DOM层。\n   * 例如鼠标绘制选区后，获取选区内的所有元素。\n   * @see todo 分层\n   * @param leftTopPoint 区域左上角坐标, dom层坐标\n   * @param rightBottomPoint 区域右下角坐标，dom层坐标\n   * @param wholeEdge\n   * @param wholeNode\n   * @param ignoreHideElement\n   */\n  getAreaElement(\n    leftTopPoint: PointTuple,\n    rightBottomPoint: PointTuple,\n    wholeEdge = true,\n    wholeNode = true,\n    ignoreHideElement = false,\n  ) {\n    return this.graphModel\n      .getAreaElement(\n        leftTopPoint,\n        rightBottomPoint,\n        wholeEdge,\n        wholeNode,\n        ignoreHideElement,\n      )\n      .map((element) => element.getData())\n  }\n\n  /**\n   * 设置元素的自定义属性\n   * @see todo docs link\n   * @param id 元素的id\n   * @param properties 自定义属性\n   */\n  setProperties(id: string, properties: PropertiesType): void {\n    this.graphModel.getElement(id)?.setProperties(formatData(properties))\n  }\n\n  /**\n   * 获取元素的自定义属性\n   * @param id 元素的id\n   * @returns 自定义属性\n   */\n  getProperties(id: string): PropertiesType | undefined {\n    return this.graphModel.getElement(id)?.getProperties()\n  }\n\n  deleteProperty(id: string, key: string): void {\n    this.graphModel.getElement(id)?.deleteProperty(key)\n  }\n\n  /**\n   * FBI WARNING !!! 慎用 === 不要用\n   * 修改对应元素 model 中的属性\n   * 注意：此方法慎用，除非您对logicflow内部有足够的了解。\n   * 大多数情况下，请使用setProperties、updateText、changeNodeId等方法。\n   * 例如直接使用此方法修改节点的id,那么就是会导致连接到此节点的边的sourceNodeId出现找不到的情况。\n   * @param {string} id 元素id\n   * @param {object} attributes 需要更新的属性\n   */\n  updateAttributes(id: string, attributes: object) {\n    this.graphModel.updateAttributes(id, attributes)\n  }\n\n  /*********************************************************\n   * Text 相关方法\n   ********************************************************/\n  /**\n   * 显示节点、连线文本编辑框\n   * @param id 元素id\n   */\n  editText(id: string): void {\n    this.graphModel.editText(id)\n  }\n\n  /**\n   * 更新节点或边的文案\n   * @param id 节点或者边id\n   * @param value 文案内容\n   */\n  updateText(id: string, value: string) {\n    this.graphModel.updateText(id, value)\n  }\n\n  /*********************************************************\n   * EditConfig 相关方法\n   ********************************************************/\n  /**\n   * 更新流程图编辑相关设置\n   * @param {object} config 编辑配置\n   * @see todo docs link\n   */\n  updateEditConfig(config: EditConfigInterface) {\n    const { editConfigModel, transformModel } = this.graphModel\n    editConfigModel.updateEditConfig(config)\n    if (config?.stopMoveGraph !== undefined) {\n      transformModel.updateTranslateLimits(config.stopMoveGraph)\n    }\n    // 静默模式切换时，修改快捷键的启用状态\n    config?.isSilentMode ? this.keyboard.disable() : this.keyboard.enable(true)\n  }\n\n  /**\n   * 获取流程图当前编辑相关设置\n   * @see todo docs link\n   */\n  getEditConfig() {\n    return this.graphModel.editConfigModel.getConfig()\n  }\n\n  /*********************************************************\n   * Graph 相关方法\n   ********************************************************/\n  /**\n   * 设置主题样式\n   * @param { object } style 自定义主题样式\n   * todo docs link\n   */\n  setTheme(style: Partial<LogicFlow.Theme>): void {\n    this.graphModel.setTheme(style)\n  }\n\n  private focusByElement(id: string) {\n    let coordinate: Position | undefined = undefined\n    const nodeModel = this.getNodeModelById(id)\n    if (nodeModel) {\n      const { x, y } = nodeModel.getData()\n      coordinate = {\n        x,\n        y,\n      }\n    }\n    const edgeModel = this.getEdgeModelById(id)\n    if (edgeModel) {\n      const { x, y } = edgeModel.textPosition\n      coordinate = {\n        x,\n        y,\n      }\n    }\n\n    if (coordinate) {\n      this.focusByCoordinate(coordinate)\n    }\n  }\n\n  private focusByCoordinate(coordinate: Position) {\n    const { transformModel, width, height } = this.graphModel\n    const { x, y } = coordinate\n    transformModel.focusOn(x, y, width, height)\n  }\n\n  /**\n   * 定位到画布视口中心\n   * 支持用户传入图形当前的坐标或id，可以通过type来区分是节点还是边的id，也可以不传（兜底）\n   * @param focusOnArgs.id 如果传入的是id, 则画布视口中心移动到此id的元素中心点。\n   * @param focusOnArgs.coordinate 如果传入的是坐标，则画布视口中心移动到此坐标。\n   * TODO: 测试下面代码，重构了一下逻辑，重载 api 定义\n   */\n  focusOn(id: string): void\n  focusOn(coordinate: Position): void\n  focusOn(focusOnArgs: LogicFlow.FocusOnArgsType): void\n  focusOn(focusOnArgs: string | Position | LogicFlow.FocusOnArgsType): void {\n    if (typeof focusOnArgs === 'string') {\n      // string focusOnArgs -> id\n      this.focusByElement(focusOnArgs)\n    } else if ('x' in focusOnArgs && 'y' in focusOnArgs) {\n      // Position focusOnArgs -> coordinate\n      this.focusByCoordinate(focusOnArgs)\n    } else {\n      // FocusOnArgsType\n      const { id, coordinate } = focusOnArgs\n      if (id) {\n        this.focusByElement(id)\n      }\n      if (coordinate) {\n        this.focusByCoordinate(coordinate)\n      }\n    }\n  }\n\n  /**\n   * 重新设置画布的宽高\n   * 不传会自动计算画布宽高\n   */\n  resize(width?: number, height?: number): void {\n    this.graphModel.resize(width, height)\n    this.options.width = this.graphModel.width\n    this.options.height = this.graphModel.height\n  }\n\n  /**\n   * 将某个元素放置到顶部。\n   * 如果堆叠模式为默认模式，则将原置顶元素重新恢复原有层级。\n   * 如果堆叠模式为递增模式，则将需指定元素zIndex设置为当前最大zIndex + 1。\n   * @see todo link 堆叠模式\n   * @param id 元素Id\n   */\n  toFront(id: string) {\n    this.graphModel.toFront(id)\n  }\n\n  /**\n   * 获取事件位置相对于画布左上角的坐标\n   * 画布所在的位置可以是页面任何地方，原生事件返回的坐标是相对于页面左上角的，该方法可以提供以画布左上角为原点的准确位置。\n   * @param {number} x\n   * @param {number} y\n   * @returns {object} Point 事件位置的坐标\n   * @returns {object} Point.domOverlayPosition HTML层上的坐标\n   * @returns {object} Point.canvasOverlayPosition SVG层上的坐标\n   */\n  getPointByClient(x: number, y: number): ClientPosition\n  getPointByClient(point: Position): ClientPosition\n  getPointByClient(\n    x: number | Position,\n    y?: number,\n  ): ClientPosition | undefined {\n    if (typeof x === 'object') {\n      return this.graphModel.getPointByClient(x)\n    } else if (typeof y === 'number') {\n      return this.graphModel.getPointByClient({\n        x,\n        y,\n      })\n    }\n  }\n\n  /**\n   * 获取流程绘图数据\n   * 注意: getGraphData返回的数据受到adapter影响，所以其数据格式不一定是logicflow内部图数据格式。\n   * 如果实现通用插件，请使用getGraphRawData\n   */\n  getGraphData(...params: any): GraphData | unknown {\n    const data = this.getGraphRawData()\n    if (this.adapterOut) {\n      return this.adapterOut(data, ...params)\n    }\n    return data\n  }\n\n  /**\n   * 获取流程绘图原始数据\n   * 在存在adapter时，可以使用getGraphRawData获取图原始数据\n   */\n  getGraphRawData(): GraphData {\n    return this.graphModel.modelToGraphData()\n  }\n\n  /**\n   * 清空画布\n   */\n  clearData() {\n    this.graphModel.clearData()\n  }\n\n  /*********************************************************\n   * LogicFlow Render方法\n   ********************************************************/\n  renderRawData(graphRawData: GraphConfigData) {\n    this.graphModel.graphDataToModel(formatData(graphRawData))\n    if (this.options.history !== false) {\n      this.history.watch(this.graphModel)\n    }\n    render(\n      <Graph\n        getView={this.getView}\n        tool={this.tool}\n        options={this.options}\n        dnd={this.dnd}\n        snaplineModel={this.snaplineModel}\n        graphModel={this.graphModel}\n      />,\n      this.container,\n    )\n    this.emit(EventType.GRAPH_RENDERED, {\n      data: this.graphModel.modelToGraphData(),\n    })\n  }\n\n  /**\n   * 渲染图\n   * @example\n   * lf.render({\n   *   nodes: [\n   *     {\n   *       id: 'node_1',\n   *       type: 'rect',\n   *       x: 100,\n   *       y: 100\n   *     },\n   *     {\n   *       id: 'node_2',\n   *       type: 'circle',\n   *       x: 300,\n   *       y: 200\n   *     }\n   *   ],\n   *   edges: [\n   *     {\n   *       sourceNodeId: 'node_1',\n   *       targetNodeId: 'node_2',\n   *       type: 'polyline'\n   *     }\n   *   ]\n   * })\n   * @param graphData 图数据\n   */\n  render(graphData: GraphConfigData) {\n    let graphRawData = cloneDeep(graphData)\n    if (this.adapterIn) {\n      graphRawData = this.adapterIn(graphRawData)\n    }\n    this.renderRawData(graphRawData)\n  }\n\n  /*********************************************************\n   * History/Resize 相关方法\n   ********************************************************/\n  /**\n   * 历史记录操作\n   * 返回上一步\n   */\n  undo() {\n    if (!this.history.undoAble()) return\n    // formatData兼容vue数据\n    const graphData = formatData(this.history.undo()!)\n    this.clearSelectElements()\n    this.graphModel.graphDataToModel(graphData)\n  }\n\n  /**\n   * 历史记录操作\n   * 恢复下一步\n   */\n  redo() {\n    if (!this.history.redoAble()) return\n    // formatData兼容vue数据\n    const graphData = formatData(this.history.redo()!)\n    this.clearSelectElements()\n    this.graphModel.graphDataToModel(graphData)\n  }\n\n  /**\n   * 放大缩小图形\n   * @param zoomSize 放大缩小的值，支持传入0-n之间的数字。小于1表示缩小，大于1表示放大。也支持传入true和false按照内置的刻度放大缩小\n   * @param point 缩放的原点\n   * @returns {string} -放大缩小的比例\n   */\n  zoom(zoomSize?: ZoomParamType, point?: PointTuple): string {\n    const { transformModel } = this.graphModel\n    return transformModel.zoom(zoomSize, point)\n  }\n\n  /**\n   * 重置图形的放大缩写比例为默认\n   */\n  resetZoom(): void {\n    const { transformModel } = this.graphModel\n    transformModel.resetZoom()\n  }\n\n  /**\n   * 设置图形缩小时，能缩放到的最小倍数。参数为0-1自己。默认0.2\n   * @param size 图形缩小的最小值\n   */\n  setZoomMiniSize(size: number): void {\n    const { transformModel } = this.graphModel\n    transformModel.setZoomMiniSize(size)\n  }\n\n  /**\n   * 设置图形放大时，能放大到的最大倍数，默认16\n   * @param size 图形放大的最大值\n   */\n  setZoomMaxSize(size: number): void {\n    const { transformModel } = this.graphModel\n    transformModel.setZoomMaxSize(size)\n  }\n\n  /**\n   * 获取缩放的值和平移的值。\n   */\n  getTransform() {\n    const {\n      transformModel: { SCALE_X, SCALE_Y, TRANSLATE_X, TRANSLATE_Y },\n    } = this.graphModel\n    return {\n      SCALE_X,\n      SCALE_Y,\n      TRANSLATE_X,\n      TRANSLATE_Y,\n    }\n  }\n\n  /**\n   * 平移图\n   * @param x 向x轴移动距离\n   * @param y 向y轴移动距离\n   */\n  translate(x: number, y: number): void {\n    const { transformModel } = this.graphModel\n    transformModel.translate(x, y)\n  }\n\n  /**\n   * 还原图形为初始位置\n   */\n  resetTranslate(): void {\n    const { transformModel } = this.graphModel\n    const { TRANSLATE_X, TRANSLATE_Y } = transformModel\n    this.translate(-TRANSLATE_X, -TRANSLATE_Y)\n  }\n\n  /**\n   * 图形画布居中显示\n   */\n  translateCenter(): void {\n    this.graphModel.translateCenter()\n  }\n\n  /**\n   * 图形适应屏幕大小\n   * @param verticalOffset number 距离盒子上下的距离， 默认为20\n   * @param horizontalOffset number 距离盒子左右的距离， 默认为20\n   */\n  fitView(verticalOffset?: number, horizontalOffset?: number): void {\n    if (horizontalOffset === undefined) {\n      horizontalOffset = verticalOffset // 兼容以前的只传一个参数的情况\n    }\n    this.graphModel.fitView(verticalOffset, horizontalOffset)\n  }\n\n  /**\n   * 开启边的动画\n   * @param edgeId string\n   */\n  openEdgeAnimation(edgeId: string): void {\n    this.graphModel.openEdgeAnimation(edgeId)\n  }\n\n  /**\n   * 关闭边的动画\n   * @param edgeId string\n   */\n  closeEdgeAnimation(edgeId: string): void {\n    this.graphModel.closeEdgeAnimation(edgeId)\n  }\n\n  /*********************************************************\n   * 事件系统方法\n   ********************************************************/\n  /**\n   * 监听事件\n   * 事件详情见 @see todo\n   * 支持同时监听多个事件\n   * @example\n   * lf.on('node:click,node:contextmenu', (data) => {\n   * });\n   */\n  on<T extends keyof EventArgs>(evt: T, callback: EventCallback<T>): void\n  on<T extends string>(evt: T, callback: EventCallback<T>): void\n  on(evt: string, callback: EventCallback) {\n    this.graphModel.eventCenter.on(evt, callback)\n  }\n\n  /**\n   * 撤销监听事件\n   */\n  off<T extends keyof EventArgs>(evt: T, callback: EventCallback<T>): void\n  off<T extends string>(evt: T, callback: EventCallback<T>): void\n  off(evt: string, callback: EventCallback) {\n    this.graphModel.eventCenter.off(evt, callback)\n  }\n\n  /**\n   * 监听事件，只监听一次\n   */\n  once<T extends keyof EventArgs>(evt: T, callback: EventCallback<T>): void\n  once<T extends string>(evt: T, callback: EventCallback<T>): void\n  once(evt: string, callback: EventCallback) {\n    this.graphModel.eventCenter.once(evt, callback)\n  }\n\n  /**\n   * 触发监听事件\n   */\n  emit<T extends keyof EventArgs>(evts: T, eventArgs: CallbackArgs<T>): void\n  emit<T extends string>(evts: T, eventArgs: CallbackArgs<T>): void\n  emit(evt: string, arg: EventArgs) {\n    this.graphModel.eventCenter.emit(evt, arg)\n  }\n\n  /*********************************************************\n   * 插件系统方法\n   ********************************************************/\n  /**\n   * 添加扩展, 待讨论，这里是不是静态方法好一些？\n   * 重复添加插件的时候，把上一次添加的插件的销毁。\n   * @param extension\n   * @param props\n   */\n  static use(\n    extension: ExtensionConstructor | ExtensionDefinition,\n    props?: Record<string, unknown>,\n  ): void {\n    const { pluginName } = extension\n    if (!pluginName) {\n      throw new Error(`请给插件指定 pluginName!`)\n    }\n    // TODO: 应该在何时进行插件的销毁？？？\n    // const preExtension = this.extensions.get(pluginName)?.extension\n    // preExtension?.destroy?.() // 该代码应该有问题，因为 preExtension 直接用的是 Constructor，没有实例化。无法访问实例方法 destroy\n\n    this.extensions.set(pluginName, {\n      [pluginFlag]: pluginFlag,\n      extension,\n      props,\n    })\n  }\n\n  private installPlugins(disabledPlugins: string[] = []) {\n    const extensionsAddByUse = Array.from(\n      LogicFlow.extensions,\n      ([, extension]) => extension,\n    )\n    // 安装插件，优先使用个性插件\n    const extensions = [...extensionsAddByUse, ...this.plugins]\n    forEach(extensions, (ext) => {\n      let extension: ExtensionConstructor | ExtensionDefinition\n      let props: Record<string, any> | undefined\n\n      if (pluginFlag in ext) {\n        extension = ext.extension\n        props = ext.props\n      } else {\n        extension = ext\n      }\n\n      const pluginName = extension?.pluginName\n\n      if (indexOf(disabledPlugins, pluginName) === -1) {\n        this.installPlugin(extension, props)\n      }\n    })\n  }\n\n  /**\n   * 加载插件-内部方法\n   */\n  private installPlugin(\n    extension: ExtensionConstructor | ExtensionDefinition,\n    props?: Record<string, any>,\n  ) {\n    if ('pluginName' in extension && 'install' in extension) {\n      const { pluginName, install, render } = extension\n      if (pluginName) {\n        install && install.call(extension, this, LogicFlow)\n        render && this.components.push(render.bind(extension))\n        this.extension[pluginName] = extension\n      }\n      return\n    }\n\n    const ExtensionCtor = extension as ExtensionConstructor\n    const extensionIns = new ExtensionCtor({\n      lf: this,\n      LogicFlow,\n      props,\n      options: this.options.pluginsOptions ?? {},\n    })\n    extensionIns.render &&\n      this.components.push(extensionIns.render.bind(extensionIns))\n    this.extension[ExtensionCtor.pluginName] = extensionIns\n  }\n}\n\n// Option\nexport namespace LogicFlow {\n  /**\n   * LogicFlow init Options\n   */\n  export interface Options extends LFOptions.Common {}\n\n  export type DomAttributes = {\n    className?: string\n    [key: string]: string | undefined\n  }\n\n  export type PropertiesType = {\n    width?: number\n    height?: number\n    rx?: number\n    ry?: number\n  } & Record<string, any>\n  export type AttributesType = Record<string, any>\n\n  export type VectorData = {\n    deltaX: number\n    deltaY: number\n  }\n  export type OffsetData = {\n    dx: number\n    dy: number\n  }\n  export type Position = {\n    x: number\n    y: number\n  }\n  export type Point = {\n    id?: string\n    [key: string]: any // TODO: 确认这个属性是干什么的呢？是有可以移除\n  } & Position\n  export type PointTuple = [number, number]\n  export type ClientPosition = {\n    domOverlayPosition: Position\n    canvasOverlayPosition: Position\n  }\n\n  export interface LineSegment {\n    start: Point\n    end: Point\n  }\n\n  export type Direction = SegmentDirection\n  export type RadiusCircleInfo = {\n    r: number\n  } & Position\n  export type Vector = {\n    id?: string\n    x: number\n    y: number\n    z: 0\n    [key: string]: any\n  }\n  export type RectSize = {\n    width: number\n    height: number\n  }\n  export type TextConfig = {\n    value: string\n    x: number\n    y: number\n    editable?: boolean\n    draggable?: boolean\n    // overflowMode?: 'default' | 'autoWrap' | 'ellipsis'\n  }\n\n  export type AppendConfig = {\n    startIndex: number\n    endIndex: number\n    direction: Direction\n    draggable?: boolean\n  } & LineSegment\n\n  export type ArrowConfig = {\n    markerStart: string\n    markerEnd: string\n  }\n\n  export type ArrowInfo = {\n    start: Point\n    end: Point\n    hover: boolean\n    isSelected: boolean\n  }\n\n  export interface GraphConfigData {\n    nodes?: NodeConfig[]\n    edges?: EdgeConfig[]\n  }\n\n  export interface GraphData {\n    nodes: NodeData[]\n    edges: EdgeData[]\n  }\n\n  export interface FakeNodeConfig {\n    type: string\n    text?: TextConfig | string\n    properties?: PropertiesType\n\n    [key: string]: unknown\n  }\n\n  // DnD 拖拽插件使用的 NodeConfig\n  export type OnDragNodeConfig = {\n    type: string\n    text?: TextConfig | string\n    properties?: Record<string, unknown>\n    [key: string]: any\n  }\n\n  export interface NodeConfig {\n    id?: string\n    type: string\n    x: number\n    y: number\n    text?: TextConfig | string\n    zIndex?: number\n    properties?: PropertiesType\n    virtual?: boolean // 是否虚拟节点\n    rotate?: number\n\n    [key: string]: any\n  }\n\n  export interface NodeData extends NodeConfig {\n    id: string\n    text?: TextConfig\n\n    [key: string]: unknown\n  }\n\n  export interface EdgeConfig {\n    id?: string\n    type?: string // TODO: 将所有类型选项列出来；LogicFlow 内部默认为 polyline\n\n    sourceNodeId: string\n    sourceAnchorId?: string\n    targetNodeId: string\n    targetAnchorId?: string\n\n    startPoint?: Point\n    endPoint?: Point\n    text?: TextConfig | string\n    pointsList?: Point[]\n    zIndex?: number\n    properties?: PropertiesType\n  }\n\n  export interface EdgeData extends EdgeConfig {\n    id: string\n    type: string\n    text?: TextConfig\n    startPoint: Point\n    endPoint: Point\n\n    [key: string]: unknown\n  }\n\n  export interface MenuConfig {\n    text?: string\n    className?: string\n    icon?: boolean\n    callback: (id: string | number) => void\n  }\n}\n\n// Theme\nexport namespace LogicFlow {\n  export type NumberOrPercent = `${number}%` | number\n  /**\n   * 颜色 - CSS 属性用颜色\n   * 如：#000000, rgba(0, 0, 0, 0), 如果是透明的，可以传 'none'\n   */\n  export type Color = string | 'none'\n  /**\n   * svg虚线\n   * 格式为逗号分割字符串，如\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-dasharray\n   */\n  export type DashArray = string\n  export type CommonTheme = {\n    fill?: Color // 填充颜色\n    stroke?: Color // 边框颜色\n    strokeWidth?: number // 边框宽度 TODO: svg 实际可赋值类型：NumberOrPercent\n    /**\n     * 其他属性 - 我们会把你自定义的所有属性最终传递到 DOM 上\n     * 详情请参考 svg 属性规范：\n     * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute\n     * 注意: 请不要在主题中设置“形状属性”，例如：x、y、width、height、radius、r、rx、ry\n     * @see https://docs.logic-flow.cn/docs/#/zh/api/themeApi?id=%e5%bd%a2%e7%8a%b6%e5%b1%9e%e6%80%a7）\n     */\n    radius?: number\n    rx?: number\n    ry?: number\n    width?: number\n    height?: number\n    path?: string\n    [key: string]: unknown\n  }\n  export type CommonThemePropTypes = CommonTheme[keyof CommonTheme]\n\n  export type AppendAttributes = {\n    d: string\n    fill: string\n    stroke: Color\n    strokeWidth: number\n    strokeDasharray: DashArray\n  }\n\n  export type ContainerTheme = {\n    width?: string\n    height?: string\n  }\n  // 节点 Shape 类型\n  /**\n   * rect 节点主题\n   * svg基础图形-矩形\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/rect\n   */\n  export type RectTheme = CommonTheme\n  /**\n   * circle 节点主题\n   * svg基础图形-圆形\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/circle\n   */\n  export type CircleTheme = CommonTheme\n  /**\n   * polygon 节点主题\n   * svg基础图形-多边形\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/polygon\n   */\n  export type PolygonTheme = CommonTheme\n  /**\n   * ellipse 节点主题\n   * svg基础图形-椭圆\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/ellipse\n   */\n  export type EllipseTheme = CommonTheme\n  // 锚点样式（svg 基础图形 - 圆）\n  export type AnchorTheme = {\n    r?: number\n    hover?: {\n      r?: number\n    } & CommonTheme\n  } & CommonTheme\n\n  // 文本样式\n  export type TextTheme = {\n    color?: Color\n    fontSize: number\n    textWidth?: number\n    lineHeight?: number\n    textAnchor?: 'start' | 'middle' | 'end'\n    dominantBaseline?:\n      | 'auto'\n      | 'text-bottom'\n      | 'alphabetic'\n      | 'ideographic'\n      | 'middle'\n      | 'central'\n      | 'mathematical'\n      | 'hanging'\n      | 'text-top'\n  } & CommonTheme\n\n  // 文本节点样式\n  export type TextNodeTheme = {\n    background?: RectTheme\n  } & TextTheme\n\n  // 节点上文本样式\n  export type NodeTextTheme = {\n    /**\n     * 文本超出指定宽度处理方式\n     * default: 不特殊处理，允许超出\n     * autoWrap: 超出自动换行\n     * ellipsis: 超出省略\n     */\n    overflowMode?: 'default' | 'autoWrap' | 'ellipsis'\n    textWidth?: number\n    background?: RectTheme\n    /**\n     * 背景区域 padding\n     * wrapPadding: '5px,10px'\n     */\n    wrapPadding?: string\n  } & TextTheme\n\n  // 边上文本样式\n  export type EdgeTextTheme = {\n    textWidth: number\n    background?: {\n      /**\n       * 背景区域 padding\n       * wrapPadding: '5px,10px'\n       */\n      wrapPadding?: string\n    } & RectTheme\n    // hover状态下文本样式\n    hover?: EdgeTextTheme\n  } & NodeTextTheme &\n    TextTheme\n\n  // 边 Edge 主题\n  export type EdgeTheme = CommonTheme\n  export type EdgeBezierTheme = {\n    // 贝塞尔调整线主题\n    adjustLine?: EdgeTheme\n    // 贝塞尔调整锚点主题\n    adjustAnchor?: CircleTheme\n  } & EdgeTheme\n  export type EdgePolylineTheme = EdgeTheme\n  export type EdgeAnimation = {\n    stroke?: Color\n    strokeDasharray?: string\n    strokeDashoffset?: NumberOrPercent\n    animationName?: string\n    animationDuration?: `${number}s` | `${number}ms`\n    animationIterationCount?: 'infinite' | number\n    animationTimingFunction?: string\n    animationDirection?: string\n  }\n\n  export type OutlineTheme = {\n    hover?: CommonTheme\n  } & CommonTheme &\n    EdgeAnimation\n\n  export type ArrowTheme = {\n    /**\n     * 箭头长度.\n     * 以符号\"->\"为例, offset表示箭头大于号的宽度。\n     */\n    offset: number\n    /**\n     * 箭头垂直于边的距离\n     * 以符号\"->\"为例, verticalLength表示箭头大于号的高度\n     */\n    refX?: number\n    refY?: number\n    verticalLength: number\n  } & CommonTheme\n  export type ArrowAttributesType = {\n    d: string\n  } & ArrowTheme\n\n  export type AnchorLineTheme = EdgeTheme & EdgeAnimation\n\n  export interface Theme {\n    baseNode: CommonTheme // 所有节点的通用主题设置\n    baseEdge: EdgeTheme // 所有边的通用主题设置\n\n    /**\n     * 基础图形节点相关主题\n     */\n    rect: RectTheme // 矩形样式\n    circle: CircleTheme // 圆形样式\n    diamond: PolygonTheme // 菱形样式\n    ellipse: EllipseTheme // 椭圆样式\n    polygon: PolygonTheme // 多边形样式\n\n    /**\n     * 基础图形线相关主题\n     */\n    line: EdgeTheme // 直线样式\n    polyline: EdgePolylineTheme // 折现样式\n    bezier: EdgeBezierTheme // 贝塞尔曲线样式\n    anchorLine: AnchorLineTheme // 从锚点拉出的边的样式\n\n    /**\n     * 文本内容相关主题\n     */\n    text: TextNodeTheme // 文本节点样式\n    nodeText: NodeTextTheme // 节点文本样式\n    edgeText: EdgeTextTheme // 边文本样式\n    inputText?: CommonTheme\n\n    /**\n     * 其他元素相关主题\n     */\n    anchor: AnchorTheme // 锚点样式\n    arrow: ArrowTheme // 边上箭头的样式\n    snapline: EdgeTheme // 对齐线样式\n    rotateControl: CommonTheme // 节点旋转控制点样式\n    resizeControl: CommonTheme // 节点旋转控制点样式\n    resizeOutline: CommonTheme // 节点调整大小时的外框样式\n\n    /**\n     * REMIND: 当开启了跳转边的起点和终点(adjustEdgeStartAndEnd:true)后\n     * 边的两端会出现调整按钮\n     * 边连段的调整点样式\n     */\n    edgeAdjust: CircleTheme\n    outline: OutlineTheme // 节点选择状态下外侧的选框样式\n    edgeAnimation: EdgeAnimation // 边动画样式\n  }\n}\n\n// Render or Functions\nexport namespace LogicFlow {\n  type FocusOnById = {\n    id: string\n    coordinate?: never\n  }\n  type FocusOnByCoordinate = {\n    id?: string\n    coordinate: Position\n  }\n  export type FocusOnArgsType = FocusOnById | FocusOnByCoordinate\n\n  export type BaseNodeModelCtor = typeof BaseNodeModel\n  export type BaseEdgeModelCtor = typeof BaseEdgeModel\n\n  export type GraphElementCtor = BaseNodeModelCtor | BaseEdgeModelCtor\n  export type GraphElement = BaseNodeModel | BaseEdgeModel\n  export type GraphElements = {\n    nodes: BaseNodeModel[]\n    edges: BaseEdgeModel[]\n  }\n\n  export type RegisterConfig = {\n    type: string\n    // TODO: 确认 View 类型中 props 类型该如何动态获取真实组件的 props\n    view: ComponentType<any> & {\n      isObserved?: boolean\n    }\n    model: GraphElementCtor // TODO: 确认 model 的类型\n    isObserverView?: boolean\n  }\n  export type RegisterElement = {\n    view: any\n    model: any\n  }\n  export type RegisterParam = {\n    h: typeof h\n    // 当前项目中定义的节点 or 连线的 View 或 Model\n    // ...\n    [key: string]: unknown\n  }\n  export type RegisterElementFunc = (params: RegisterParam) => RegisterElement\n\n  export interface LogicFlowConstructor {\n    new (options: LFOptions.Definition): LogicFlow\n  }\n\n  /**\n   * Extension 插件类型\n   */\n  export type ExtensionType = ExtensionConstructor | ExtensionDefinition\n  export type ExtensionConfig = {\n    [pluginFlag]: symbol\n    extension: ExtensionType\n    props?: Record<string, any> // TODO: 看这类型是否可以更精确\n  }\n\n  export type IExtensionProps = {\n    lf: LogicFlow\n    LogicFlow: LogicFlowConstructor\n    props?: Record<string, unknown>\n    options: Record<string, unknown>\n  }\n\n  export interface ExtensionConstructor {\n    pluginName: string\n    new (props: IExtensionProps): Extension\n  }\n\n  export type ExtensionRenderFunc = (\n    lf: LogicFlow,\n    container: HTMLElement,\n  ) => void\n\n  // 对象形式定义的插件\n  export type ExtensionDefinition = {\n    pluginName: string\n    install?: (lf: LogicFlow, LFCtor: LogicFlowConstructor) => void\n    render?: ExtensionRenderFunc\n  }\n\n  export interface Extension {\n    render: ExtensionRenderFunc\n    destroy?: () => void // TODO: 确认插件销毁函数参数类型\n  }\n}\n\n// toStringTag\nexport namespace LogicFlow {\n  export const toStringTag = `LF.${LogicFlow.name}`\n}\n\nexport default LogicFlow\n", "import { observer as mobxObserver } from 'mobx-preact'\nimport { createElement as h, createRef, Component } from 'preact/compat'\nimport LogicFlow from './LogicFlow'\n\nimport * as LogicFlowUtil from './util'\n\nexport function observer<P>(props: P) {\n  return mobxObserver(props as any)\n}\n\nexport { LogicFlow, h, createRef, Component, LogicFlowUtil }\n\nexport * from './view'\nexport * from './model'\nexport * from './options'\nexport * from './keyboard'\nexport { ElementState, ModelType, ElementType, EventType } from './constant'\n\nexport { formatAnchorConnectValidateData } from './util/node'\n\nexport default LogicFlow\n"],
  "mappings": "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",
  "names": ["classNames", "i", "window", "document", "undefined", "i", "e", "action", "keys", "Mousetrap", "self", "method", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "push", "process", "__r", "debounceRendering", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "sort", "shift", "__P", "diff", "__n", "namespaceURI", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "newChildrenLength", "constructNewChildrenArray", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "String", "findMatchingIndex", "unmount", "parentVNode", "contains", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "shouldSearch", "setStyle", "style", "value", "setProperty", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "_attached", "addEventListener", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "renderHook", "count", "newType", "outer", "prototype", "render", "contextType", "__E", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "MODE_HYDRATE", "indexOf", "diffElementNodes", "diffed", "root", "cb", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "attributes", "__html", "innerHTML", "hasRefUnmount", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "i", "fail", "x", "k", "Atom", "a", "b", "d", "p", "__assign", "t", "s", "i", "n", "o", "m", "r", "e", "cache", "_a", "keys", "fail", "v", "_", "set", "computed", "IDerivationState", "TraceMode", "CaughtException", "l", "fail", "observable", "f", "e", "l", "i", "action", "allowStateChanges", "ObservableValue", "ComputedValue", "fail", "e", "MobXGlobals", "global", "fail", "observable", "i", "d", "Reaction", "e", "f", "r", "f", "i", "l", "fail", "v", "action", "reaction", "r", "e", "reactionScheduler", "_a", "keys", "fail", "fail", "_", "fail", "i", "l", "fail", "action", "observable", "fail", "i", "l", "ObservableArrayAdministration", "values", "v", "_a", "ObservableMap", "self", "keys", "ObservableSet", "ObservableObjectAdministration", "a", "b", "i", "self", "allowStateChangesStart", "allowStateChanges", "allowStateChangesEnd", "f", "keys", "i", "v", "reaction", "initialRender", "reactiveRender", "e", "_class", "global", "hoistNonReactStatics", "Provider", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "afterPaintEffects", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "__", "parentDom", "__k", "__m", "oldRoot", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "hookItem", "__N", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "PureComponent", "p", "c", "this", "context", "PureComponent", "prototype", "Component", "isPureReactComponent", "shouldComponentUpdate", "props", "state", "shallowDiffers", "this", "oldDiffHook", "options", "__b", "vnode", "type", "__f", "ref", "REACT_FORWARD_SYMBOL", "Symbol", "for", "oldCatchError", "options", "__e", "error", "newVNode", "oldVNode", "errorInfo", "then", "component", "vnode", "__", "__c", "__k", "oldUnmount", "unmount", "detachedClone", "detachedParent", "parentDom", "__H", "forEach", "effect", "assign", "__P", "map", "child", "removeOriginal", "originalParent", "__v", "appendChild", "Suspense", "this", "__u", "_suspenders", "__b", "suspended", "__a", "SuspenseList", "this", "_next", "_map", "options", "unmount", "vnode", "component", "__c", "__R", "__u", "type", "oldUnmount", "Suspense", "prototype", "Component", "promise", "suspendingVNode", "suspendingComponent", "c", "_suspenders", "push", "resolve", "suspended", "__v", "resolved", "onResolved", "onSuspensionComplete", "state", "__a", "suspendedVNode", "__k", "removeOriginal", "__P", "__O", "setState", "__b", "pop", "forceUpdate", "then", "componentWillUnmount", "render", "props", "detachedParent", "document", "createElement", "detachedComponent", "detachedClone", "fallback", "Fragment", "children", "list", "child", "node", "delete", "revealOrder", "size", "length", "SuspenseList", "prototype", "Component", "__a", "child", "list", "this", "delegated", "suspended", "__v", "node", "_map", "get", "unsuspend", "wrappedUnsuspend", "props", "revealOrder", "push", "resolve", "render", "_next", "Map", "children", "toChildArray", "reverse", "i", "length", "set", "componentDidUpdate", "componentDidMount", "_this", "forEach", "REACT_ELEMENT_TYPE", "Symbol", "for", "CAMEL_PROPS", "ON_ANI", "CAMEL_REPLACE", "IS_DOM", "document", "onChangeInputType", "type", "test", "vnode", "parent", "callback", "__k", "textContent", "preactRender", "__c", "Component", "prototype", "isReactComponent", "forEach", "key", "Object", "defineProperty", "configurable", "get", "this", "set", "v", "writable", "value", "oldEventHook", "options", "event", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "e", "persist", "nativeEvent", "currentComponent", "classNameDescriptorNonEnumberable", "enumerable", "class", "oldVNodeHook", "vnode", "type", "props", "normalizedProps", "isNonDashedType", "indexOf", "i", "IS_DOM", "lowerCased", "toLowerCase", "onChangeInputType", "ON_ANI", "test", "CAMEL_PROPS", "replace", "CAMEL_REPLACE", "multiple", "Array", "isArray", "toChildArray", "children", "child", "selected", "defaultValue", "className", "$$typeof", "REACT_ELEMENT_TYPE", "oldBeforeRender", "__r", "__c", "oldDiffed", "diffed", "dom", "__e", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "Options", "_a", "ElementState", "ElementType", "ModelType", "EventType", "OverlapMode", "SegmentDirection", "StepDrag", "_a", "e", "_b", "_c", "a", "b", "c", "d", "x", "y", "k", "p", "__read", "x", "y", "p2", "s", "t", "_a", "i", "c", "d", "__assign", "start", "end", "distance", "__spreadArray", "__read", "p", "_a", "x", "y", "_a", "__read", "x", "y", "e", "a2", "__extends", "Base", "x", "y", "z", "Vector", "r", "Point", "__extends", "Matrix", "v", "__spreadArray", "__read", "i", "j", "r", "_a", "a", "b", "c", "d", "e", "f", "angle", "__extends", "RotateMatrix", "__extends", "ScaleMatrix", "__extends", "TranslateMatrix", "i", "__assign", "x2", "y2", "x", "y", "_a", "r", "a", "b", "k", "m", "i", "v", "i", "i", "x", "a", "b", "c", "d", "y", "q", "s", "t", "i", "f", "s", "x", "y", "z", "n", "K", "H", "i", "l", "N", "M", "j", "t", "a", "b", "c", "d", "e", "T", "run", "p2", "t", "x2", "y2", "v", "w", "v2", "r", "BaseEdgeModel", "__assign", "_a", "distance", "x", "y", "__extends", "BezierEdgeModel", "__assign", "_a", "x", "y", "__read", "__decorate", "__extends", "LineEdgeModel", "__assign", "__extends", "PolylineEdgeModel", "__assign", "_a", "x", "y", "__read", "p2", "i", "__decorate", "BaseNodeModel", "_a", "x", "y", "__assign", "i", "__values", "r", "__read", "e", "f", "__decorate", "__extends", "CircleNodeModel", "r", "_a", "__assign", "x", "y", "__decorate", "__extends", "DiamondNodeModel", "_a", "__assign", "x", "y", "__read", "__decorate", "__extends", "EllipseNodeModel", "_a", "__assign", "x", "y", "__decorate", "__extends", "PolygonNodeModel", "_a", "__assign", "x", "y", "__read", "__decorate", "__extends", "RectNodeModel", "_a", "x", "y", "__assign", "__decorate", "__extends", "TextNodeModel", "__assign", "__decorate", "__extends", "HtmlNodeModel", "_a", "x", "y", "__decorate", "keys", "EditConfigModel", "__decorate", "EventEmitter", "once", "i", "_a", "GraphModel", "_a", "__spreadArray", "__read", "a", "b", "i", "x", "y", "j", "__assign", "maxX", "minX", "maxY", "minY", "__decorate", "SnaplineModel", "__assign", "x", "y", "i", "__decorate", "TransformModel", "_a", "__read", "x", "y", "__decorate", "__extends", "CanvasOverlay", "_a", "gridSize", "x", "y", "eventCenter", "u", "__assign", "__decorate", "observer", "_a", "x", "y", "_b", "__read", "k", "v", "u", "__assign", "_a", "__read", "k", "v", "u", "__assign", "x", "y", "_a", "__read", "k", "v", "u", "__assign", "_a", "__read", "k", "v", "u", "__assign", "_a", "x", "y", "r", "_b", "__read", "k", "v", "u", "__assign", "_a", "x", "y", "_b", "__read", "k", "v", "u", "__assign", "_a", "__read", "k", "v", "u", "__assign", "_a", "__read", "k", "v", "u", "__assign", "__extends", "BezierAdjustAnchor", "_a", "x", "y", "u", "__assign", "__extends", "BezierAdjustOverlay", "_a", "__read", "u", "__assign", "i", "__decorate", "observer", "__extends", "BackgroundOverlay", "u", "__extends", "Grid", "_a", "u", "d", "__decorate", "observer", "Grid", "defaultOptions", "__extends", "ModificationOverlay", "u", "__decorate", "observer", "__extends", "OutlineOverlay", "_a", "x", "y", "__assign", "u", "i", "__decorate", "observer", "__extends", "SnaplineOverlay", "_a", "x", "y", "__assign", "u", "__decorate", "observer", "__extends", "ToolOverlay", "_a", "t", "u", "__decorate", "observer", "__extends", "Graph", "u", "_a", "__assign", "__decorate", "observer", "__extends", "Anchor", "_a", "x", "y", "__read", "_b", "__assign", "u", "v", "__extends", "RotateControlPoint", "_a", "x", "y", "v", "angle", "u", "__assign", "__extends", "BaseText", "e", "_a", "draggable", "__read", "x", "y", "u", "__assign", "classNames", "__extends", "LineText", "__assign", "x", "y", "_a", "padding", "__read", "u", "ResizeControlIndex", "__extends", "ResizeControl", "_a", "index", "r", "__read", "x", "y", "__rest", "u", "__assign", "__extends", "ResizeControlGroup", "_a", "u", "__assign", "x", "y", "__extends", "BaseNode", "_a", "model", "x", "y", "gridSize", "__read", "e", "u", "__rest", "__assign", "__extends", "RectNode", "u", "__assign", "__extends", "CircleNode", "x", "y", "r", "u", "__assign", "__extends", "PolygonNode", "_a", "x", "y", "u", "__assign", "__extends", "DiamondNode", "u", "__assign", "__extends", "EllipseNode", "u", "__assign", "__extends", "TextNode", "x", "y", "__assign", "u", "__extends", "HtmlNode", "x", "y", "u", "__assign", "AdjustType", "__extends", "AdjustPoint", "_a", "x", "y", "edgeModel", "graphModel", "type", "__read", "__rest", "__assign", "u", "__extends", "Arrow", "_a", "__assign", "d", "u", "__extends", "BaseEdge", "_a", "e", "x", "y", "u", "__read", "__assign", "__extends", "BezierEdge", "_a", "u", "__assign", "__read", "__extends", "LineEdge", "u", "__assign", "_a", "d", "__extends", "PolylineEdge", "_a", "__read", "e", "u", "__assign", "d", "i", "Dnd", "e", "__assign", "_a", "x", "y", "__extends", "TextEditTool", "_a", "__assign", "x", "y", "__read", "u", "__decorate", "observer", "x", "y", "__extends", "MultipleSelect", "_a", "eventCenter", "__spreadArray", "__read", "x", "y", "u", "__decorate", "observer", "Tool", "_a", "_a", "Keyboard", "Mousetrap", "_a", "keys", "callback", "action", "invariant", "x", "invariant", "fromPromise", "p", "__decorate", "c", "r", "d", "i", "StreamListener", "observable", "__decorate", "__assign", "t", "s", "i", "n", "p", "c", "r", "d", "ViewModel", "invariant", "i", "_a", "__extends", "extendStatics", "d", "b", "p", "ObservableGroupMap", "x", "_b", "_c", "DeepMapEntry", "l", "m", "c", "DeepMap", "r", "History", "__assign", "distance", "LogicFlow", "__assign", "_a", "observer", "e", "distance", "x", "y", "__spreadArray", "__read", "q", "u", "LogicFlow", "observer"]
}
