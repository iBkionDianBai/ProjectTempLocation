{
  "version": 3,
  "sources": ["../../@logicflow/extension/src/bpmn/constant.ts", "../../@logicflow/extension/src/bpmn/getBpmnId.ts", "../../@logicflow/extension/src/bpmn/events/StartEvent.ts", "../../@logicflow/extension/src/bpmn/events/EndEvent.ts", "../../@logicflow/extension/src/bpmn/flow/SequenceFlow.ts", "../../@logicflow/extension/src/bpmn/gateways/ExclusiveGateway.ts", "../../@logicflow/extension/src/bpmn/tasks/ServiceTask.ts", "../../@logicflow/extension/src/bpmn/tasks/UserTask.ts", "../../@logicflow/extension/src/bpmn/index.ts", "../../@logicflow/extension/src/bpmn-adapter/bpmnIds.ts", "../../@logicflow/extension/src/bpmn-adapter/json2xml.ts", "../../@logicflow/extension/src/bpmn-adapter/xml2json.ts", "../../@logicflow/extension/src/bpmn-adapter/index.ts", "../../@logicflow/extension/src/bpmn-elements/utils.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Event/EndEventFactory.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Event/IntermediateCatchEvent.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Event/StartEventFactory.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Event/boundaryEventFactory.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Event/IntermediateThrowEvent.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Event/index.ts", "../../@logicflow/extension/src/bpmn-elements/presets/icons.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Gateway/gateway.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Gateway/index.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Task/task.ts", "../../@logicflow/extension/src/NodeResize/control/Control.tsx", "../../@logicflow/extension/src/NodeResize/control/ControlGroup.tsx", "../../@logicflow/extension/src/NodeResize/node/EllipseResize.tsx", "../../@logicflow/extension/src/NodeResize/node/DiamondResize.tsx", "../../@logicflow/extension/src/NodeResize/node/HtmlResize.tsx", "../../@logicflow/extension/src/NodeResize/node/RectResize.tsx", "../../@logicflow/extension/src/NodeResize/index.ts", "../../@logicflow/extension/src/materials/group/GroupNode.ts", "../../@logicflow/extension/src/materials/group/index.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Task/subProcess.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Task/index.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Flow/sequenceFlow.ts", "../../@logicflow/extension/src/bpmn-elements/presets/Flow/index.ts", "../../@logicflow/extension/src/bpmn-elements/index.ts", "../../@logicflow/extension/src/bpmn-elements-adapter/constant.ts", "../../@logicflow/extension/src/bpmn-elements-adapter/xml2json.ts", "../../@logicflow/extension/src/bpmn-elements-adapter/json2xml.ts", "../../@logicflow/extension/src/bpmn-elements-adapter/index.ts", "../../@logicflow/extension/src/tools/snapshot/utils.ts", "../../@logicflow/extension/src/tools/snapshot/index.ts", "../../@logicflow/extension/src/turbo-adapter/index.ts", "../../@logicflow/extension/src/insert-node-in-polyline/edge.ts", "../../@logicflow/extension/src/insert-node-in-polyline/index.ts", "../../@logicflow/extension/src/components/control/index.ts", "../../@logicflow/extension/src/components/menu/index.ts", "../../@logicflow/extension/src/components/context-menu/index.ts", "../../@logicflow/extension/src/components/dnd-panel/index.ts", "../../@logicflow/extension/src/components/selection-select/index.ts", "../../@logicflow/extension/src/components/mini-map/index.ts", "../../@logicflow/extension/src/materials/curved-edge/index.ts", "../../@logicflow/extension/src/materials/node-selection/index.ts", "../../@logicflow/extension/src/tools/flow-path/index.ts", "../../@logicflow/extension/src/tools/auto-layout/index.ts", "../../@logicflow/extension/src/components/highlight/index.ts"],
  "sourcesContent": ["import LogicFlow from '@logicflow/core'\n\nexport const StartEventConfig = {\n  width: 40,\n  height: 40,\n}\n\nexport const EndEventConfig = {\n  width: 40,\n  height: 40,\n}\n\nexport const ExclusiveGatewayConfig = {\n  width: 40,\n  height: 40,\n}\n\nexport const ServiceTaskConfig = {\n  width: 100,\n  height: 80,\n}\n\nexport const UserTaskConfig = {\n  width: 100,\n  height: 80,\n}\n\nexport const theme: Partial<LogicFlow.Theme> = {\n  rect: {\n    radius: 5,\n    stroke: 'rgb(24, 125, 255)',\n  },\n  circle: {\n    r: 18,\n    stroke: 'rgb(24, 125, 255)',\n  },\n  polygon: {\n    stroke: 'rgb(24, 125, 255)',\n  },\n  polyline: {\n    stroke: 'rgb(24, 125, 255)',\n    hoverStroke: 'rgb(24, 125, 255)',\n    selectedStroke: 'rgb(24, 125, 255)',\n  },\n  edgeText: {\n    textWidth: 100,\n    overflowMode: 'default',\n    fontSize: 12,\n    background: {\n      fill: 'white',\n      height: 14,\n      stroke: 'transparent',\n      radius: 3,\n    },\n  },\n}\n", "class IDS {\n  private _ids: Set<string>\n\n  constructor() {\n    globalThis._ids = this\n    this._ids = new Set()\n  }\n\n  generateId() {\n    return 'xxxxxxx'.replace(/[x]/g, (c) => {\n      const r = (Math.random() * 16) | 0\n      const v = c === 'x' ? r : (r & 0x3) | 0x8\n      return v.toString(16)\n    })\n  }\n\n  next() {\n    let id = this.generateId()\n    while (this._ids.has(id)) {\n      id = this.generateId()\n    }\n    this._ids.add(id)\n    return id\n  }\n}\n\nconst ids = globalThis?._ids || new IDS()\n\nexport function getBpmnId(): string {\n  return ids.next()\n}\n", "import { CircleNode, CircleNodeModel } from '@logicflow/core'\nimport { getBpmnId } from '../getBpmnId'\n\nclass StartEventModel extends CircleNodeModel {\n  static extendKey = 'StartEventModel'\n\n  constructor(data, graphModel) {\n    if (!data.id) {\n      data.id = `Event_${getBpmnId()}`\n    }\n    if (!data.text) {\n      data.text = ''\n    }\n    if (data.text && typeof data.text === 'string') {\n      data.text = {\n        value: data.text,\n        x: data.x,\n        y: data.y + 40,\n      }\n    }\n    // fix: 不能直接全部加，会导致下载后再次上传，位置错误。\n    // data.text.y += 40;\n    super(data, graphModel)\n  }\n\n  setAttributes(): void {\n    this.r = 18\n  }\n\n  getConnectedTargetRules() {\n    const rules = super.getConnectedTargetRules()\n    const notAsTarget = {\n      message: '起始节点不能作为边的终点',\n      validate: () => false,\n    }\n    rules.push(notAsTarget)\n    return rules\n  }\n}\n\nclass StartEventView extends CircleNode {\n  static extendKey = 'StartEventNode'\n}\n\nexport const StartEvent = {\n  type: 'bpmn:startEvent',\n  view: StartEventView,\n  model: StartEventModel,\n}\n\nexport { StartEventModel, StartEventView }\nexport default StartEvent\n", "import { CircleNode, CircleNodeModel, h } from '@logicflow/core'\nimport { getBpmnId } from '../getBpmnId'\n\nexport class EndEventModel extends CircleNodeModel {\n  static extendKey = 'EndEventModel'\n\n  constructor(data, graphModel) {\n    if (!data.id) {\n      data.id = `Event_${getBpmnId()}`\n    }\n    if (!data.text) {\n      data.text = ''\n    }\n    if (data.text && typeof data.text === 'string') {\n      data.text = {\n        value: data.text,\n        x: data.x,\n        y: data.y + 40,\n      }\n    }\n    super(data, graphModel)\n  }\n\n  setAttributes(): void {\n    this.r = 18\n  }\n\n  getConnectedSourceRules() {\n    const rules = super.getConnectedSourceRules()\n    const notAsSource = {\n      message: '结束节点不能作为边的起点',\n      validate: () => false,\n    }\n    rules.push(notAsSource)\n    return rules\n  }\n}\n\nexport class EndEventView extends CircleNode {\n  static extendKey = 'EndEventView'\n\n  getAnchorStyle() {\n    return {\n      visibility: 'hidden',\n    }\n  }\n\n  getShape(): h.JSX.Element {\n    const { model } = this.props\n    const style = model.getNodeStyle()\n    const { x, y, r } = model as CircleNodeModel\n    const outCircle = super.getShape()\n    return h(\n      'g',\n      {},\n      outCircle,\n      h('circle', {\n        ...style,\n        cx: x,\n        cy: y,\n        r: r - 5,\n      }),\n    )\n  }\n}\n\nexport const EndEvent = {\n  type: 'bpmn:endEvent',\n  view: EndEventView,\n  model: EndEventModel,\n}\n\nexport default EndEvent\n", "import { PolylineEdge, PolylineEdgeModel } from '@logicflow/core'\nimport { getBpmnId } from '../getBpmnId'\n\nexport class SequenceFlowModel extends PolylineEdgeModel {\n  static extendKey = 'SequenceFlowModel'\n\n  constructor(data, graphModel) {\n    if (!data.id) {\n      data.id = `Flow_${getBpmnId()}`\n    }\n    super(data, graphModel)\n  }\n}\n\nexport class SequenceFlowView extends PolylineEdge {\n  static extendKey = 'SequenceFlowEdge'\n}\n\nexport const SequenceFlow = {\n  type: 'bpmn:sequenceFlow',\n  view: SequenceFlowView,\n  model: SequenceFlowModel,\n}\n\nexport default SequenceFlow\n", "import LogicFlow, {\n  h,\n  GraphModel,\n  PolygonNode,\n  PolygonNodeModel,\n} from '@logicflow/core'\nimport { getBpmnId } from '../getBpmnId'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport class ExclusiveGatewayModel extends PolygonNodeModel {\n  static extendKey = 'ExclusiveGatewayModel'\n\n  constructor(data: NodeConfig, graphModel: GraphModel) {\n    if (!data.id) {\n      data.id = `Gateway_${getBpmnId()}`\n    }\n    if (!data.text) {\n      data.text = ''\n    }\n    if (data.text && typeof data.text === 'string') {\n      data.text = {\n        value: data.text,\n        x: data.x,\n        y: data.y + 40,\n      }\n    }\n    super(data, graphModel)\n    this.points = [\n      [25, 0],\n      [50, 25],\n      [25, 50],\n      [0, 25],\n    ]\n  }\n}\n\nexport class ExclusiveGatewayView extends PolygonNode {\n  static extendKey = 'ExclusiveGatewayNode'\n\n  getShape(): h.JSX.Element {\n    const { model } = this.props\n    const { x, y, width, height, points } = model as PolygonNodeModel\n    const style = model.getNodeStyle()\n    return h(\n      'g',\n      {\n        transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n      },\n      // @ts-ignore TODO: 确认 h('polygon') 报错的问题\n      h('polygon', {\n        ...style,\n        x,\n        y,\n        points,\n      }),\n      h('path', {\n        d: 'm 16,15 7.42857142857143,9.714285714285715 -7.42857142857143,9.714285714285715 3.428571428571429,0 5.714285714285715,-7.464228571428572 5.714285714285715,7.464228571428572 3.428571428571429,0 -7.42857142857143,-9.714285714285715 7.42857142857143,-9.714285714285715 -3.428571428571429,0 -5.714285714285715,7.464228571428572 -5.714285714285715,-7.464228571428572 -3.428571428571429,0 z',\n        ...style,\n      }),\n    )\n  }\n}\n\nexport const ExclusiveGateway = {\n  type: 'bpmn:exclusiveGateway',\n  view: ExclusiveGatewayView,\n  model: ExclusiveGatewayModel,\n}\n\nexport default ExclusiveGateway\n", "import { h, RectNodeModel, RectNode } from '@logicflow/core'\nimport { getBpmnId } from '../getBpmnId'\n\nexport class ServiceTaskModel extends RectNodeModel {\n  static extendKey = 'ServiceTaskModel'\n\n  constructor(data, graphModel) {\n    if (!data.id) {\n      data.id = `Activity_${getBpmnId()}`\n    }\n    super(data, graphModel)\n  }\n}\n\nexport class ServiceTaskView extends RectNode {\n  static extendKey = 'ServiceTaskNode'\n\n  getLabelShape(): h.JSX.Element {\n    const { model } = this.props\n    const { x, y, width, height } = model\n    const style = model.getNodeStyle()\n    return h(\n      'svg',\n      {\n        x: x - width / 2 + 5,\n        y: y - height / 2 + 5,\n        width: 30,\n        height: 30,\n        viewBox: '0 0 1274 1024',\n      },\n      h('path', {\n        fill: style.stroke,\n        d: 'M882.527918 434.149934c-2.234901-5.303796-7.311523-8.853645-13.059434-9.138124l-61.390185-3.009544c-6.635117-20.973684-15.521508-41.175795-26.513864-60.282968l42.051745-47.743374c4.308119-4.889357 4.955872-12.004405 1.602498-17.59268-46.384423-77.30362-103.969956-101.422947-106.400309-102.410438-5.332449-2.170432-11.432377-1.090844-15.693424 2.77009L654.674467 240.664222c-17.004279-8.654101-35.092239-15.756869-53.995775-21.210068l-3.26537-66.490344c-0.280386-5.747911-3.833305-10.824533-9.134031-13.059434-1.683339-0.709151-30.193673-12.391215-76.866668-12.051477-46.672996-0.339738-75.18333 11.342326-76.866668 12.051477-5.300726 2.234901-8.853645 7.311523-9.134031 13.059434l-3.26537 66.490344c-18.903535 5.453199-36.991496 12.555967-53.995775 21.210068l-48.450479-43.922349c-4.261047-3.860934-10.360975-4.940522-15.693424-2.77009-2.430352 0.98749-60.015885 25.106818-106.400309 102.410438-3.353374 5.588275-2.705622 12.703323 1.602498 17.59268l42.051745 47.743374c-10.992355 19.107173-19.878746 39.309284-26.513864 60.282968l-61.390185 3.009544c-5.747911 0.284479-10.824533 3.834328-13.059434 9.138124-1.01512 2.415003-24.687262 60.190871-2.822278 147.651828 1.583055 6.324032 7.072069 10.893094 13.57518 11.308557 5.892197 0.37146 11.751648 0.523933 17.419741 0.667196 14.498202 0.372483 28.193109 0.723477 40.908712 4.63353 4.212952 1.294482 6.435573 8.270361 9.349949 18.763342 1.287319 4.640694 2.617617 9.43693 4.484128 14.010085 1.794879 4.393054 3.75758 8.570189 5.66093 12.607132 1.302669 2.765997 2.529613 5.380544 3.689019 8.018627 2.986007 6.803963 2.682086 9.773598 2.578732 10.349719-3.061732 3.672646-6.391571 7.238868-9.91379 11.015891-1.810229 1.943258-3.680832 3.949962-5.523807 5.980201l-22.560832 24.8909c-3.865028 4.261047-4.940522 10.365068-2.774183 15.693424 0.991584 2.426259 25.102724 60.011792 102.414531 106.400309 5.588275 3.353374 12.703323 2.701528 17.591657-1.603521l23.476691-20.682042c2.346441-2.061962 4.64888-4.336772 6.875594-6.534833 9.05319-8.93858 14.018272-12.95608 17.73185-11.576663 3.305279 1.222851 6.907317 3.166109 10.720156 5.228071 3.325745 1.794879 6.764054 3.650133 10.465352 5.288446 6.016017 2.662643 12.120039 4.688789 18.019399 6.65149 6.827499 2.266623 13.279445 4.409426 18.819624 7.275707 1.518586 0.782829 1.926886 0.994654 2.358721 7.830339 0.726547 11.496845 1.25048 23.276123 1.753947 34.672684 0.264013 5.900384 0.528026 11.803837 0.815575 17.700127 0.284479 5.743818 3.833305 10.82044 9.138124 13.05534 1.654686 0.698918 29.371958 12.063757 74.869175 12.063757 0.328481 0 3.65832 0 3.986801 0 45.497217 0 73.214489-11.364839 74.869175-12.063757 5.304819-2.234901 8.853645-7.311523 9.138124-13.05534 0.287549-5.89629 0.551562-11.799744 0.815575-17.700127 0.503467-11.396561 1.027399-23.175839 1.753947-34.672684 0.431835-6.835685 0.840134-7.04751 2.358721-7.830339 5.54018-2.866281 11.992125-5.009084 18.819624-7.275707 5.89936-1.962701 12.003382-3.988848 18.019399-6.65149 3.701299-1.638313 7.139607-3.493567 10.465352-5.288446 3.812839-2.061962 7.414877-4.00522 10.720156-5.228071 3.713578-1.379417 8.67866 2.638083 17.73185 11.576663 2.226714 2.198062 4.529153 4.472871 6.875594 6.534833l23.476691 20.682042c4.888334 4.305049 12.003382 4.956895 17.591657 1.603521 77.311807-46.388517 101.422947-103.97405 102.414531-106.400309 2.166339-5.328355 1.090844-11.432377-2.774183-15.693424l-22.560832-24.8909c-1.842974-2.030239-3.713578-4.036943-5.523807-5.980201-3.52222-3.777023-6.852058-7.343245-9.91379-11.015891-0.103354-0.576121-0.407276-3.545756 2.578732-10.349719 1.159406-2.638083 2.38635-5.252631 3.689019-8.018627 1.90335-4.036943 3.866051-8.214079 5.66093-12.607132 1.866511-4.573155 3.196809-9.369392 4.484128-14.010085 2.914376-10.492982 5.136997-17.46886 9.349949-18.763342 12.715603-3.910053 26.41051-4.261047 40.908712-4.63353 5.668093-0.143263 11.527544-0.295735 17.419741-0.667196 6.503111-0.415462 11.992125-4.984524 13.57518-11.308557C907.21518 494.340805 883.543038 436.564937 882.527918 434.149934zM643.49894 643.761929c-35.280528 35.280528-82.191954 54.711066-132.086317 54.711066s-96.806813-19.430538-132.086317-54.711066c-35.280528-35.279504-54.711066-82.191954-54.711066-132.086317 0-49.894364 19.430538-96.80272 54.711066-132.082224 35.283598-35.284621 82.191954-54.711066 132.086317-54.711066s96.80579 19.426445 132.086317 54.711066c35.279504 35.279504 54.711066 82.187861 54.711066 132.082224C698.210006 561.569976 678.782537 608.482425 643.49894 643.761929z',\n      }),\n    )\n  }\n\n  getShape(): h.JSX.Element {\n    const { model } = this.props\n    const { x, y, width, height, radius } = model\n    const style = model.getNodeStyle()\n    return h('g', {}, [\n      h('rect', {\n        x: x - width / 2,\n        y: y - height / 2,\n        rx: radius,\n        ry: radius,\n        width,\n        height,\n        ...style,\n      }),\n      this.getLabelShape(),\n    ])\n  }\n}\n\nexport const ServiceTask = {\n  type: 'bpmn:serviceTask',\n  view: ServiceTaskView,\n  model: ServiceTaskModel,\n}\n\nexport default ServiceTask\n", "import { h, RectNode, RectNodeModel } from '@logicflow/core'\nimport { getBpmnId } from '../getBpmnId'\n\nexport class UserTaskModel extends RectNodeModel {\n  static extendKey = 'UserTaskModel'\n\n  constructor(data, graphModel) {\n    if (!data.id) {\n      data.id = `Activity_${getBpmnId()}`\n    }\n    super(data, graphModel)\n  }\n}\n\nexport class UserTaskView extends RectNode {\n  static extendKey = 'UserTaskNode'\n\n  getLabelShape(): h.JSX.Element {\n    const { model } = this.props\n    const { x, y, width, height } = model\n    const style = model.getNodeStyle()\n    return h(\n      'svg',\n      {\n        x: x - width / 2 + 5,\n        y: y - height / 2 + 5,\n        width: 25,\n        height: 25,\n        viewBox: '0 0 1274 1024',\n      },\n      h('path', {\n        fill: style.stroke,\n        d: 'M655.807326 287.35973m-223.989415 0a218.879 218.879 0 1 0 447.978829 0 218.879 218.879 0 1 0-447.978829 0ZM1039.955839 895.482975c-0.490184-212.177424-172.287821-384.030443-384.148513-384.030443-211.862739 0-383.660376 171.85302-384.15056 384.030443L1039.955839 895.482975z',\n      }),\n    )\n  }\n\n  getShape(): h.JSX.Element {\n    const { model } = this.props\n    const { x, y, width, height, radius } = model\n    const style = model.getNodeStyle()\n    // todo: 将basic-shape对外暴露，在这里可以直接用。现在纯手写有点麻烦。\n    return h('g', {}, [\n      h('rect', {\n        ...style,\n        x: x - width / 2,\n        y: y - height / 2,\n        rx: radius,\n        ry: radius,\n        width,\n        height,\n      }),\n      this.getLabelShape(),\n    ])\n  }\n}\n\nexport const UserTask = {\n  type: 'bpmn:userTask',\n  view: UserTaskView,\n  model: UserTaskModel,\n}\n\nexport default UserTask\n", "import LogicFlow from '@logicflow/core'\nimport { theme } from './constant'\nimport {\n  StartEvent,\n  StartEventView,\n  StartEventModel,\n  EndEvent,\n  EndEventView,\n  EndEventModel,\n} from './events'\nimport { SequenceFlow, SequenceFlowView, SequenceFlowModel } from './flow'\nimport {\n  ExclusiveGateway,\n  ExclusiveGatewayView,\n  ExclusiveGatewayModel,\n} from './gateways'\nimport {\n  UserTask,\n  UserTaskView,\n  UserTaskModel,\n  ServiceTask,\n  ServiceTaskView,\n  ServiceTaskModel,\n} from './tasks'\n\nimport ExtensionDefinition = LogicFlow.ExtensionDefinition\n\nconst BpmnElement: ExtensionDefinition = {\n  pluginName: 'bpmnElement',\n\n  install(lf) {\n    lf.setTheme(theme)\n    lf.register(StartEvent)\n    lf.register(EndEvent)\n    lf.register(ExclusiveGateway)\n    lf.register(UserTask)\n    lf.register(ServiceTask)\n    // 支持自定义bpmn元素的边\n    if (!lf.options.customBpmnEdge) {\n      lf.register(SequenceFlow)\n      lf.setDefaultEdgeType('bpmn:sequenceFlow')\n    }\n  },\n}\n\nexport {\n  BpmnElement,\n  StartEventModel,\n  StartEventView,\n  EndEventView,\n  EndEventModel,\n  ExclusiveGatewayView,\n  ExclusiveGatewayModel,\n  UserTaskView,\n  UserTaskModel,\n  ServiceTaskView,\n  ServiceTaskModel,\n  SequenceFlowView,\n  SequenceFlowModel,\n}\n", "export class IDs {\n  private _ids: Set<string>\n\n  constructor() {\n    globalThis._ids = this\n    this._ids = new Set()\n  }\n\n  generateId() {\n    return 'xxxxxxx'.replace(/[x]/g, (c) => {\n      const r = (Math.random() * 16) | 0\n      const v = c === 'x' ? r : (r & 0x3) | 0x8\n      return v.toString(16)\n    })\n  }\n\n  next() {\n    let id = this.generateId()\n    while (this._ids.has(id)) {\n      id = this.generateId()\n    }\n    this._ids.add(id)\n    return id\n  }\n}\n\nconst ids = globalThis?._ids || new IDs()\n\nexport function getBpmnId(): string {\n  return ids.next()\n}\n", "function type(obj) {\r\n  return Object.prototype.toString.call(obj)\r\n}\r\n\r\nfunction addSpace(depth) {\r\n  return '  '.repeat(depth)\r\n}\r\n\r\nfunction handleAttributes(o: any) {\r\n  let t = o\r\n  if (type(o) === '[object Object]') {\r\n    t = {}\r\n    Object.keys(o).forEach((k) => {\r\n      let tk = k\r\n      if (k.charAt(0) === '-') {\r\n        tk = k.substring(1)\r\n      }\r\n      t[tk] = handleAttributes(o[k])\r\n    })\r\n  } else if (Array.isArray(o)) {\r\n    t = []\r\n    o.forEach((item, index) => {\r\n      t[index] = handleAttributes(item)\r\n    })\r\n  }\r\n  return t\r\n}\r\n\r\nfunction getAttributes(obj: any) {\r\n  let tmp = obj\r\n  try {\r\n    if (typeof tmp !== 'string') {\r\n      tmp = JSON.parse(obj)\r\n    }\r\n  } catch (error) {\r\n    tmp = JSON.stringify(handleAttributes(obj)).replace(/\"/g, \"'\")\r\n  }\r\n  return tmp\r\n}\r\n\r\nconst tn = '\\t\\n'\r\n\r\n// @see issue https://github.com/didi/LogicFlow/issues/718, refactoring of function toXml\r\nfunction toXml(obj: string | any[] | Object, name: string, depth: number) {\r\n  const frontSpace = addSpace(depth)\r\n  let str = ''\r\n  if (name === '#text') {\r\n    return tn + frontSpace + obj\r\n  } else if (name === '#cdata-section') {\r\n    return tn + frontSpace + '<![CDATA[' + obj + ']]>'\r\n  } else if (name === '#comment') {\r\n    return tn + frontSpace + '<!--' + obj + '-->'\r\n  }\r\n  if (`${name}`.charAt(0) === '-') {\r\n    return ' ' + name.substring(1) + '=\"' + getAttributes(obj) + '\"'\r\n  } else {\r\n    if (Array.isArray(obj)) {\r\n      obj.forEach((item) => {\r\n        str += toXml(item, name, depth + 1)\r\n      })\r\n    } else if (type(obj) === '[object Object]') {\r\n      const keys = Object.keys(obj)\r\n      let attributes = ''\r\n      let children = ''\r\n      str += (depth === 0 ? '' : tn + frontSpace) + '<' + name\r\n      keys.forEach((k) => {\r\n        k.charAt(0) === '-'\r\n          ? (attributes += toXml(obj[k], k, depth + 1))\r\n          : (children += toXml(obj[k], k, depth + 1))\r\n      })\r\n      str +=\r\n        attributes +\r\n        (children !== '' ? `>${children}${tn + frontSpace}</${name}>` : ' />')\r\n    } else {\r\n      str += tn + frontSpace + `<${name}>${obj.toString()}</${name}>`\r\n    }\r\n  }\r\n\r\n  return str\r\n}\r\n\r\nfunction lfJson2Xml(o: Object) {\r\n  let xmlStr = ''\r\n  for (var m in o) {\r\n    xmlStr += toXml(o[m], m, 0)\r\n  }\r\n  return xmlStr\r\n}\r\n\r\nexport { lfJson2Xml, handleAttributes }\r\n", "// @ts-nocheck\n\n// ========================================================================\n//  XML.ObjTree -- XML source code from/to JavaScript object like E4X\n// ========================================================================\n\nlet XML = function () {}\n\n//  constructor\nXML.ObjTree = function () {\n  // @ts-ignore\n  return this\n}\n\n//  class variables\n\nXML.ObjTree.VERSION = '0.23'\n\n//  object prototype\n\nXML.ObjTree.prototype.xmlDecl = '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n'\nXML.ObjTree.prototype.attr_prefix = '-'\n\n//  method: parseXML( xmlsource )\n\nXML.ObjTree.prototype.parseXML = function (xml) {\n  var root\n  if (window.DOMParser) {\n    var xmldom = new DOMParser()\n    //      xmldom.async = false;           // DOMParser is always sync-mode\n    var dom = xmldom.parseFromString(xml, 'application/xml')\n    if (!dom) return\n    root = dom.documentElement\n  } else if (window.ActiveXObject) {\n    xmldom = new ActiveXObject('Microsoft.XMLDOM')\n    xmldom.async = false\n    xmldom.loadXML(xml)\n    root = xmldom.documentElement\n  }\n  if (!root) return\n  return this.parseDOM(root)\n}\n\n//  method: parseHTTP( url, options, callback )\n\nXML.ObjTree.prototype.parseHTTP = function (url, options, callback) {\n  var myOpt = {}\n  for (var key in options) {\n    myOpt[key] = options[key] // copy object\n  }\n  if (!myOpt.method) {\n    if (\n      typeof myOpt.postBody == 'undefined' &&\n      typeof myOpt.postbody == 'undefined' &&\n      typeof myOpt.parameters == 'undefined'\n    ) {\n      myOpt.method = 'get'\n    } else {\n      myOpt.method = 'post'\n    }\n  }\n  if (callback) {\n    myOpt.asynchronous = true // async-mode\n    var __this = this\n    var __func = callback\n    var __save = myOpt.onComplete\n    myOpt.onComplete = function (trans) {\n      var tree\n      if (trans && trans.responseXML && trans.responseXML.documentElement) {\n        tree = __this.parseDOM(trans.responseXML.documentElement)\n      }\n      __func(tree, trans)\n      if (__save) __save(trans)\n    }\n  } else {\n    myOpt.asynchronous = false // sync-mode\n  }\n  var trans\n  if (typeof HTTP != 'undefined' && HTTP.Request) {\n    myOpt.uri = url\n    var req = new HTTP.Request(myOpt)\n    if (req) trans = req.transport\n  } else if (typeof Ajax != 'undefined' && Ajax.Request) {\n    var req = new Ajax.Request(url, myOpt)\n    if (req) trans = req.transport\n  }\n  if (callback) return trans\n  if (trans && trans.responseXML && trans.responseXML.documentElement) {\n    return this.parseDOM(trans.responseXML.documentElement)\n  }\n}\n\nXML.ObjTree.prototype.parseDOM = function (root) {\n  if (!root) return\n\n  this.__force_array = {}\n  if (this.force_array) {\n    for (var i = 0; i < this.force_array.length; i++) {\n      this.__force_array[this.force_array[i]] = 1\n    }\n  }\n\n  var json = this.parseElement(root) // parse root node\n  if (this.__force_array[root.nodeName]) {\n    json = [json]\n  }\n  if (root.nodeType != 11) {\n    // DOCUMENT_FRAGMENT_NODE\n    var tmp = {}\n    tmp[root.nodeName] = json // root nodeName\n    json = tmp\n  }\n  return json\n}\n\n//  method: parseElement( element )\n/**\n * @reference node type reference https://www.w3schools.com/xml/dom_nodetype.asp\n */\nXML.ObjTree.prototype.parseElement = function (elem) {\n  //  PROCESSING_INSTRUCTION_NODE\n  if (elem.nodeType == 7) {\n    return\n  }\n\n  //  TEXT_NODE CDATA_SECTION_NODE COMMENT_NODE\n  if (elem.nodeType == 3 || elem.nodeType == 4 || elem.nodeType == 8) {\n    var bool = elem.nodeValue.match(/[^\\x00-\\x20]/)\n    if (bool == null) return // ignore white spaces\n    return elem.nodeValue\n  }\n\n  var retVal = null\n  var cnt = {}\n\n  if (elem.attributes && elem.attributes.length) {\n    retVal = {}\n    for (var i = 0; i < elem.attributes.length; i++) {\n      var key = elem.attributes[i].nodeName\n      if (typeof key != 'string') continue\n      var val = elem.attributes[i].nodeValue\n      try {\n        val = JSON.parse(elem.attributes[i].nodeValue.replace(/'/g, '\"'))\n      } catch (error) {\n        val = elem.attributes[i].nodeValue\n      }\n      if (!val) continue\n      key = this.attr_prefix + key\n      if (typeof cnt[key] == 'undefined') cnt[key] = 0\n      cnt[key]++\n      this.addNode(retVal, key, cnt[key], val)\n    }\n  }\n\n  //  parse child nodes (recursive)\n  if (elem.childNodes && elem.childNodes.length) {\n    var textOnly = true\n    if (retVal) textOnly = false // some attributes exists\n    for (var i = 0; i < elem.childNodes.length && textOnly; i++) {\n      var nType = elem.childNodes[i].nodeType\n      if (nType == 3 || nType == 4 || nType == 8) continue\n      textOnly = false\n    }\n    if (textOnly) {\n      if (!retVal) retVal = ''\n      for (var i = 0; i < elem.childNodes.length; i++) {\n        retVal += elem.childNodes[i].nodeValue\n      }\n    } else {\n      if (!retVal) retVal = {}\n      for (var i = 0; i < elem.childNodes.length; i++) {\n        var key = elem.childNodes[i].nodeName\n        if (typeof key != 'string') continue\n        var val = this.parseElement(elem.childNodes[i])\n        if (!val) continue\n        if (typeof cnt[key] == 'undefined') cnt[key] = 0\n        cnt[key]++\n        this.addNode(retVal, key, cnt[key], val)\n      }\n    }\n  } else {\n    // @see issue https://github.com/didi/LogicFlow/issues/1068\n    // if retVal is null, that means the elem doesn't have any attributes and children,\n    // the elem would be like: <a /> or <a></a>, so set retVal to empty object {}\n    retVal === null && (retVal = {})\n  }\n  return retVal\n}\n\n//  method: addNode( hash, key, count, value )\n\nXML.ObjTree.prototype.addNode = function (hash, key, counts, val) {\n  if (this.__force_array[key]) {\n    if (counts == 1) hash[key] = []\n    hash[key][hash[key].length] = val // push\n  } else if (counts == 1) {\n    // 1st sibling\n    hash[key] = val\n  } else if (counts == 2) {\n    // 2nd sibling\n    hash[key] = [hash[key], val]\n  } else {\n    // 3rd sibling and more\n    hash[key][hash[key].length] = val\n  }\n}\n\n//  method: writeXML( tree )\n\nXML.ObjTree.prototype.writeXML = function (tree) {\n  var xml = this.hash_to_xml(null, tree)\n  return this.xmlDecl + xml\n}\n\n//  method: hash_to_xml( tagName, tree )\n\nXML.ObjTree.prototype.hash_to_xml = function (name, tree) {\n  var elem = []\n  var attr = []\n  for (var key in tree) {\n    if (!tree.hasOwnProperty(key)) continue\n    var val = tree[key]\n    if (key.charAt(0) != this.attr_prefix) {\n      if (typeof val == 'undefined' || val == null) {\n        elem[elem.length] = '<' + key + ' />'\n      } else if (typeof val == 'object' && val.constructor == Array) {\n        elem[elem.length] = this.array_to_xml(key, val)\n      } else if (typeof val == 'object') {\n        elem[elem.length] = this.hash_to_xml(key, val)\n      } else {\n        elem[elem.length] = this.scalar_to_xml(key, val)\n      }\n    } else {\n      attr[attr.length] =\n        ' ' + key.substring(1) + '=\"' + this.xml_escape(val) + '\"'\n    }\n  }\n  var jattr = attr.join('')\n  var jelem = elem.join('')\n  if (typeof name == 'undefined' || name == null) {\n    // no tag\n  } else if (elem.length > 0) {\n    if (jelem.match(/\\n/)) {\n      jelem = '<' + name + jattr + '>\\n' + jelem + '</' + name + '>\\n'\n    } else {\n      jelem = '<' + name + jattr + '>' + jelem + '</' + name + '>\\n'\n    }\n  } else {\n    jelem = '<' + name + jattr + ' />\\n'\n  }\n  return jelem\n}\n\n//  method: array_to_xml( tagName, array )\n\nXML.ObjTree.prototype.array_to_xml = function (name, array) {\n  var out = []\n  for (var i = 0; i < array.length; i++) {\n    var val = array[i]\n    if (typeof val == 'undefined' || val == null) {\n      out[out.length] = '<' + name + ' />'\n    } else if (typeof val == 'object' && val.constructor == Array) {\n      out[out.length] = this.array_to_xml(name, val)\n    } else if (typeof val == 'object') {\n      out[out.length] = this.hash_to_xml(name, val)\n    } else {\n      out[out.length] = this.scalar_to_xml(name, val)\n    }\n  }\n  return out.join('')\n}\n\n//  method: scalar_to_xml( tagName, text )\n\nXML.ObjTree.prototype.scalar_to_xml = function (name, text) {\n  if (name == '#text') {\n    return this.xml_escape(text)\n  } else {\n    return '<' + name + '>' + this.xml_escape(text) + '</' + name + '>\\n'\n  }\n}\n\n//  method: xml_escape( text )\n\nXML.ObjTree.prototype.xml_escape = function (text) {\n  return text\n    .replace(/&/g, '&')\n    .replace(/</g, '<')\n    .replace(/>/g, '>')\n    .replace(/\"/g, '\"')\n}\n\n/*\n// ========================================================================\n\n=head1 NAME\n\nXML.ObjTree -- XML source code from/to JavaScript object like E4X\n\n=head1 SYNOPSIS\n\nvar xotree = new XML.ObjTree();\nvar tree1 = {\nroot: {\nnode: \"Hello, World!\"\n}\n};\nvar xml1 = xotree.writeXML( tree1 );        // object tree to XML source\nalert( \"xml1: \"+xml1 );\n\nvar xml2 = '<?xml version=\"1.0\"?><response><error>0</error></response>';\nvar tree2 = xotree.parseXML( xml2 );        // XML source to object tree\nalert( \"error: \"+tree2.response.error );\n\n=head1 DESCRIPTION\n\nXML.ObjTree class is a parser/generator between XML source code\nand JavaScript object like E4X, ECMAScript for XML.\nThis is a JavaScript version of the XML::TreePP module for Perl.\nThis also works as a wrapper for XMLHTTPRequest and successor to JKL.ParseXML class\nwhen this is used with prototype.js or JSAN's HTTP.Request class.\n\n=head2 JavaScript object tree format\n\nA sample XML source:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<family name=\"Kawasaki\">\n<father>Yasuhisa</father>\n<mother>Chizuko</mother>\n<children>\n<girl>Shiori</girl>\n<boy>Yusuke</boy>\n<boy>Kairi</boy>\n</children>\n</family>\n\nIts JavaScript object tree like JSON/E4X:\n\n{\n'family': {\n'-name':    'Kawasaki',\n'father':   'Yasuhisa',\n'mother':   'Chizuko',\n'children': {\n'girl': 'Shiori'\n'boy': [\n'Yusuke',\n'Kairi'\n]\n}\n}\n};\n\nEach elements are parsed into objects:\n\ntree.family.father;             # the father's given name.\n\nPrefix '-' is inserted before every attributes' name.\n\ntree.family[\"-name\"];           # this family's family name\n\nA array is used because this family has two boys.\n\ntree.family.children.boy[0];    # first boy's name\ntree.family.children.boy[1];    # second boy's name\ntree.family.children.girl;      # (girl has no other sisters)\n\n=head1 METHODS\n\n=head2 xotree = new XML.ObjTree()\n\nThis constructor method returns a new XML.ObjTree object.\n\n=head2 xotree.force_array = [ \"rdf:li\", \"item\", \"-xmlns\" ];\n\nThis property allows you to specify a list of element names\nwhich should always be forced into an array representation.\nThe default value is null, it means that context of the elements\nwill determine to make array or to keep it scalar.\n\n=head2 xotree.attr_prefix = '@';\n\nThis property allows you to specify a prefix character which is\ninserted before each attribute names.\nInstead of default prefix '-', E4X-style prefix '@' is also available.\nThe default character is '-'.\nOr set '@' to access attribute values like E4X, ECMAScript for XML.\nThe length of attr_prefix must be just one character and not be empty.\n\n=head2 tree = xotree.parseXML( xmlSrc );\n\nThis method loads an XML document using the supplied string\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseDOM( domNode );\n\nThis method parses a DOM tree (ex. responseXML.documentElement)\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseHTTP( url, options );\n\nThis method loads a XML file from remote web server\nand returns its JavaScript object converted.\nXMLHTTPRequest's synchronous mode is always used.\nThis mode blocks the process until the response is completed.\n\nFirst argument is a XML file's URL\nwhich must exist in the same domain as parent HTML file's.\nCross-domain loading is not available for security reasons.\n\nSecond argument is options' object which can contains some parameters:\nmethod, postBody, parameters, onLoading, etc.\n\nThis method requires JSAN's L<HTTP.Request> class or prototype.js's Ajax.Request class.\n\n=head2 xotree.parseHTTP( url, options, callback );\n\nIf a callback function is set as third argument,\nXMLHTTPRequest's asynchronous mode is used.\n\nThis mode calls a callback function with XML file's JavaScript object converted\nafter the response is completed.\n\n=head2 xmlSrc = xotree.writeXML( tree );\n\nThis method parses a JavaScript object tree\nand returns its XML source generated.\n\n=head1 EXAMPLES\n\n=head2 Text node and attributes\n\nIf a element has both of a text node and attributes\nor both of a text node and other child nodes,\ntext node's value is moved to a special node named \"#text\".\n\nvar xotree = new XML.ObjTree();\nvar xmlSrc = '<span class=\"author\">Kawasaki Yusuke</span>';\nvar tree = xotree.parseXML( xmlSrc );\nvar class = tree.span[\"-class\"];        # attribute\nvar name  = tree.span[\"#text\"];         # text node\n\n=head2 parseHTTP() method with HTTP-GET and sync-mode\n\nHTTP/Request.js or prototype.js must be loaded before calling this method.\n\nvar xotree = new XML.ObjTree();\nvar url = \"http://example.com/index.html\";\nvar tree = xotree.parseHTTP( url );\nxotree.attr_prefix = '@';                   // E4X-style\nalert( tree.html[\"@lang\"] );\n\nThis code shows C<lang=\"\"> attribute from a X-HTML source code.\n\n=head2 parseHTTP() method with HTTP-POST and async-mode\n\nThird argument is a callback function which is called on onComplete.\n\nvar xotree = new XML.ObjTree();\nvar url = \"http://example.com/mt-tb.cgi\";\nvar opts = {\npostBody:   \"title=...&excerpt=...&url=...&blog_name=...\"\n};\nvar func = function ( tree ) {\nalert( tree.response.error );\n};\nxotree.parseHTTP( url, opts, func );\n\nThis code send a track back ping and shows its response code.\n\n=head2 Simple RSS reader\n\nThis is a RSS reader which loads RDF file and displays all items.\n\nvar xotree = new XML.ObjTree();\nxotree.force_array = [ \"rdf:li\", \"item\" ];\nvar url = \"http://example.com/news-rdf.xml\";\nvar func = function( tree ) {\nvar elem = document.getElementById(\"rss_here\");\nfor( var i=0; i<tree[\"rdf:RDF\"].item.length; i++ ) {\nvar divTag = document.createElement( \"div\" );\nvar aTag = document.createElement( \"a\" );\naTag.href = tree[\"rdf:RDF\"].item[i].link;\nvar title = tree[\"rdf:RDF\"].item[i].title;\nvar tNode = document.createTextNode( title );\naTag.appendChild( tNode );\ndivTag.appendChild( aTag );\nelem.appendChild( divTag );\n}\n};\nxotree.parseHTTP( url, {}, func );\n\n=head2  XML-RPC using writeXML, prototype.js and parseDOM\n\nIf you wish to use prototype.js's Ajax.Request class by yourself:\n\nvar xotree = new XML.ObjTree();\nvar reqTree = {\nmethodCall: {\nmethodName: \"weblogUpdates.ping\",\nparams: {\nparam: [\n{ value: \"Kawa.net xp top page\" },  // 1st param\n{ value: \"http://www.kawa.net/\" }   // 2nd param\n]\n}\n}\n};\nvar reqxml = xotree.writeXML( reqTree );       // JS-Object to XML code\nvar url = \"http://example.com/xmlrpc\";\nvar func = function( req ) {\nvar resDom = req.responseXML.documentElement;\nxotree.force_array = [ \"member\" ];\nvar resTree = xotree.parseDOM( resDom );   // XML-DOM to JS-Object\nalert( resTree.methodResponse.params.param.value.struct.member[0].value.string );\n};\nvar opt = {\nmethod:         \"post\",\npostBody:       reqxml,\nasynchronous:   true,\nonComplete:     func\n};\nnew Ajax.Request( url, opt );\n\n=head1 AUTHOR\n\nYusuke Kawasaki http://www.kawa.net/\n=head1 COPYRIGHT AND LICENSE\n\nCopyright (c) 2005-2006 Yusuke Kawasaki. All rights reserved.\nThis program is free software; you can redistribute it and/or\nmodify it under the Artistic license. Or whatever license I choose,\nwhich I will do instead of keeping this documentation like it is.\n\n=cut\n// ========================================================================\n*/\n\nconst lfXml2Json = (xmlData) => {\n  return new XML.ObjTree().parseXML(xmlData)\n}\n\nexport { lfXml2Json }\n", "import { getBpmnId } from './bpmnIds'\nimport { handleAttributes, lfJson2Xml } from './json2xml'\nimport { lfXml2Json } from './xml2json'\n\nimport {\n  ExclusiveGatewayConfig,\n  StartEventConfig,\n  EndEventConfig,\n  ServiceTaskConfig,\n  UserTaskConfig,\n} from '../bpmn/constant'\n\ntype NodeConfig = {\n  id: string\n  properties?: Record<string, unknown>\n  text?: {\n    x: number\n    y: number\n    value: string\n  }\n  type: string\n  x: number\n  y: number\n}\n\ntype Point = {\n  x: number\n  y: number\n}\n\ntype EdgeConfig = {\n  id: string\n  sourceNodeId: string\n  targetNodeId: string\n  type: string\n  startPoint?: {\n    x: number\n    y: number\n  }\n  endPoint?: {\n    x: number\n    y: number\n  }\n  text?: {\n    x: number\n    y: number\n    value: string\n  }\n  pointsList?: Point[]\n  properties: Record<string, unknown>\n}\n\nenum BpmnElements {\n  START = 'bpmn:startEvent',\n  END = 'bpmn:endEvent',\n  GATEWAY = 'bpmn:exclusiveGateway',\n  USER = 'bpmn:userTask',\n  SYSTEM = 'bpmn:serviceTask',\n  FLOW = 'bpmn:sequenceFlow',\n}\n\nconst defaultAttrs = [\n  '-name',\n  '-id',\n  'bpmn:incoming',\n  'bpmn:outgoing',\n  '-sourceRef',\n  '-targetRef',\n]\n\n/**\n * 将普通json转换为xmlJson\n * xmlJson中property会以“-”开头\n * 如果没有“-”表示为子节点\n * fix issue https://github.com/didi/LogicFlow/issues/718, contain the process of #text/#cdata and array\n * @param retainedFields retainedField会和默认的defaultRetainedFields:\n * [\"properties\", \"startPoint\", \"endPoint\", \"pointsList\"]合并\n * 这意味着出现在这个数组里的字段当它的值是数组或是对象时不会被视为一个节点而是一个属性\n * @reference node type reference https://www.w3schools.com/xml/dom_nodetype.asp\n */\nconst defaultRetainedFields = [\n  'properties',\n  'startPoint',\n  'endPoint',\n  'pointsList',\n]\n\nfunction toXmlJson(retainedFields?: string[]) {\n  const fields = retainedFields\n    ? defaultRetainedFields.concat(retainedFields)\n    : defaultRetainedFields\n  return (json: string | any[] | Record<string, any>) => {\n    function ToXmlJson(obj: string | any[] | Record<string, any>) {\n      const xmlJson = {}\n      if (typeof obj === 'string') {\n        return obj\n      }\n      if (Array.isArray(obj)) {\n        return obj.map((j) => ToXmlJson(j))\n      }\n      Object.entries(obj).forEach(([key, value]) => {\n        if (typeof value !== 'object') {\n          // node type reference https://www.w3schools.com/xml/dom_nodetype.asp\n          if (\n            key.indexOf('-') === 0 ||\n            ['#text', '#cdata-section', '#comment'].includes(key)\n          ) {\n            xmlJson[key] = value\n          } else {\n            xmlJson[`-${key}`] = value\n          }\n        } else if (fields.includes(key)) {\n          xmlJson[`-${key}`] = ToXmlJson(value)\n        } else {\n          xmlJson[key] = ToXmlJson(value)\n        }\n      })\n      return xmlJson\n    }\n\n    return ToXmlJson(json)\n  }\n}\n\n/**\n * 将xmlJson转换为普通的json，在内部使用。\n */\nfunction toNormalJson(xmlJson) {\n  const json = {}\n  Object.entries(xmlJson).forEach(([key, value]) => {\n    if (key.indexOf('-') === 0) {\n      json[key.substring(1)] = handleAttributes(value)\n    } else if (typeof value === 'string') {\n      json[key] = value\n    } else if (Object.prototype.toString.call(value) === '[object Object]') {\n      json[key] = toNormalJson(value)\n    } else if (Array.isArray(value)) {\n      // contain the process of array\n      json[key] = value.map((v) => toNormalJson(v))\n    } else {\n      json[key] = value\n    }\n  })\n  return json\n}\n\n/**\n * 设置bpmn process信息\n * 目标格式请参考examples/bpmn.json\n * bpmn因为是默认基于xml格式的，其特点与json存在差异。\n * 1) 如果是xml的属性，json中属性用'-'开头\n * 2）如果只有一个子元素，json中表示为正常属性\n * 3）如果是多个子元素，json中使用数组存储\n */\nfunction convertLf2ProcessData(\n  bpmnProcessData,\n  data,\n  retainedFields?: string[],\n) {\n  const nodeMap = new Map()\n  data.nodes.forEach((node: NodeConfig) => {\n    const processNode = {\n      '-id': node.id, // 如果是xml的属性，json中属性用'-'开头\n    }\n    if (node.text?.value) {\n      processNode['-name'] = node.text.value\n    }\n    if (node.properties) {\n      const properties = toXmlJson(retainedFields)(node.properties)\n      Object.assign(processNode, properties)\n    }\n    nodeMap.set(node.id, processNode)\n\n    if (!bpmnProcessData[node.type]) {\n      bpmnProcessData[node.type] = processNode // 如果只有一个子元素，json中表示为正常属性\n    } else if (Array.isArray(bpmnProcessData[node.type])) {\n      // 如果是多个子元素，json中使用数组存储\n      bpmnProcessData[node.type].push(processNode)\n    } else {\n      // 如果是多个子元素，json中使用数组存储\n      bpmnProcessData[node.type] = [bpmnProcessData[node.type], processNode]\n    }\n  })\n  const sequenceFlow = data.edges.map((edge: EdgeConfig) => {\n    const targetNode = nodeMap.get(edge.targetNodeId)\n    if (!targetNode['bpmn:incoming']) {\n      targetNode['bpmn:incoming'] = edge.id\n    } else if (Array.isArray(targetNode['bpmn:incoming'])) {\n      targetNode['bpmn:incoming'].push(edge.id)\n    } else {\n      targetNode['bpmn:incoming'] = [targetNode['bpmn:incoming'], edge.id]\n    }\n    const edgeConfig = {\n      '-id': edge.id,\n      '-sourceRef': edge.sourceNodeId,\n      '-targetRef': edge.targetNodeId,\n    }\n    if (edge.text?.value) {\n      edgeConfig['-name'] = edge.text?.value\n    }\n    if (edge.properties) {\n      const properties = toXmlJson(retainedFields)(edge.properties)\n      Object.assign(edgeConfig, properties)\n    }\n    return edgeConfig\n  })\n  // @see https://github.com/didi/LogicFlow/issues/325\n  // 需要保证incoming在outgoing之前\n  data.edges.forEach((edge: EdgeConfig) => {\n    const sourceNode = nodeMap.get(edge.sourceNodeId)\n    if (!sourceNode['bpmn:outgoing']) {\n      sourceNode['bpmn:outgoing'] = edge.id\n    } else if (Array.isArray(sourceNode['bpmn:outgoing'])) {\n      sourceNode['bpmn:outgoing'].push(edge.id)\n    } else {\n      // 字符串转数组\n      sourceNode['bpmn:outgoing'] = [sourceNode['bpmn:outgoing'], edge.id]\n    }\n  })\n  bpmnProcessData[BpmnElements.FLOW] = sequenceFlow\n}\n\n/**\n * adapterOut 设置bpmn diagram信息\n */\nfunction convertLf2DiagramData(bpmnDiagramData, data) {\n  bpmnDiagramData['bpmndi:BPMNEdge'] = data.edges.map((edge) => {\n    const edgeId = edge.id\n    const pointsList = edge.pointsList.map(({ x, y }) => ({\n      '-x': x,\n      '-y': y,\n    }))\n    const diagramData = {\n      '-id': `${edgeId}_di`,\n      '-bpmnElement': edgeId,\n      'di:waypoint': pointsList,\n    }\n    if (edge.text?.value) {\n      diagramData['bpmndi:BPMNLabel'] = {\n        'dc:Bounds': {\n          '-x': edge.text.x - (edge.text.value.length * 10) / 2,\n          '-y': edge.text.y - 7,\n          '-width': edge.text.value.length * 10,\n          '-height': 14,\n        },\n      }\n    }\n    return diagramData\n  })\n  bpmnDiagramData['bpmndi:BPMNShape'] = data.nodes.map((node) => {\n    const nodeId = node.id\n    let width = 100\n    let height = 80\n    let { x, y } = node\n    // bpmn坐标是基于左上角，LogicFlow基于中心点，此处处理一下。\n    const shapeConfig = BpmnAdapter.shapeConfigMap.get(node.type)\n    if (shapeConfig) {\n      width = shapeConfig.width\n      height = shapeConfig.height\n    }\n    x -= width / 2\n    y -= height / 2\n    const diagramData = {\n      '-id': `${nodeId}_di`,\n      '-bpmnElement': nodeId,\n      'dc:Bounds': {\n        '-x': x,\n        '-y': y,\n        '-width': width,\n        '-height': height,\n      },\n    }\n    if (node.text?.value) {\n      diagramData['bpmndi:BPMNLabel'] = {\n        'dc:Bounds': {\n          '-x': node.text.x - (node.text.value.length * 10) / 2,\n          '-y': node.text.y - 7,\n          '-width': node.text.value.length * 10,\n          '-height': 14,\n        },\n      }\n    }\n    return diagramData\n  })\n}\n\n/**\n * 将bpmn数据转换为LogicFlow内部能识别数据\n */\nfunction convertBpmn2LfData(bpmnData) {\n  let nodes: NodeConfig[] = []\n  let edges: EdgeConfig[] = []\n  const definitions = bpmnData['bpmn:definitions']\n  if (definitions) {\n    const process = definitions['bpmn:process']\n    Object.keys(process).forEach((key) => {\n      if (key.indexOf('bpmn:') === 0) {\n        const value = process[key]\n        if (key === BpmnElements.FLOW) {\n          const bpmnEdges =\n            definitions['bpmndi:BPMNDiagram']['bpmndi:BPMNPlane'][\n              'bpmndi:BPMNEdge'\n            ]\n          edges = getLfEdges(value, bpmnEdges)\n        } else {\n          const shapes =\n            definitions['bpmndi:BPMNDiagram']['bpmndi:BPMNPlane'][\n              'bpmndi:BPMNShape'\n            ]\n          nodes = nodes.concat(getLfNodes(value, shapes, key))\n        }\n      }\n    })\n  }\n  return {\n    nodes,\n    edges,\n  }\n}\n\nfunction getLfNodes(value, shapes, key) {\n  const nodes: NodeConfig[] = []\n  if (Array.isArray(value)) {\n    // 数组\n    value.forEach((val) => {\n      let shapeValue\n      if (Array.isArray(shapes)) {\n        shapeValue = shapes.find(\n          (shape) => shape['-bpmnElement'] === val['-id'],\n        )\n      } else {\n        shapeValue = shapes\n      }\n      const node = getNodeConfig(shapeValue, key, val)\n      nodes.push(node)\n    })\n  } else {\n    let shapeValue\n    if (Array.isArray(shapes)) {\n      shapeValue = shapes.find(\n        (shape) => shape['-bpmnElement'] === value['-id'],\n      )\n    } else {\n      shapeValue = shapes\n    }\n    const node = getNodeConfig(shapeValue, key, value)\n    nodes.push(node)\n  }\n  return nodes\n}\n\nfunction getNodeConfig(shapeValue, type, processValue) {\n  let x = Number(shapeValue['dc:Bounds']['-x'])\n  let y = Number(shapeValue['dc:Bounds']['-y'])\n  const name = processValue['-name']\n  const shapeConfig = BpmnAdapter.shapeConfigMap.get(type)\n  if (shapeConfig) {\n    x += shapeConfig.width / 2\n    y += shapeConfig.height / 2\n  }\n  let properties\n  // 判断是否存在额外的属性，将额外的属性放到properties中\n  Object.entries(processValue).forEach(([key, value]) => {\n    if (defaultAttrs.indexOf(key) === -1) {\n      if (!properties) properties = {}\n      properties[key] = value\n    }\n  })\n  if (properties) {\n    properties = toNormalJson(properties)\n  }\n  let text\n  if (name) {\n    text = {\n      x,\n      y,\n      value: name,\n    }\n    // 自定义文本位置\n    if (\n      shapeValue['bpmndi:BPMNLabel'] &&\n      shapeValue['bpmndi:BPMNLabel']['dc:Bounds']\n    ) {\n      const textBounds = shapeValue['bpmndi:BPMNLabel']['dc:Bounds']\n      text.x = Number(textBounds['-x']) + Number(textBounds['-width']) / 2\n      text.y = Number(textBounds['-y']) + Number(textBounds['-height']) / 2\n    }\n  }\n  const nodeConfig: NodeConfig = {\n    id: shapeValue['-bpmnElement'],\n    type,\n    x,\n    y,\n    properties,\n  }\n  if (text) {\n    nodeConfig.text = text\n  }\n  return nodeConfig\n}\n\nfunction getLfEdges(value, bpmnEdges) {\n  const edges: EdgeConfig[] = []\n  if (Array.isArray(value)) {\n    value.forEach((val) => {\n      let edgeValue\n      if (Array.isArray(bpmnEdges)) {\n        edgeValue = bpmnEdges.find(\n          (edge) => edge['-bpmnElement'] === val['-id'],\n        )\n      } else {\n        edgeValue = bpmnEdges\n      }\n      edges.push(getEdgeConfig(edgeValue, val))\n    })\n  } else {\n    let edgeValue\n    if (Array.isArray(bpmnEdges)) {\n      edgeValue = bpmnEdges.find(\n        (edge) => edge['-bpmnElement'] === value['-id'],\n      )\n    } else {\n      edgeValue = bpmnEdges\n    }\n    edges.push(getEdgeConfig(edgeValue, value))\n  }\n  return edges\n}\n\nfunction getEdgeConfig(edgeValue, processValue): EdgeConfig {\n  let text\n  const textVal = processValue['-name']\n  if (textVal) {\n    const textBounds = edgeValue['bpmndi:BPMNLabel']['dc:Bounds']\n    // 如果边文本换行，则其偏移量应该是最长一行的位置\n    let textLength = 0\n    textVal.split('\\n').forEach((textSpan) => {\n      if (textLength < textSpan.length) {\n        textLength = textSpan.length\n      }\n    })\n\n    text = {\n      value: textVal,\n      x: Number(textBounds['-x']) + (textLength * 10) / 2,\n      y: Number(textBounds['-y']) + 7,\n    }\n  }\n  let properties\n  // 判断是否存在额外的属性，将额外的属性放到properties中\n  Object.entries(processValue).forEach(([key, value]) => {\n    if (defaultAttrs.indexOf(key) === -1) {\n      if (!properties) properties = {}\n      properties[key] = value\n    }\n  })\n  if (properties) {\n    properties = toNormalJson(properties)\n  }\n  const edge: EdgeConfig = {\n    id: processValue['-id'],\n    type: BpmnElements.FLOW,\n    pointsList: edgeValue['di:waypoint'].map((point) => ({\n      x: Number(point['-x']),\n      y: Number(point['-y']),\n    })),\n    sourceNodeId: processValue['-sourceRef'],\n    targetNodeId: processValue['-targetRef'],\n    properties,\n  }\n  if (text) {\n    edge.text = text\n  }\n  return edge\n}\n\nclass BpmnAdapter {\n  static pluginName = 'bpmn-adapter'\n  static shapeConfigMap = new Map()\n  processAttributes: {\n    ['-isExecutable']: string\n    ['-id']: string\n  }\n  definitionAttributes: {\n    ['-id']: string\n    ['-xmlns:xsi']: string\n    ['-xmlns:bpmn']: string\n    ['-xmlns:bpmndi']: string\n    ['-xmlns:dc']: string\n    ['-xmlns:di']: string\n    ['-targetNamespace']: string\n    ['-exporter']: string\n    ['-exporterVersion']: string\n    [key: string]: any\n  }\n\n  constructor({ lf }) {\n    lf.adapterIn = (data) => this.adapterIn(data)\n    lf.adapterOut = (data, retainedFields?: string[]) =>\n      this.adapterOut(data, retainedFields)\n    this.processAttributes = {\n      '-isExecutable': 'true',\n      '-id': `Process_${getBpmnId()}`,\n    }\n    this.definitionAttributes = {\n      '-id': `Definitions_${getBpmnId()}`,\n      '-xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      '-xmlns:bpmn': 'http://www.omg.org/spec/BPMN/20100524/MODEL',\n      '-xmlns:bpmndi': 'http://www.omg.org/spec/BPMN/20100524/DI',\n      '-xmlns:dc': 'http://www.omg.org/spec/DD/20100524/DC',\n      '-xmlns:di': 'http://www.omg.org/spec/DD/20100524/DI',\n      '-targetNamespace': 'http://logic-flow.org',\n      '-exporter': 'logicflow',\n      '-exporterVersion': '1.2.0',\n    }\n  }\n\n  setCustomShape(key, val) {\n    BpmnAdapter.shapeConfigMap.set(key, val)\n  }\n\n  /**\n   * @param retainedFields?: string[] (可选)属性保留字段，retainedField会和默认的defaultRetainedFields:\n   * [\"properties\", \"startPoint\", \"endPoint\", \"pointsList\"]合并，\n   * 这意味着出现在这个数组里的字段当它的值是数组或是对象时不会被视为一个节点而是一个属性。\n   */\n  adapterOut = (data, retainedFields?: string[]) => {\n    const bpmnProcessData = { ...this.processAttributes }\n    convertLf2ProcessData(bpmnProcessData, data, retainedFields)\n    const bpmnDiagramData = {\n      '-id': 'BPMNPlane_1',\n      '-bpmnElement': bpmnProcessData['-id'],\n    }\n    convertLf2DiagramData(bpmnDiagramData, data)\n    const definitions = this.definitionAttributes\n    definitions['bpmn:process'] = bpmnProcessData\n    definitions['bpmndi:BPMNDiagram'] = {\n      '-id': 'BPMNDiagram_1',\n      'bpmndi:BPMNPlane': bpmnDiagramData,\n    }\n    const bpmnData = {\n      'bpmn:definitions': definitions,\n    }\n    return bpmnData\n  }\n  adapterIn = (bpmnData) => {\n    if (bpmnData) {\n      return convertBpmn2LfData(bpmnData)\n    }\n  }\n}\n\nBpmnAdapter.shapeConfigMap.set(BpmnElements.START, {\n  width: StartEventConfig.width,\n  height: StartEventConfig.height,\n})\nBpmnAdapter.shapeConfigMap.set(BpmnElements.END, {\n  width: EndEventConfig.width,\n  height: EndEventConfig.height,\n})\nBpmnAdapter.shapeConfigMap.set(BpmnElements.GATEWAY, {\n  width: ExclusiveGatewayConfig.width,\n  height: ExclusiveGatewayConfig.height,\n})\nBpmnAdapter.shapeConfigMap.set(BpmnElements.SYSTEM, {\n  width: ServiceTaskConfig.width,\n  height: ServiceTaskConfig.height,\n})\nBpmnAdapter.shapeConfigMap.set(BpmnElements.USER, {\n  width: UserTaskConfig.width,\n  height: UserTaskConfig.height,\n})\n\nclass BpmnXmlAdapter extends BpmnAdapter {\n  static pluginName = 'bpmnXmlAdapter'\n\n  constructor(data) {\n    super(data)\n    const { lf } = data\n    lf.adapterIn = this.adapterXmlIn\n    lf.adapterOut = this.adapterXmlOut\n  }\n\n  adapterXmlIn = (bpmnData) => {\n    const json = lfXml2Json(bpmnData)\n    return this.adapterIn(json)\n  }\n  adapterXmlOut = (data, retainedFields?: string[]) => {\n    const outData = this.adapterOut(data, retainedFields)\n    return lfJson2Xml(outData)\n  }\n}\n\nexport { BpmnAdapter, BpmnXmlAdapter, toXmlJson, toNormalJson }\n\nexport default BpmnAdapter\n", "/* eslint-disable no-bitwise */\nexport function groupRule(this: any) {\n  const rule = {\n    message: '分组外的节点不允许连接分组内的',\n    validate: (\n      _sourceNode: any,\n      _targetNode: any,\n      // _sourceAnchor: any,\n      // _targetAnchor: any,\n    ) => {\n      const isSourceNodeInsideTheGroup = !!_sourceNode.properties.parent\n      const isTargetNodeInsideTheGroup = !!_targetNode.properties.parent\n\n      return !(!isSourceNodeInsideTheGroup && isTargetNodeInsideTheGroup)\n    },\n  }\n  this.targetRules.push(rule)\n}\n\n/* eslint-disable no-bitwise */\nclass IDs {\n  private _ids: Set<string>\n\n  constructor() {\n    globalThis._ids = this\n    this._ids = new Set()\n  }\n\n  generateId() {\n    const id = 'xxxxxxx'.replace(/[x]/g, (c) => {\n      const r = (Math.random() * 16) | 0\n      const v = c === 'x' ? r : (r & 0x3) | 0x8\n      return v.toString(16)\n    })\n    return id\n  }\n\n  next() {\n    let id = this.generateId()\n    while (this._ids.has(id)) {\n      id = this.generateId()\n    }\n    this._ids.add(id)\n    return id\n  }\n}\n\nconst ids = globalThis?._ids || new IDs()\n\nexport function genBpmnId(): string {\n  return ids.next()\n}\n", "/* eslint-disable @typescript-eslint/naming-convention */\nimport {\n  h,\n  CircleNode,\n  CircleNodeModel,\n  GraphModel,\n  LogicFlow,\n} from '@logicflow/core'\nimport { genBpmnId, groupRule } from '../../utils'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport function EndEventFactory(lf: any): {\n  type: string\n  model: any\n  view: any\n} {\n  const [definition] = lf.useDefinition()\n\n  class view extends CircleNode {\n    getAnchorStyle() {\n      return {\n        visibility: 'hidden',\n      }\n    }\n\n    getShape() {\n      const { model } = this.props\n      const style = model.getNodeStyle()\n      const { x, y, r, width, height, properties } = model as CircleNodeModel\n      const outCircle = super.getShape()\n      const { definitionType } = properties\n      const { icon } = definition.endEvent?.get(definitionType) || {}\n      const i = Array.isArray(icon)\n        ? h(\n            'g',\n            {\n              transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            },\n            ...icon,\n          )\n        : h('path', {\n            transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            d: icon,\n            style:\n              'fill: black; stroke-linecap: round; stroke-linejoin: round; stroke: white; stroke-width: 1px;',\n          })\n      return h(\n        'g',\n        {},\n        outCircle,\n        h('circle', {\n          ...style,\n          strokeWidth: 2,\n          cx: x,\n          cy: y,\n          r: r - 2,\n        }),\n        i,\n      )\n    }\n  }\n\n  class model extends CircleNodeModel {\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Event_${genBpmnId()}`\n      }\n      if (!data.text) {\n        data.text = ''\n      }\n      if (data.text && typeof data.text === 'string') {\n        data.text = {\n          value: data.text,\n          x: data.x,\n          y: data.y + 40,\n        }\n      }\n      const { properties = {} } =\n        definition.endEvent?.get(data.properties?.definitionType) || {}\n      data.properties = {\n        ...properties,\n        ...data.properties,\n      }\n      data.properties?.definitionType &&\n        (data.properties!.definitionId = `Definition_${genBpmnId()}`)\n      super(data, graphModel)\n      groupRule.call(this)\n    }\n\n    setAttributes(): void {\n      this.r = 18\n    }\n\n    getConnectedSourceRules() {\n      const rules = super.getConnectedSourceRules()\n      const notAsSource = {\n        message: '结束节点不能作为边的起点',\n        validate: (source: any, _target: any) => {\n          console.log('_target', _target)\n          return source !== this\n        },\n      }\n      rules.push(notAsSource)\n      return rules\n    }\n  }\n\n  return {\n    type: 'bpmn:endEvent',\n    view,\n    model,\n  }\n}\n", "/* eslint-disable @typescript-eslint/naming-convention */\nimport LogicFlow, {\n  h,\n  CircleNode,\n  CircleNodeModel,\n  GraphModel,\n} from '@logicflow/core'\nimport { genBpmnId, groupRule } from '../../utils'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport function IntermediateCatchEventFactory(lf: any): {\n  type: string\n  model: any\n  view: any\n} {\n  const [definition] = lf.useDefinition()\n\n  class view extends CircleNode {\n    getAnchorStyle() {\n      return {\n        visibility: 'hidden',\n      }\n    }\n\n    getShape() {\n      // @ts-ignore\n      const { model } = this.props\n      const style = model.getNodeStyle()\n      const { x, y, r, width, height, properties } = model as CircleNodeModel\n      const { definitionType } = properties\n      const { icon } =\n        definition.intermediateCatchEvent?.get(definitionType) || {}\n\n      const i = Array.isArray(icon)\n        ? h(\n            'g',\n            {\n              transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            },\n            ...icon,\n          )\n        : h('path', {\n            transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            d: icon,\n          })\n      return h(\n        'g',\n        {},\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r,\n          strokeWidth: 1.5,\n        }),\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r: r - 3,\n          strokeWidth: 1.5,\n        }),\n        i,\n      )\n    }\n  }\n\n  class model extends CircleNodeModel {\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Event_${genBpmnId()}`\n      }\n      if (!data.text) {\n        data.text = ''\n      }\n      if (data.text && typeof data.text === 'string') {\n        data.text = {\n          value: data.text,\n          x: data.x,\n          y: data.y + 40,\n        }\n      }\n      const { properties = {} } =\n        definition.intermediateCatchEvent?.get(\n          data.properties?.definitionType,\n        ) || {}\n      data.properties = {\n        ...properties,\n        ...data.properties,\n      }\n      data.properties?.definitionType &&\n        (data.properties!.definitionId = `Definition_${genBpmnId()}`)\n      super(data, graphModel)\n      groupRule.call(this)\n    }\n\n    setAttributes(): void {\n      this.r = 18\n    }\n  }\n\n  return {\n    type: 'bpmn:intermediateCatchEvent',\n    view,\n    model,\n  }\n}\n", "/* eslint-disable @typescript-eslint/naming-convention */\nimport {\n  h,\n  CircleNode,\n  CircleNodeModel,\n  GraphModel,\n  LogicFlow,\n} from '@logicflow/core'\nimport { genBpmnId } from '../../utils'\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport function StartEventFactory(lf: any): {\n  type: string\n  model: any\n  view: any\n} {\n  const [definition] = lf.useDefinition()\n\n  class view extends CircleNode {\n    getAnchorStyle() {\n      return {\n        visibility: 'hidden',\n      }\n    }\n\n    getShape() {\n      // @ts-ignore\n      const { model } = this.props\n      const style = model.getNodeStyle()\n      const { x, y, r, width, height, properties } = model as CircleNodeModel\n      const { definitionType, isInterrupting } = properties\n      const { icon } = definition.startEvent?.get(definitionType) || {}\n      const i = Array.isArray(icon)\n        ? h(\n            'g',\n            {\n              transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            },\n            ...icon,\n          )\n        : h('path', {\n            transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            d: icon,\n            style:\n              'fill: white; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n          })\n      return h(\n        'g',\n        {},\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r,\n          strokeDasharray: isInterrupting ? '5,5' : '',\n          strokeWidth: 2,\n        }),\n        i,\n      )\n    }\n  }\n\n  class model extends CircleNodeModel {\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Event_${genBpmnId()}`\n      }\n      if (!data.text) {\n        data.text = ''\n      }\n      if (data.text && typeof data.text === 'string') {\n        data.text = {\n          value: data.text,\n          x: data.x,\n          y: data.y + 40,\n        }\n      }\n      const { properties = {} } =\n        definition.startEvent?.get(data.properties?.definitionType) || {}\n      data.properties = {\n        ...properties,\n        ...data.properties,\n      }\n      data.properties?.definitionType &&\n        (data.properties!.definitionId = `Definition_${genBpmnId()}`)\n      super(data, graphModel)\n    }\n\n    setAttributes(): void {\n      this.r = 18\n    }\n\n    getConnectedTargetRules() {\n      const rules = super.getConnectedTargetRules()\n      const notAsSource = {\n        message: '起始节点不能作为边的终点',\n        validate: (_source: any, target: any) => {\n          if (target === this) {\n            return false\n          }\n          return true\n        },\n      }\n      rules.push(notAsSource)\n      return rules\n    }\n  }\n\n  return {\n    type: 'bpmn:startEvent',\n    view,\n    model,\n  }\n}\n", "/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/naming-convention */\nimport {\n  CircleNode,\n  CircleNodeModel,\n  GraphModel,\n  h,\n  LogicFlow,\n} from '@logicflow/core'\nimport { genBpmnId, groupRule } from '../../utils'\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport function BoundaryEventFactory(lf: any): {\n  type: string\n  model: any\n  view: any\n} {\n  const [definition] = lf.useDefinition()\n\n  class view extends CircleNode {\n    getAnchorStyle() {\n      return {\n        visibility: 'hidden',\n      }\n    }\n\n    getShape() {\n      // @ts-ignore\n      const { model } = this.props\n      const style = model.getNodeStyle()\n      const { x, y, r, width, height, properties } = model as CircleNodeModel\n      const { definitionType, cancelActivity } = properties\n      const { icon } = definition.boundaryEvent?.get(definitionType) || {}\n      const i = Array.isArray(icon)\n        ? h(\n            'g',\n            {\n              transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            },\n            ...icon,\n          )\n        : h('path', {\n            transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            d: icon,\n          })\n      return h(\n        'g',\n        {},\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r,\n          strokeDasharray: cancelActivity ? '' : '5,5',\n          strokeWidth: 1.5,\n        }),\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r: r - 3,\n          strokeDasharray: cancelActivity ? '' : '5,5',\n          strokeWidth: 1.5,\n        }),\n        i,\n      )\n    }\n  }\n\n  class model extends CircleNodeModel {\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Event_${genBpmnId()}`\n      }\n      if (!data.text) {\n        data.text = ''\n      }\n      if (data.text && typeof data.text === 'string') {\n        data.text = {\n          value: data.text,\n          x: data.x,\n          y: data.y + 40,\n        }\n      }\n      const { properties = {} } =\n        definition.boundaryEvent?.get(data.properties?.definitionType) || {}\n\n      data.properties = {\n        attachedToRef: '',\n        cancelActivity: true,\n        ...properties,\n        ...data.properties,\n      }\n      data.properties?.definitionType &&\n        (data.properties!.definitionId = `Definition_${genBpmnId()}`)\n      super(data, graphModel)\n      groupRule.call(this)\n    }\n\n    initNodeData(data: any) {\n      super.initNodeData(data)\n      this.r = 20\n      this.autoToFront = false // 不自动设置到最顶部，而是使用自己的zIndex\n      this.zIndex = 99999 // 保证边界事件节点用于在最上方\n    }\n\n    setAttributes(): void {\n      this.r = 18\n    }\n  }\n\n  return {\n    type: 'bpmn:boundaryEvent',\n    view,\n    model,\n  }\n}\n", "import {\n  h,\n  CircleNode,\n  CircleNodeModel,\n  GraphModel,\n  LogicFlow,\n} from '@logicflow/core'\nimport { genBpmnId, groupRule } from '../../utils'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport function IntermediateThrowEventFactory(lf: any): {\n  type: string\n  model: any\n  view: any\n} {\n  const [definition] = lf.useDefinition()\n\n  class view extends CircleNode {\n    getAnchorStyle() {\n      return {\n        visibility: 'hidden',\n      }\n    }\n\n    getShape() {\n      // @ts-ignore\n      const { model } = this.props\n      const style = model.getNodeStyle()\n      const { x, y, r, width, height, properties } = model as CircleNodeModel\n      const { definitionType } = properties\n      const { icon } =\n        definition.intermediateThrowEvent?.get(definitionType) || {}\n\n      const i = Array.isArray(icon)\n        ? h(\n            'g',\n            {\n              transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            },\n            ...icon,\n          )\n        : h('path', {\n            transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            d: icon,\n            style: 'fill: black',\n          })\n      return h(\n        'g',\n        {},\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r,\n          strokeWidth: 1.5,\n        }),\n        h('circle', {\n          ...style,\n          cx: x,\n          cy: y,\n          r: r - 3,\n          strokeWidth: 1.5,\n        }),\n        i,\n      )\n    }\n  }\n\n  class model extends CircleNodeModel {\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Event_${genBpmnId()}`\n      }\n      if (!data.text) {\n        data.text = ''\n      }\n      if (data.text && typeof data.text === 'string') {\n        data.text = {\n          value: data.text,\n          x: data.x,\n          y: data.y + 40,\n        }\n      }\n      const { properties = {} } =\n        definition.intermediateThrowEvent?.get(\n          data.properties?.definitionType,\n        ) || {}\n      data.properties = {\n        ...properties,\n        ...data.properties,\n      }\n      data.properties?.definitionType &&\n        (data.properties!.definitionId = `Definition_${genBpmnId()}`)\n      super(data, graphModel)\n      groupRule.call(this)\n    }\n\n    setAttributes(): void {\n      this.r = 18\n    }\n  }\n\n  return {\n    type: 'bpmn:intermediateThrowEvent',\n    view,\n    model,\n  }\n}\n", "import LogicFlow from '@logicflow/core'\nimport { EndEventFactory } from './EndEventFactory'\nimport { IntermediateCatchEventFactory } from './IntermediateCatchEvent'\nimport { StartEventFactory } from './StartEventFactory'\nimport { BoundaryEventFactory } from './boundaryEventFactory'\nimport { IntermediateThrowEventFactory } from './IntermediateThrowEvent'\n\nexport function registerEventNodes(lf: LogicFlow) {\n  lf.register(StartEventFactory(lf))\n  lf.register(EndEventFactory(lf))\n  lf.register(IntermediateCatchEventFactory(lf))\n  lf.register(IntermediateThrowEventFactory(lf))\n  lf.register(BoundaryEventFactory(lf))\n}\n", "import { h } from '@logicflow/core'\n\n// event\nexport const messageIcon =\n  'm 8.459999999999999,11.34 l 0,12.6 l 18.900000000000002,0 l 0,-12.6 z l 9.450000000000001,5.4 l 9.450000000000001,-5.4'\nexport const timerIcon: h.JSX.Element[] = [\n  h('circle', {\n    cx: 18,\n    cy: 18,\n    r: 11,\n    style:\n      'stroke-linecap: round;stroke-linejoin: round;stroke: rgb(34, 36, 42);stroke-width: 2px;fill: white',\n  }),\n  h('path', {\n    d: 'M 18,18 l 2.25,-7.5 m -2.25,7.5 l 5.25,1.5',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 2px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(0,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(30,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(60,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(90,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(120,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(150,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(180,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(210,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(240,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(270,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(300,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n  h('path', {\n    d: 'M 18,18 m 0,7.5 l -0,2.25',\n    transform: 'rotate(330,18,18)',\n    style:\n      'fill: none; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  }),\n]\nexport const errorIcon =\n  'm 7.2,25.991999999999997 0.09350000000000001,-0.025300000000000003 7.3392,-9.610700000000001 7.667000000000001,8.9661 4.7003,-18.2204 -5.8707,11.6501 -7.299600000000001,-9.585400000000002 z'\nexport const escalationIcon = 'M 18,7.2 l 8,20 l -8,-7 l -8,7 Z'\nexport const compensationIcon =\n  'm 7.92,18 9,-6.5 0,13 z m 9.3,-0.4 8.7,-6.1 0,13 -8.7,-6.1 z'\nexport const conditionalIcon =\n  'M 10.5,8.5 l 14.5,0 l 0,18 l -14.5,0 Z M 12.5,11.5 l 10.5,0 M 12.5,14.5 l 10.5,0 M 12.5,17.5 l 10.5,0 M 12.5,20.5 l 10.5,0 M 12.5,23.5 l 10.5,0 M 12.5,26.5 l 10.5,0 '\nexport const linkIcon =\n  'm 20.52,9.468 0,4.4375 -13.5,0 0,6.75 13.5,0 0,4.4375 9.84375,-7.8125 -9.84375,-7.8125 z'\nexport const signalIcon = 'M 18,7.2 l 9,16.2 l -18,0 Z'\nexport const terminateIcon: h.JSX.Element[] = [\n  h('circle', {\n    cx: 18,\n    cy: 18,\n    r: 10,\n    style:\n      'stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 4px; fill: rgb(34, 36, 42);',\n  }),\n]\n\n// gateway\nexport const exclusiveIcon =\n  'm 16,15 7.42857142857143,9.714285714285715 -7.42857142857143,9.714285714285715 3.428571428571429,0 5.714285714285715,-7.464228571428572 5.714285714285715,7.464228571428572 3.428571428571429,0 -7.42857142857143,-9.714285714285715 7.42857142857143,-9.714285714285715 -3.428571428571429,0 -5.714285714285715,7.464228571428572 -5.714285714285715,-7.464228571428572 -3.428571428571429,0 z'\nexport const parallelIcon =\n  'm 23,10 0,12.5 -12.5,0 0,5 12.5,0 0,12.5 5,0 0,-12.5 12.5,0 0,-5 -12.5,0 0,-12.5 -5,0 z'\nexport const inclusiveIcon: h.JSX.Element = h('circle', {\n  cx: 25,\n  cy: 25,\n  r: 13,\n  style:\n    'stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 2.5px; fill: white;',\n})\n\n// task\nexport const serviceTaskIcon =\n  'M882.527918 434.149934c-2.234901-5.303796-7.311523-8.853645-13.059434-9.138124l-61.390185-3.009544c-6.635117-20.973684-15.521508-41.175795-26.513864-60.282968l42.051745-47.743374c4.308119-4.889357 4.955872-12.004405 1.602498-17.59268-46.384423-77.30362-103.969956-101.422947-106.400309-102.410438-5.332449-2.170432-11.432377-1.090844-15.693424 2.77009L654.674467 240.664222c-17.004279-8.654101-35.092239-15.756869-53.995775-21.210068l-3.26537-66.490344c-0.280386-5.747911-3.833305-10.824533-9.134031-13.059434-1.683339-0.709151-30.193673-12.391215-76.866668-12.051477-46.672996-0.339738-75.18333 11.342326-76.866668 12.051477-5.300726 2.234901-8.853645 7.311523-9.134031 13.059434l-3.26537 66.490344c-18.903535 5.453199-36.991496 12.555967-53.995775 21.210068l-48.450479-43.922349c-4.261047-3.860934-10.360975-4.940522-15.693424-2.77009-2.430352 0.98749-60.015885 25.106818-106.400309 102.410438-3.353374 5.588275-2.705622 12.703323 1.602498 17.59268l42.051745 47.743374c-10.992355 19.107173-19.878746 39.309284-26.513864 60.282968l-61.390185 3.009544c-5.747911 0.284479-10.824533 3.834328-13.059434 9.138124-1.01512 2.415003-24.687262 60.190871-2.822278 147.651828 1.583055 6.324032 7.072069 10.893094 13.57518 11.308557 5.892197 0.37146 11.751648 0.523933 17.419741 0.667196 14.498202 0.372483 28.193109 0.723477 40.908712 4.63353 4.212952 1.294482 6.435573 8.270361 9.349949 18.763342 1.287319 4.640694 2.617617 9.43693 4.484128 14.010085 1.794879 4.393054 3.75758 8.570189 5.66093 12.607132 1.302669 2.765997 2.529613 5.380544 3.689019 8.018627 2.986007 6.803963 2.682086 9.773598 2.578732 10.349719-3.061732 3.672646-6.391571 7.238868-9.91379 11.015891-1.810229 1.943258-3.680832 3.949962-5.523807 5.980201l-22.560832 24.8909c-3.865028 4.261047-4.940522 10.365068-2.774183 15.693424 0.991584 2.426259 25.102724 60.011792 102.414531 106.400309 5.588275 3.353374 12.703323 2.701528 17.591657-1.603521l23.476691-20.682042c2.346441-2.061962 4.64888-4.336772 6.875594-6.534833 9.05319-8.93858 14.018272-12.95608 17.73185-11.576663 3.305279 1.222851 6.907317 3.166109 10.720156 5.228071 3.325745 1.794879 6.764054 3.650133 10.465352 5.288446 6.016017 2.662643 12.120039 4.688789 18.019399 6.65149 6.827499 2.266623 13.279445 4.409426 18.819624 7.275707 1.518586 0.782829 1.926886 0.994654 2.358721 7.830339 0.726547 11.496845 1.25048 23.276123 1.753947 34.672684 0.264013 5.900384 0.528026 11.803837 0.815575 17.700127 0.284479 5.743818 3.833305 10.82044 9.138124 13.05534 1.654686 0.698918 29.371958 12.063757 74.869175 12.063757 0.328481 0 3.65832 0 3.986801 0 45.497217 0 73.214489-11.364839 74.869175-12.063757 5.304819-2.234901 8.853645-7.311523 9.138124-13.05534 0.287549-5.89629 0.551562-11.799744 0.815575-17.700127 0.503467-11.396561 1.027399-23.175839 1.753947-34.672684 0.431835-6.835685 0.840134-7.04751 2.358721-7.830339 5.54018-2.866281 11.992125-5.009084 18.819624-7.275707 5.89936-1.962701 12.003382-3.988848 18.019399-6.65149 3.701299-1.638313 7.139607-3.493567 10.465352-5.288446 3.812839-2.061962 7.414877-4.00522 10.720156-5.228071 3.713578-1.379417 8.67866 2.638083 17.73185 11.576663 2.226714 2.198062 4.529153 4.472871 6.875594 6.534833l23.476691 20.682042c4.888334 4.305049 12.003382 4.956895 17.591657 1.603521 77.311807-46.388517 101.422947-103.97405 102.414531-106.400309 2.166339-5.328355 1.090844-11.432377-2.774183-15.693424l-22.560832-24.8909c-1.842974-2.030239-3.713578-4.036943-5.523807-5.980201-3.52222-3.777023-6.852058-7.343245-9.91379-11.015891-0.103354-0.576121-0.407276-3.545756 2.578732-10.349719 1.159406-2.638083 2.38635-5.252631 3.689019-8.018627 1.90335-4.036943 3.866051-8.214079 5.66093-12.607132 1.866511-4.573155 3.196809-9.369392 4.484128-14.010085 2.914376-10.492982 5.136997-17.46886 9.349949-18.763342 12.715603-3.910053 26.41051-4.261047 40.908712-4.63353 5.668093-0.143263 11.527544-0.295735 17.419741-0.667196 6.503111-0.415462 11.992125-4.984524 13.57518-11.308557C907.21518 494.340805 883.543038 436.564937 882.527918 434.149934zM643.49894 643.761929c-35.280528 35.280528-82.191954 54.711066-132.086317 54.711066s-96.806813-19.430538-132.086317-54.711066c-35.280528-35.279504-54.711066-82.191954-54.711066-132.086317 0-49.894364 19.430538-96.80272 54.711066-132.082224 35.283598-35.284621 82.191954-54.711066 132.086317-54.711066s96.80579 19.426445 132.086317 54.711066c35.279504 35.279504 54.711066 82.187861 54.711066 132.082224C698.210006 561.569976 678.782537 608.482425 643.49894 643.761929z'\n\nexport const userTaskIcon =\n  'M655.807326 287.35973m-223.989415 0a218.879 218.879 0 1 0 447.978829 0 218.879 218.879 0 1 0-447.978829 0ZM1039.955839 895.482975c-0.490184-212.177424-172.287821-384.030443-384.148513-384.030443-211.862739 0-383.660376 171.85302-384.15056 384.030443L1039.955839 895.482975z'\n\nexport const scriptTaskIcon =\n  'M6.402,0.5H20.902C20.902,0.5,15.069,3.333,15.069,6.083S19.486,12.083,19.486,15.25S15.319,20.333,15.319,20.333H0.235C0.235,20.333,5.235,17.665999999999997,5.235,15.332999999999998S0.6520000000000001,8.582999999999998,0.6520000000000001,6.082999999999998S6.402,0.5,6.402,0.5ZM3.5,4.5L13.5,4.5M3.8,8.5L13.8,8.5M6.3,12.5L16.3,12.5M6.5,16.5L16.5,16.5'\n\nexport const manualTaskIcon =\n  'M0.5,3.751L4.583,0.5009999999999999C4.583,0.5009999999999999,15.749,0.5839999999999999,16.666,0.5839999999999999S14.249,3.5009999999999994,15.166,3.5009999999999994S26.833,3.5009999999999994,27.75,3.5009999999999994C28.916,5.209,27.582,6.667999999999999,26.916,7.167999999999999S27.791,9.084999999999999,25.916,11.584999999999999C25.166,11.834999999999999,26.666,13.459999999999999,24.583000000000002,14.918C23.416,15.501,25.166,16.46,23.333000000000002,17.750999999999998C22.166,17.750999999999998,2.5000000000000036,17.833999999999996,2.5000000000000036,17.833999999999996L0.5000000000000036,16.500999999999998V3.751ZM13.5,7L27,7M13.5,11L26,11M14,14.5L25,14.5M8.2,3.1L15,3.1'\n\nexport const style = {\n  throw:\n    'fill: rgb(34, 36, 42); stroke-linecap: round; stroke-linejoin: round; stroke: white; stroke-width: 1px;',\n  catch:\n    'fill: white; stroke-linecap: round; stroke-linejoin: round; stroke: rgb(34, 36, 42); stroke-width: 1px;',\n  nonIntermediate: 'stroke-width: 1.5; stroke-dash-array: 6',\n  intermediate: 'stroke-width: 1.5',\n}\n\n// marker\nexport const parallelMarker =\n  'm44,60 m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10'\n\nexport const sequentialMarker =\n  'm47,61 m 0,3 l 10,0 m -10,3 l 10,0 m -10,3 l 10,0'\n\nexport const loopMarker =\n  'm 50,73 c 3.526979,0 6.386161,-2.829858 6.386161,-6.320661 0,-3.490806 -2.859182,-6.320661 -6.386161,-6.320661 -3.526978,0 -6.38616,2.829855 -6.38616,6.320661 0,1.745402 0.714797,3.325567 1.870463,4.469381 0.577834,0.571908 1.265885,1.034728 2.029916,1.35457 l -0.718163,-3.909793 m 0.718163,3.909793 -3.885211,0.802902'\n", "import LogicFlow, {\n  h,\n  Polygon,\n  GraphModel,\n  PolygonNode,\n  PolygonNodeModel,\n} from '@logicflow/core'\nimport { genBpmnId, groupRule } from '../../utils'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport const gateway = {\n  exclusive: 0,\n  inclusive: 1,\n  parallel: 2,\n}\n\n/**\n * index 0 排他网关\n * index 1 包容网关\n * index 2 并行网关\n */\nexport const gatewayComposable = [\n  [1, 1, 0],\n  [0, 0, 1],\n  [0, 1, 1],\n]\n\n/**\n * @param type 网关节点的type, 对应其XML定义中的节点名，如<bpmn:inclusiveGateway /> 其type为bpmn:inclusiveGateway\n * @param icon 网关节点左上角的图标，可以是svg path，也可以是h函数生成的svg\n * @param props (可选) 网关节点的属性\n * @returns { type: string, model: any, view: any }\n */\nexport function GatewayNodeFactory(\n  type: string,\n  icon: string | object,\n  props?: any,\n): {\n  type: string\n  model: any\n  view: any\n} {\n  class view extends PolygonNode {\n    getShape() {\n      const { model } = this.props\n      const { x, y, width, height, points } = model as PolygonNodeModel\n      const style = model.getNodeStyle()\n      return h(\n        'g',\n        {\n          transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n        },\n        h(Polygon, {\n          ...style,\n          x,\n          y,\n          points,\n        }),\n        typeof icon === 'string'\n          ? h('path', {\n              d: icon,\n              ...style,\n              fill: 'rgb(34, 36, 42)',\n              strokeWidth: 1,\n            })\n          : icon,\n      )\n    }\n  }\n\n  class model extends PolygonNodeModel {\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Gateway_${genBpmnId()}`\n      }\n      if (!data.text) {\n        data.text = ''\n      }\n      if (data.text && typeof data.text === 'string') {\n        data.text = {\n          value: data.text,\n          x: data.x,\n          y: data.y + 40,\n        }\n      }\n      data.properties = {\n        ...(props || {}),\n        ...data.properties,\n      }\n      super(data, graphModel)\n      this.points = [\n        [25, 0],\n        [50, 25],\n        [25, 50],\n        [0, 25],\n      ]\n      groupRule.call(this)\n    }\n  }\n\n  return {\n    type,\n    view,\n    model,\n  }\n}\n", "import LogicFlow from '@logicflow/core'\nimport { exclusiveIcon, parallelIcon, inclusiveIcon } from '../icons'\nimport { GatewayNodeFactory } from './gateway'\n\nexport function registerGatewayNodes(lf: LogicFlow) {\n  const ExclusiveGateway = GatewayNodeFactory(\n    'bpmn:exclusiveGateway',\n    exclusiveIcon,\n  )\n\n  const ParallelGateway = GatewayNodeFactory(\n    'bpmn:parallelGateway',\n    parallelIcon,\n  )\n\n  const InclusiveGateway = GatewayNodeFactory(\n    'bpmn:inclusiveGateway',\n    inclusiveIcon,\n  )\n  lf.register(ExclusiveGateway)\n  lf.register(InclusiveGateway)\n  lf.register(ParallelGateway)\n}\n", "import LogicFlow, {\n  h,\n  GraphModel,\n  RectNode,\n  RectNodeModel,\n} from '@logicflow/core'\nimport { parallelMarker, sequentialMarker, loopMarker } from '../icons'\nimport { genBpmnId, groupRule } from '../../utils'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport const multiInstanceIcon: any = {\n  parallel: parallelMarker,\n  sequential: sequentialMarker,\n  loop: loopMarker,\n}\n\ntype TaskType = {\n  multiInstanceType: string\n  properties: Record<string, any>\n  [key: string]: any\n}\n\n/**\n * @param type 任务节点的type, 对应其XML定义中的节点名，如<bpmn:userTask /> 其type为bpmn:userTask\n * @param icon 任务节点左上角的图标，可以是svg path，也可以是h函数生成的svg\n * @param props (可选) 任务节点的属性\n * @returns { type: string, model: any, view: any }\n */\nexport function TaskNodeFactory(\n  type: string,\n  icon: string | any[],\n  props?: any,\n): {\n  type: string\n  model: any\n  view: any\n} {\n  class view extends RectNode {\n    getLabelShape() {\n      // @ts-ignore\n      const { model } = this.props\n      const { x, y, width, height } = model\n      const style = model.getNodeStyle()\n      const i = Array.isArray(icon)\n        ? h(\n            'g',\n            {\n              transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n            },\n            ...icon,\n          )\n        : h('path', {\n            fill: style.stroke,\n            d: icon,\n          })\n      return h(\n        'svg',\n        {\n          x: x - width / 2 + 5,\n          y: y - height / 2 + 5,\n          width: 25,\n          height: 25,\n          viewBox: '0 0 1274 1024',\n        },\n        i,\n      )\n    }\n\n    getShape() {\n      // @ts-ignore\n      const { model } = this.props\n      const { x, y, width, height, radius, properties } = model\n      const style = model.getNodeStyle()\n      return h('g', {}, [\n        h('rect', {\n          ...style,\n          x: x - width / 2,\n          y: y - height / 2,\n          rx: radius,\n          ry: radius,\n          width,\n          height,\n          opacity: 0.95,\n        }),\n        this.getLabelShape(),\n        h(\n          'g',\n          {\n            transform: `matrix(1 0 0 1 ${x - width / 2} ${y - height / 2})`,\n          },\n          h('path', {\n            fill: 'white',\n            strokeLinecap: 'round',\n            strokeLinejoin: 'round',\n            stroke: 'rgb(34, 36, 42)',\n            strokeWidth: '2',\n            d: multiInstanceIcon[properties.multiInstanceType as any] || '', // TODO: 确认 properties.multiInstanceType 的类型\n          }),\n        ),\n      ])\n    }\n  }\n\n  class model extends RectNodeModel {\n    boundaryEvents: any // TODO: 确认该属性类型，可移除查看其导致的问题\n\n    constructor(data: NodeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Activity_${genBpmnId()}`\n      }\n      const properties: TaskType = {\n        ...(props || {}),\n        ...data.properties,\n        // multiInstanceType: '',\n        // panels: ['multiInstance'],\n      }\n      data.properties = properties\n      super(data, graphModel)\n      properties?.boundaryEvents?.forEach((id: string) => {\n        this.addBoundaryEvent(id)\n      })\n      this.deleteProperty('boundaryEvents')\n      groupRule.call(this)\n    }\n\n    initNodeData(data: any) {\n      super.initNodeData(data)\n      this.isTaskNode = true // 标识此节点是任务节点，可以被附件边界事件\n      this.boundaryEvents = [] // 记录自己附加的边界事件\n    }\n\n    getNodeStyle() {\n      const style = super.getNodeStyle()\n      // isBoundaryEventTouchingTask属性用于标识拖动边界节点是否靠近此节点\n      // 如果靠近，则高亮提示\n      // style.fill = 'rgb(255, 230, 204)';\n      const { isBoundaryEventTouchingTask } = this.properties\n      if (isBoundaryEventTouchingTask) {\n        style.stroke = '#00acff'\n        style.strokeWidth = 2\n      }\n      return style\n    }\n\n    getOutlineStyle() {\n      const style = super.getOutlineStyle()\n      style.stroke = 'transparent'\n      !style.hover && (style.hover = {})\n      style.hover.stroke = 'transparent'\n      return style\n    }\n\n    /**\n     * 提供方法给插件在判断此节点被拖动边界事件节点靠近时调用，从而触发高亮\n     */\n    setTouching(flag: boolean) {\n      this.setProperty('isBoundaryEventTouchingTask', flag)\n    }\n\n    /**\n     * 附加后记录被附加的边界事件节点Id\n     */\n    addBoundaryEvent(nodeId: string) {\n      this.setTouching(false)\n      if (this.boundaryEvents.find((item: string) => item === nodeId)) {\n        return false\n      }\n      const boundaryEvent = this.graphModel.getNodeModelById(nodeId)\n      boundaryEvent?.setProperties({\n        attachedToRef: this.id,\n      })\n      this.boundaryEvents.push(nodeId)\n      return true\n    }\n\n    /**\n     * 被附加的边界事件节点被删除时，移除记录\n     */\n    deleteBoundaryEvent(nodeId: string) {\n      this.boundaryEvents = this.boundaryEvents.filter(\n        (item: string) => item !== nodeId,\n      )\n    }\n  }\n\n  // @ts-ignore\n  return {\n    type,\n    view,\n    model,\n  }\n}\n", "import {\n  h,\n  Component,\n  GraphModel,\n  BaseNodeModel,\n  BaseEdgeModel,\n  RectNodeModel,\n  DiamondNodeModel,\n  EllipseNodeModel,\n  ModelType,\n  Rect,\n  LogicFlowUtil,\n} from '@logicflow/core'\nimport { RectResizeModel } from '../node'\n\ntype VectorData = Record<'deltaX' | 'deltaY', number>\n\nconst { StepDrag } = LogicFlowUtil\n\ninterface IControlProps {\n  index: number\n  x: number\n  y: number\n  model: BaseNodeModel\n  graphModel: GraphModel\n  style?: CSSStyleDeclaration\n}\n\ninterface IControlState {\n  startX: number\n  startY: number\n  endX: number\n  endY: number\n  dragging: boolean\n}\n\nclass Control extends Component<IControlProps, IControlState> {\n  index: number\n  nodeModel: BaseNodeModel\n  graphModel: GraphModel\n  dragHandler: LogicFlowUtil.StepDrag\n\n  constructor(props: IControlProps) {\n    super()\n    this.index = props.index\n    this.nodeModel = props.model\n    this.graphModel = props.graphModel\n    // 为保证对齐线功能正常使用，step默认是网格grid的两倍，\n    // 没有网格设置，默认为2，保证坐标是整数\n    // let step = 2;\n    // if (gridSize > 1) {\n    //   step = 2 * gridSize;\n    // }\n    // if (this.nodeModel.gridSize) {\n    //   step = 2 * this.nodeModel.gridSize;\n    // }\n\n    this.dragHandler = new StepDrag({\n      onDragging: this.onDragging,\n      onDragEnd: this.onDragEnd,\n      step: 1,\n    })\n  }\n\n  getNodeEdges(nodeId: string) {\n    const { graphModel } = this\n    const { edges } = graphModel\n    const sourceEdges: BaseEdgeModel[] = []\n    const targetEdges: BaseEdgeModel[] = []\n    for (let i = 0; i < edges.length; i++) {\n      const edgeModel = edges[i]\n      if (edgeModel.sourceNodeId === nodeId) {\n        sourceEdges.push(edgeModel)\n      } else if (edges[i].targetNodeId === nodeId) {\n        targetEdges.push(edgeModel)\n      }\n    }\n    return {\n      sourceEdges,\n      targetEdges,\n    }\n  }\n\n  // 更新中心点位置，更新文案位置\n  updatePosition = ({ deltaX, deltaY }: VectorData) => {\n    const { x, y } = this.nodeModel\n    this.nodeModel.x = x + deltaX / 2\n    this.nodeModel.y = y + deltaY / 2\n    this.nodeModel.moveText(deltaX / 2, deltaY / 2)\n  }\n  // 计算control拖动后，节点的宽高\n  getResize = ({\n    index,\n    deltaX,\n    deltaY,\n    width,\n    height,\n    PCTResizeInfo,\n    pct = 1,\n    freezeWidth = false,\n    freezeHeight = false,\n  }: any) => {\n    // TODO: 定义 getResize 方法的参数类型\n    const resize = {\n      width,\n      height,\n      deltaX,\n      deltaY,\n    }\n    if (PCTResizeInfo) {\n      const sensitivity = 4 // 越低越灵敏\n      let deltaScale = 0\n      let combineDelta = 0\n      switch (index) {\n        case 0:\n          combineDelta = (deltaX * -1 - deltaY) / sensitivity\n          break\n        case 1:\n          combineDelta = (deltaX - deltaY) / sensitivity\n          break\n        case 2:\n          combineDelta = (deltaX + deltaY) / sensitivity\n          break\n        case 3:\n          combineDelta = (deltaX * -1 + deltaY) / sensitivity\n          break\n        default:\n          break\n      }\n      if (combineDelta !== 0) {\n        deltaScale =\n          Math.round(\n            (combineDelta / PCTResizeInfo.ResizeBasis.basisHeight) * 100000,\n          ) / 1000\n      }\n      PCTResizeInfo.ResizePCT.widthPCT = Math.max(\n        Math.min(\n          PCTResizeInfo.ResizePCT.widthPCT + deltaScale,\n          PCTResizeInfo.ScaleLimit.maxScaleLimit,\n        ),\n        PCTResizeInfo.ScaleLimit.minScaleLimit,\n      )\n      PCTResizeInfo.ResizePCT.heightPCT = Math.max(\n        Math.min(\n          PCTResizeInfo.ResizePCT.heightPCT + deltaScale,\n          PCTResizeInfo.ScaleLimit.maxScaleLimit,\n        ),\n        PCTResizeInfo.ScaleLimit.minScaleLimit,\n      )\n      const spcWidth = Math.round(\n        (PCTResizeInfo.ResizePCT.widthPCT *\n          PCTResizeInfo.ResizeBasis.basisWidth) /\n          100,\n      )\n      const spcHeight = Math.round(\n        (PCTResizeInfo.ResizePCT.heightPCT *\n          PCTResizeInfo.ResizeBasis.basisHeight) /\n          100,\n      )\n      switch (index) {\n        case 0:\n          deltaX = width - spcWidth\n          deltaY = height - spcHeight\n          break\n        case 1:\n          deltaX = spcWidth - width\n          deltaY = height - spcHeight\n          break\n        case 2:\n          deltaX = spcWidth - width\n          deltaY = spcHeight - height\n          break\n        case 3:\n          deltaX = width - spcWidth\n          deltaY = spcHeight - height\n          break\n        default:\n          break\n      }\n      resize.width = spcWidth\n      resize.height = spcHeight\n      resize.deltaX = deltaX / pct\n      resize.deltaY = deltaY / pct\n      return resize\n    }\n    // 如果限制了宽/高不变，对应的width/height保持一致\n    switch (index) {\n      case 0:\n        resize.width = freezeWidth ? width : width - deltaX * pct\n        resize.height = freezeHeight ? height : height - deltaY * pct\n        break\n      case 1:\n        resize.width = freezeWidth ? width : width + deltaX * pct\n        resize.height = freezeHeight ? height : height - deltaY * pct\n        break\n      case 2:\n        resize.width = freezeWidth ? width : width + deltaX * pct\n        resize.height = freezeHeight ? height : height + deltaY * pct\n        break\n      case 3:\n        resize.width = freezeWidth ? width : width - deltaX * pct\n        resize.height = freezeHeight ? height : height + deltaY * pct\n        break\n      default:\n        break\n    }\n    return resize\n  }\n  updateEdgePointByAnchors = () => {\n    // https://github.com/didi/LogicFlow/issues/807\n    // https://github.com/didi/LogicFlow/issues/875\n    // 之前的做法，比如Rect是使用getRectResizeEdgePoint()计算边的point缩放后的位置\n    // getRectResizeEdgePoint()考虑了瞄点在四条边以及在4个圆角的情况\n    // 使用的是一种等比例缩放的模式，比如：\n    // const pct = (y - beforeNode.y) / (beforeNode.height / 2 - radius)\n    // afterPoint.y = afterNode.y + (afterNode.height / 2 - radius) * pct\n    // 但是用户自定义的getDefaultAnchor()不一定是按照比例编写的\n    // 它可能是 x: x + 20：每次缩放都会保持在x右边20的位置，因此用户自定义瞄点时，然后产生无法跟随的问题\n    // 现在的做法是：直接获取用户自定义瞄点的位置，然后用这个位置作为边的新的起点，而不是自己进行计算\n    const { id, anchors } = this.nodeModel\n    const edges = this.getNodeEdges(id)\n    // 更新边\n    edges.sourceEdges.forEach((item) => {\n      const anchorItem = anchors.find(\n        (anchor) => anchor.id === item.sourceAnchorId,\n      )\n      if (anchorItem) {\n        item.updateStartPoint({\n          x: anchorItem.x,\n          y: anchorItem.y,\n        })\n      }\n    })\n    edges.targetEdges.forEach((item) => {\n      const anchorItem = anchors.find(\n        (anchor) => anchor.id === item.targetAnchorId,\n      )\n      if (anchorItem) {\n        item.updateEndPoint({\n          x: anchorItem.x,\n          y: anchorItem.y,\n        })\n      }\n    })\n  }\n  // 矩形更新\n  updateRect = ({ deltaX, deltaY }: VectorData) => {\n    const { x, y, width, height, radius, PCTResizeInfo } = this\n      .nodeModel as RectNodeModel\n    const { minWidth, minHeight, maxWidth, maxHeight } = this\n      .nodeModel as RectResizeModel\n    // 更新中心点位置，更新文案位置\n    const { index } = this\n    const freezeWidth = minWidth === maxWidth\n    const freezeHeight = minHeight === maxHeight\n    const size = this.getResize({\n      index,\n      deltaX,\n      deltaY,\n      width,\n      height,\n      PCTResizeInfo,\n      pct: 1,\n      freezeWidth,\n      freezeHeight,\n    })\n    // 限制放大缩小的最大最小范围\n    if (\n      size.width < minWidth ||\n      size.width > maxWidth ||\n      size.height < minHeight ||\n      size.height > maxHeight\n    ) {\n      // 为了避免放到和缩小位置和鼠标不一致的问题\n      this.dragHandler.cancelDrag()\n      return\n    }\n    // 如果限制了宽/高不变，对应的x/y不产生位移\n    this.updatePosition({\n      deltaX: freezeWidth ? 0 : size.deltaX,\n      deltaY: freezeHeight ? 0 : size.deltaY,\n    })\n    // 更新宽高\n    this.nodeModel.width = size.width\n    this.nodeModel.height = size.height\n    this.nodeModel.setProperties({\n      nodeSize: {\n        width: size.width,\n        height: size.height,\n      },\n    })\n    // const edges = this.getNodeEdges(id)\n    const beforeNode = {\n      x,\n      y,\n      width,\n      height,\n      radius,\n    }\n    const afterNode = {\n      x: this.nodeModel.x,\n      y: this.nodeModel.y,\n      width: this.nodeModel.width,\n      height: this.nodeModel.height,\n      radius,\n    }\n    // 更新边\n    this.updateEdgePointByAnchors()\n    this.eventEmit({\n      beforeNode,\n      afterNode,\n    })\n  }\n  // 椭圆更新\n  updateEllipse = ({ deltaX, deltaY }: VectorData) => {\n    const { rx, ry, x, y, PCTResizeInfo } = this.nodeModel as EllipseNodeModel\n    const { index } = this\n    const { minWidth, minHeight, maxWidth, maxHeight } = this\n      .nodeModel as RectResizeModel\n    const freezeWidth = minWidth === maxWidth\n    const freezeHeight = minHeight === maxHeight\n    const width = rx\n    const height = ry\n    const size = this.getResize({\n      index,\n      deltaX,\n      deltaY,\n      width,\n      height,\n      PCTResizeInfo,\n      pct: 1 / 2,\n      freezeWidth,\n      freezeHeight,\n    })\n    // 限制放大缩小的最大最小范围\n    if (\n      size.width < minWidth / 2 ||\n      size.width > maxWidth / 2 ||\n      size.height < minHeight / 2 ||\n      size.height > maxHeight / 2\n    ) {\n      this.dragHandler.cancelDrag()\n      return\n    }\n    // 更新中心点位置，更新文案位置\n    // 如果限制了宽/高不变，对应的x/y不产生位移\n    this.updatePosition({\n      deltaX: freezeWidth ? 0 : size.deltaX,\n      deltaY: freezeHeight ? 0 : size.deltaY,\n    })\n    // 更新rx ry,宽高为计算属性自动更新\n    // @ts-ignore\n    this.nodeModel.rx = size.width\n    // @ts-ignore\n    this.nodeModel.ry = size.height\n    this.nodeModel.setProperties({\n      nodeSize: {\n        rx: size.width,\n        ry: size.height,\n      },\n    })\n\n    const beforeNode = {\n      x,\n      y,\n    }\n    const afterNode = {\n      rx: size.width,\n      ry: size.height,\n      x: this.nodeModel.x,\n      y: this.nodeModel.y,\n    }\n    // 更新边\n    this.updateEdgePointByAnchors()\n    this.eventEmit({\n      beforeNode: {\n        ...beforeNode,\n        rx,\n        ry,\n      },\n      afterNode,\n    })\n  }\n  // 菱形更新\n  updateDiamond = ({ deltaX, deltaY }: VectorData) => {\n    const { rx, ry, x, y, PCTResizeInfo } = this.nodeModel as DiamondNodeModel\n    const { index } = this\n    const { minWidth, minHeight, maxWidth, maxHeight } = this\n      .nodeModel as RectResizeModel\n    const freezeWidth = minWidth === maxWidth\n    const freezeHeight = minHeight === maxHeight\n    const width = rx\n    const height = ry\n    const size = this.getResize({\n      index,\n      deltaX,\n      deltaY,\n      width,\n      height,\n      PCTResizeInfo,\n      pct: 1 / 2,\n      freezeWidth,\n      freezeHeight,\n    })\n    // 限制放大缩小的最大最小范围\n    if (\n      size.width < minWidth / 2 ||\n      size.width > maxWidth / 2 ||\n      size.height < minHeight / 2 ||\n      size.height > maxHeight / 2\n    ) {\n      this.dragHandler.cancelDrag()\n      return\n    }\n    // 更新中心点位置，更新文案位置\n    // 如果限制了宽/高不变，对应的x/y不产生位移\n    this.updatePosition({\n      deltaX: freezeWidth ? 0 : size.deltaX,\n      deltaY: freezeHeight ? 0 : size.deltaY,\n    })\n    // 更新rx ry,宽高为计算属性自动更新\n    // @ts-ignore\n    this.nodeModel.rx = size.width\n    // @ts-ignore\n    this.nodeModel.ry = size.height\n    this.nodeModel.setProperties({\n      nodeSize: {\n        rx: size.width,\n        ry: size.height,\n      },\n    })\n    const beforeNode = {\n      x,\n      y,\n      rx,\n      ry,\n    }\n    const afterNode = {\n      rx: size.width,\n      ry: size.height,\n      x: this.nodeModel.x,\n      y: this.nodeModel.y,\n    }\n    // 更新边\n    this.updateEdgePointByAnchors()\n    this.eventEmit({\n      beforeNode,\n      afterNode,\n    })\n  }\n  eventEmit = ({ beforeNode, afterNode }: any) => {\n    const { id, modelType, type } = this.nodeModel\n    const oldNodeSize = {\n      id,\n      modelType,\n      type,\n      ...beforeNode,\n    }\n    const newNodeSize = {\n      id,\n      modelType,\n      type,\n      ...afterNode,\n    }\n    this.graphModel.eventCenter.emit('node:resize', {\n      oldNodeSize,\n      newNodeSize,\n    })\n  }\n  onDragging = ({ deltaX, deltaY }: VectorData) => {\n    const { transformModel } = this.graphModel\n    const { modelType } = this.nodeModel\n    ;[deltaX, deltaY] = transformModel.fixDeltaXY(deltaX, deltaY)\n    // html和矩形的计算方式是一样的，共用一个方法\n    if (\n      modelType === ModelType.RECT_NODE ||\n      modelType === ModelType.HTML_NODE\n    ) {\n      this.updateRect({\n        deltaX,\n        deltaY,\n      })\n      // this.nodeModel.resize(deltaX, deltaY);\n    } else if (modelType === ModelType.ELLIPSE_NODE) {\n      this.updateEllipse({\n        deltaX,\n        deltaY,\n      })\n    } else if (modelType === ModelType.DIAMOND_NODE) {\n      this.updateDiamond({\n        deltaX,\n        deltaY,\n      })\n    }\n  }\n  /**\n   * 由于将拖拽放大缩小改成丝滑模式，这个时候需要在拖拽结束的时候，将节点的位置更新到grid上.\n   */\n  onDragEnd = () => {\n    const { gridSize = 1 } = this.graphModel\n    const x = gridSize * Math.round(this.nodeModel.x / gridSize)\n    const y = gridSize * Math.round(this.nodeModel.y / gridSize)\n    this.nodeModel.moveTo(x, y)\n\n    // 先触发onDragging()->更新边->再触发用户自定义的getDefaultAnchor()，所以onDragging()拿到的anchors是滞后的\n    // 为了正确设置最终的位置，应该在拖拽结束的时候，再设置一次边的Point位置，此时拿到的anchors是最新的\n    this.updateEdgePointByAnchors()\n  }\n\n  render(): h.JSX.Element {\n    const { x, y, index, model } = this.props\n    const style = (model as RectResizeModel).getControlPointStyle()\n    return (\n      <g className={`lf-resize-control-${index}`}>\n        <Rect\n          className=\"lf-node-control\"\n          x={x}\n          y={y}\n          {...style}\n          onMouseDown={this.dragHandler.handleMouseDown}\n        />\n      </g>\n    )\n  }\n}\n\nexport default Control\n", "import { h, Component, Rect, BaseNodeModel, GraphModel } from '@logicflow/core'\nimport Control from './Control'\nimport { GroupNodeModel } from '../../materials/group'\n\ninterface IControlGroupProps {\n  model: BaseNodeModel\n  graphModel: GraphModel\n}\n\nclass ControlGroup extends Component<IControlGroupProps> {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  getResizeControl(): h.JSX.Element[] {\n    const { model, graphModel } = this.props\n    const { x, y, width, height } = model\n    const box = {\n      minX: x - width / 2,\n      minY: y - height / 2,\n      maxX: x + width / 2,\n      maxY: y + height / 2,\n    }\n    const { minX, minY, maxX, maxY } = box\n    const controlList = [\n      // 左上角\n      {\n        x: minX,\n        y: minY,\n      },\n      // 右上角\n      {\n        x: maxX,\n        y: minY,\n      },\n      // 右下角\n      {\n        x: maxX,\n        y: maxY,\n      },\n      // 左下角\n      {\n        x: minX,\n        y: maxY,\n      },\n    ]\n    return controlList.map((control, index) => (\n      <Control\n        index={index}\n        {...control}\n        model={model}\n        graphModel={graphModel}\n      />\n    ))\n  }\n\n  // 一般节点被选中了会有outline, 先不用这个\n  getGroupSolid() {\n    const { model } = this.props\n    const { x, y, width, height } = model\n    const style = (model as GroupNodeModel).getResizeOutlineStyle()\n    return <Rect {...style} x={x} y={y} width={width} height={height} />\n  }\n\n  render(): h.JSX.Element {\n    return (\n      <g className=\"lf-resize-control\">\n        {this.getGroupSolid()}\n        {this.getResizeControl()}\n      </g>\n    )\n  }\n}\n\nexport default ControlGroup\n", "import LogicFlow, {\n  GraphModel,\n  EllipseNode,\n  EllipseNodeModel,\n} from '@logicflow/core'\nimport { PCTResizeParams } from './RectResize'\nimport ControlGroup from '../control/ControlGroup'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport type ResizeEllipseNodeConfig = NodeConfig & {\n  properties: {\n    nodeSize: {\n      rx: number\n      ry: number\n    }\n  } & Record<string, unknown>\n}\n\nexport class EllipseResizeModel extends EllipseNodeModel {\n  PCTResizeInfo?: PCTResizeParams\n  minWidth!: number\n  minHeight!: number\n  maxWidth!: number\n  maxHeight!: number\n\n  constructor(data: ResizeEllipseNodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    const { nodeSize } = data.properties\n    if (nodeSize) {\n      this.rx = nodeSize.rx\n      this.ry = nodeSize.ry\n    }\n  }\n\n  initNodeData(data: any): void {\n    super.initNodeData(data)\n    this.minWidth = 30\n    this.minHeight = 30\n    this.maxWidth = 2000\n    this.maxHeight = 2000\n  }\n\n  getOutlineStyle() {\n    const style = super.getOutlineStyle()\n    const {\n      editConfigModel: { isSilentMode },\n    } = this.graphModel\n    if (isSilentMode) return style\n    style.stroke = 'none'\n    if (style.hover) {\n      style.hover.stroke = 'none'\n    }\n    return style\n  }\n\n  getResizeOutlineStyle() {\n    return {\n      fill: 'none',\n      stroke: 'transparent',\n      strokeWidth: 1,\n      strokeDasharray: '3,3',\n    }\n  }\n\n  getControlPointStyle() {\n    return {\n      width: 7,\n      height: 7,\n      fill: '#FFFFFF',\n      stroke: '#000000',\n    }\n  }\n\n  // 该方法需要在重设宽高和最大、最小限制后被调用，不建议在 initNodeData() 方法中使用\n  enableProportionResize(turnOn = true) {\n    if (turnOn) {\n      const ResizePCT = {\n        widthPCT: 100,\n        heightPCT: 100,\n      }\n      const ResizeBasis = {\n        basisWidth: this.rx,\n        basisHeight: this.ry,\n      }\n      const ScaleLimit = {\n        maxScaleLimit: Math.min(\n          (this.maxWidth / (this.rx * 2)) * 100,\n          (this.maxHeight / (this.ry * 2)) * 100,\n        ),\n        minScaleLimit: Math.max(\n          (this.minWidth / (this.rx * 2)) * 100,\n          (this.minHeight / (this.ry * 2)) * 100,\n        ),\n      }\n      this.PCTResizeInfo = {\n        ResizePCT,\n        ResizeBasis,\n        ScaleLimit,\n      }\n    } else {\n      delete this.PCTResizeInfo\n    }\n  }\n}\n\nexport class EllipseResizeView extends EllipseNode {\n  getControlGroup() {\n    const { model, graphModel } = this.props\n    return <ControlGroup model={model} graphModel={graphModel} />\n  }\n\n  // getResizeShape绘制图形，功能等同于基础椭圆的getShape功能，可以通过复写此方法，进行节点自定义\n  getResizeShape() {\n    return super.getShape()\n  }\n\n  getShape() {\n    const {\n      model,\n      graphModel: {\n        editConfigModel: { isSilentMode },\n      },\n    } = this.props\n    return (\n      <g>\n        {this.getResizeShape()}\n        {model.isSelected && !isSilentMode ? this.getControlGroup() : ''}\n      </g>\n    )\n  }\n}\n\nexport const EllipseResize = {\n  type: 'ellipse',\n  view: EllipseResizeView,\n  model: EllipseResizeModel,\n}\n\nexport default EllipseResize\n", "import LogicFlow, {\n  Polygon,\n  GraphModel,\n  DiamondNode,\n  DiamondNodeModel,\n} from '@logicflow/core'\nimport { PCTResizeParams } from './RectResize'\nimport ControlGroup from '../control/ControlGroup'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport type ResizeDiamondNodeConfig = NodeConfig & {\n  properties: {\n    nodeSize: {\n      rx: number\n      ry: number\n    }\n  } & Record<string, unknown>\n}\n\nexport class DiamondResizeModel extends DiamondNodeModel {\n  PCTResizeInfo?: PCTResizeParams\n  minWidth!: number\n  minHeight!: number\n  maxWidth!: number\n  maxHeight!: number\n\n  constructor(data: ResizeDiamondNodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    const { nodeSize } = data.properties\n    if (nodeSize) {\n      this.rx = nodeSize.rx\n      this.ry = nodeSize.ry\n    }\n  }\n\n  initNodeData(data: any): void {\n    super.initNodeData(data)\n    this.minWidth = 30\n    this.minHeight = 30\n    this.maxWidth = 2000\n    this.maxHeight = 2000\n    this.gridSize = 1\n  }\n\n  getOutlineStyle() {\n    const style = super.getOutlineStyle()\n    const {\n      editConfigModel: { isSilentMode },\n    } = this.graphModel\n    if (isSilentMode) return style\n    style.stroke = 'none'\n    if (style.hover) {\n      style.hover.stroke = 'none'\n    }\n    return style\n  }\n\n  getResizeOutlineStyle() {\n    return {\n      fill: 'none',\n      stroke: 'transparent',\n      strokeWidth: 1,\n      strokeDasharray: '3,3',\n    }\n  }\n\n  getControlPointStyle() {\n    return {\n      width: 7,\n      height: 7,\n      fill: '#FFFFFF',\n      stroke: '#000000',\n    }\n  }\n\n  // 该方法需要在重设宽高和最大、最小限制后被调用，不建议在 initNodeData() 方法中使用\n  enableProportionResize(turnOn = true) {\n    if (turnOn) {\n      const ResizePCT = {\n        widthPCT: 100,\n        heightPCT: 100,\n      }\n      const ResizeBasis = {\n        basisWidth: this.rx,\n        basisHeight: this.ry,\n      }\n      const ScaleLimit = {\n        maxScaleLimit: Math.min(\n          (this.maxWidth / (this.rx * 2)) * 100,\n          (this.maxHeight / (this.ry * 2)) * 100,\n        ),\n        minScaleLimit: Math.max(\n          (this.minWidth / (this.rx * 2)) * 100,\n          (this.minHeight / (this.ry * 2)) * 100,\n        ),\n      }\n      this.PCTResizeInfo = {\n        ResizePCT,\n        ResizeBasis,\n        ScaleLimit,\n      }\n    } else {\n      delete this.PCTResizeInfo\n    }\n  }\n}\n\nexport class DiamondResizeView extends DiamondNode {\n  getControlGroup() {\n    const { model, graphModel } = this.props\n    return <ControlGroup model={model} graphModel={graphModel} />\n  }\n\n  // getResizeShape绘制图形，功能等同于基础菱形的getShape功能，可以通过复写此方法，进行节点自定义\n  getResizeShape() {\n    const { model } = this.props\n    const { points } = model\n    const style = model.getNodeStyle()\n    return (\n      <g>\n        <Polygon {...style} points={points} />\n      </g>\n    )\n  }\n\n  getShape() {\n    const {\n      model: { isSelected },\n      graphModel: {\n        editConfigModel: { isSilentMode },\n      },\n    } = this.props\n    return (\n      <g>\n        {this.getResizeShape()}\n        {isSelected && !isSilentMode ? this.getControlGroup() : ''}\n      </g>\n    )\n  }\n}\n\nexport const DiamondResize = {\n  type: 'diamond',\n  view: DiamondResizeView,\n  model: DiamondResizeModel,\n}\n\nexport default DiamondResize\n", "import { GraphModel, HtmlNode, HtmlNodeModel } from '@logicflow/core'\nimport { PCTResizeParams, ResizeNodeConfig } from './RectResize'\nimport ControlGroup from '../control/ControlGroup'\n\nexport class HtmlResizeModel extends HtmlNodeModel {\n  PCTResizeInfo?: PCTResizeParams\n  minWidth!: number\n  minHeight!: number\n  maxWidth!: number\n  maxHeight!: number\n\n  constructor(data: ResizeNodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    const { nodeSize } = data.properties\n    if (nodeSize) {\n      this.width = nodeSize.width\n      this.height = nodeSize.height\n    }\n  }\n\n  initNodeData(data: any): void {\n    super.initNodeData(data)\n    this.minWidth = 30\n    this.minHeight = 30\n    this.maxWidth = 2000\n    this.maxHeight = 2000\n  }\n\n  getOutlineStyle() {\n    const style = super.getOutlineStyle()\n    const {\n      editConfigModel: { isSilentMode },\n    } = this.graphModel\n    if (isSilentMode) return style\n    style.stroke = 'none'\n    if (style.hover) {\n      style.hover.stroke = 'none'\n    }\n    return style\n  }\n\n  getResizeOutlineStyle() {\n    return {\n      fill: 'none',\n      stroke: 'transparent',\n      strokeWidth: 1,\n      strokeDasharray: '3,3',\n    }\n  }\n\n  getControlPointStyle() {\n    return {\n      width: 7,\n      height: 7,\n      fill: '#FFFFFF',\n      stroke: '#000000',\n    }\n  }\n\n  // 该方法需要在重设宽高和最大、最小限制后被调用，不建议在 initNodeData() 方法中使用\n  enableProportionResize(turnOn = true) {\n    if (turnOn) {\n      const ResizePCT = {\n        widthPCT: 100,\n        heightPCT: 100,\n      }\n      const ResizeBasis = {\n        basisWidth: this.width,\n        basisHeight: this.height,\n      }\n      const ScaleLimit = {\n        maxScaleLimit: Math.min(\n          (this.maxWidth / this.width) * 100,\n          (this.maxHeight / this.height) * 100,\n        ),\n        minScaleLimit: Math.max(\n          (this.minWidth / this.width) * 100,\n          (this.minHeight / this.height) * 100,\n        ),\n      }\n      this.PCTResizeInfo = {\n        ResizePCT,\n        ResizeBasis,\n        ScaleLimit,\n      }\n    } else {\n      delete this.PCTResizeInfo\n    }\n  }\n}\n\nexport class HtmlResizeView extends HtmlNode {\n  getControlGroup() {\n    const { model, graphModel } = this.props\n    return <ControlGroup model={model} graphModel={graphModel} />\n  }\n\n  // getResizeShape绘制图形，功能等同于基础矩形的getShape功能，可以通过复写此方法，进行节点自定义\n  getResizeShape() {\n    return super.getShape()\n  }\n\n  getShape() {\n    const {\n      model: { isSelected },\n      graphModel: {\n        editConfigModel: { isSilentMode },\n      },\n    } = this.props\n    return (\n      <g>\n        {this.getResizeShape()}\n        {isSelected && !isSilentMode ? this.getControlGroup() : ''}\n      </g>\n    )\n  }\n}\n\nexport const HtmlResize = {\n  type: 'html',\n  view: HtmlResizeView,\n  model: HtmlResizeModel,\n}\n\nexport default HtmlResize\n", "import LogicFlow, {\n  h,\n  RectNode,\n  RectNodeModel,\n  GraphModel,\n} from '@logicflow/core'\nimport ControlGroup from '../control/ControlGroup'\n\nimport NodeConfig = LogicFlow.NodeConfig\n\nexport type ResizeNodeConfig = NodeConfig & {\n  properties: {\n    nodeSize: {\n      width: number\n      height: number\n    }\n  } & Record<string, unknown>\n}\n\nexport type PCTResizeParams = {\n  ResizePCT: { widthPCT: number; heightPCT: number }\n  ResizeBasis: { basisWidth: number; basisHeight: number }\n  ScaleLimit: { maxScaleLimit: number; minScaleLimit: number }\n}\n\nexport class RectResizeModel extends RectNodeModel {\n  PCTResizeInfo?: PCTResizeParams\n  minWidth!: number\n  minHeight!: number\n  maxWidth!: number\n  maxHeight!: number\n\n  constructor(data: ResizeNodeConfig, graphModel: GraphModel) {\n    super(data, graphModel)\n    const { nodeSize } = data.properties\n    if (nodeSize) {\n      this.width = nodeSize.width\n      this.height = nodeSize.height\n    }\n  }\n\n  initNodeData(data: any): void {\n    super.initNodeData(data)\n    this.minWidth = 30\n    this.minHeight = 30\n    this.maxWidth = 2000\n    this.maxHeight = 2000\n  }\n\n  getOutlineStyle() {\n    const style = super.getOutlineStyle()\n    const {\n      editConfigModel: { isSilentMode },\n    } = this.graphModel\n    if (isSilentMode) return style\n    style.stroke = 'none'\n    if (style.hover) {\n      style.hover.stroke = 'none'\n    }\n    return style\n  }\n\n  getResizeOutlineStyle() {\n    return {\n      fill: 'none',\n      stroke: 'transparent', // 矩形默认不显示调整边框\n      strokeWidth: 1,\n      strokeDasharray: '3,3',\n    }\n  }\n\n  getControlPointStyle() {\n    return {\n      width: 7,\n      height: 7,\n      fill: '#FFFFFF',\n      stroke: '#000000',\n    }\n  }\n\n  // 该方法需要在重设宽高和最大、最小限制后被调用，不建议在 initNodeData() 方法中使用\n  enableProportionResize(turnOn = true) {\n    if (turnOn) {\n      const ResizePCT = {\n        widthPCT: 100,\n        heightPCT: 100,\n      }\n      const ResizeBasis = {\n        basisWidth: this.width,\n        basisHeight: this.height,\n      }\n      const ScaleLimit = {\n        maxScaleLimit: Math.min(\n          (this.maxWidth / this.width) * 100,\n          (this.maxHeight / this.height) * 100,\n        ),\n        minScaleLimit: Math.max(\n          (this.minWidth / this.width) * 100,\n          (this.minHeight / this.height) * 100,\n        ),\n      }\n      this.PCTResizeInfo = {\n        ResizePCT,\n        ResizeBasis,\n        ScaleLimit,\n      }\n    } else {\n      delete this.PCTResizeInfo\n    }\n  }\n}\n\nexport class RectResizeView extends RectNode {\n  getControlGroup(): h.JSX.Element | null {\n    const { model, graphModel } = this.props\n    return <ControlGroup model={model} graphModel={graphModel} />\n  }\n\n  // getResizeShape绘制图形，功能等同于基础矩形的getShape功能，可以通过复写此方法，进行节点自定义\n  getResizeShape() {\n    return super.getShape()\n  }\n\n  getShape(): h.JSX.Element {\n    const {\n      model: { isSelected },\n      graphModel: {\n        editConfigModel: { isSilentMode },\n      },\n    } = this.props\n    return (\n      <g>\n        {this.getResizeShape()}\n        {isSelected && !isSilentMode ? this.getControlGroup() : ''}\n      </g>\n    )\n  }\n}\n\nexport const RectResize = {\n  type: 'rect',\n  view: RectResizeView,\n  model: RectResizeModel,\n}\n\nexport default RectResize\n", "import LogicFlow from '@logicflow/core'\n\nimport EllipseResize from './node/EllipseResize'\nimport DiamondResize from './node/DiamondResize'\nimport HtmlResize from './node/HtmlResize'\nimport RectResize from './node/RectResize'\n\nexport * from './node'\nexport const NodeResize = {\n  pluginName: 'nodeResize',\n  // 拖动step\n  step: 0,\n\n  install(lf: LogicFlow) {\n    lf.register(EllipseResize)\n    lf.register(DiamondResize)\n    lf.register(HtmlResize)\n    lf.register(RectResize)\n  },\n}\n\nexport default NodeResize\n", "import LogicFlow, { h, BaseEdgeModel } from '@logicflow/core'\nimport { RectResizeModel, RectResizeView } from '../../NodeResize'\n\nimport GraphElements = LogicFlow.GraphElements\nimport NodeData = LogicFlow.NodeData\nimport Point = LogicFlow.Point\nimport EdgeConfig = LogicFlow.EdgeConfig\n\nconst defaultWidth = 500\nconst defaultHeight = 300\nconst DEFAULT_BOTTOM_Z_INDEX = -10000\n\nexport class GroupNodeModel extends RectResizeModel {\n  readonly isGroup = true\n  /**\n   * 此分组的子节点Id\n   */\n  children!: Set<string>\n  /**\n   * 其子节点是否被禁止通过拖拽移出分组。 默认false，允许拖拽移除分组。\n   */\n  isRestrict?: boolean\n  /**\n   * 分组节点是否允许调整大小。\n   */\n  resizable?: boolean\n  /**\n   * 分组节点是否允许折叠\n   */\n  foldable?: boolean\n  /**\n   * 折叠后的宽度\n   */\n  foldedWidth!: number\n  /**\n   * 折叠后的高度\n   */\n  foldedHeight!: number\n  /**\n   * 分组折叠状态\n   */\n  isFolded: boolean = false\n  unfoldedWidth = defaultWidth\n  unfoldedHeight = defaultHeight\n  /**\n   * children元素上一次折叠的状态缓存\n   */\n  childrenLastFoldStatus: Record<string, boolean> = {}\n\n  initNodeData(data: any): void {\n    super.initNodeData(data)\n    let children: any = []\n    if (Array.isArray(data.children)) {\n      children = data.children\n    }\n    // 初始化组的子节点\n    this.children = new Set(children)\n    this.width = defaultWidth\n    this.height = defaultHeight\n    this.foldedWidth = 80\n    this.foldedHeight = 60\n    this.zIndex = DEFAULT_BOTTOM_Z_INDEX\n    this.radius = 0\n    this.text.editable = false\n    this.text.draggable = false\n    this.isRestrict = false\n    this.resizable = false\n    this.autoToFront = false\n    this.foldable = false\n    if (this.properties.isFolded === undefined) {\n      this.properties.isFolded = false\n    }\n    this.isFolded = !!this.properties.isFolded\n    // fixme: 虽然默认保存的分组不会收起，但是如果重写保存数据分组了，\n    // 此处代码会导致多一个history记录\n    setTimeout(() => {\n      this.isFolded && this.foldGroup(this.isFolded)\n    })\n    // this.foldGroup(this.isFolded);\n  }\n\n  getResizeOutlineStyle() {\n    const style = super.getResizeOutlineStyle()\n    style.stroke = 'none'\n    return style\n  }\n\n  /**\n   * 折叠分组\n   * 1. 折叠分组的宽高\n   * 2. 处理分组子节点\n   * 3. 处理连线\n   */\n  foldGroup(isFolded: boolean) {\n    if (isFolded === this.isFolded) {\n      // 防止多次调用同样的状态设置\n      // 如果this.isFolded=false，同时触发foldGroup(false)，会导致下面的childrenLastFoldStatus状态错乱\n      return\n    }\n    this.setProperty('isFolded', isFolded)\n    this.isFolded = isFolded\n    // step 1\n    if (isFolded) {\n      this.x = this.x - this.width / 2 + this.foldedWidth / 2\n      this.y = this.y - this.height / 2 + this.foldedHeight / 2\n      this.unfoldedWidth = this.width\n      this.unfoldedHeight = this.height\n      this.width = this.foldedWidth\n      this.height = this.foldedHeight\n    } else {\n      this.width = this.unfoldedWidth\n      this.height = this.unfoldedHeight\n      this.x = this.x + this.width / 2 - this.foldedWidth / 2\n      this.y = this.y + this.height / 2 - this.foldedHeight / 2\n    }\n    // step 2\n    let allEdges = [...this.incoming.edges, ...this.outgoing.edges]\n    this.children.forEach((elementId) => {\n      const nodeModel = this.graphModel.getElement(elementId)\n      if (nodeModel) {\n        const foldStatus = nodeModel.isFolded\n        // FIX: https://github.com/didi/LogicFlow/issues/1007\n        if (nodeModel.isGroup && !nodeModel.isFolded) {\n          // 正常情况下，parent折叠后，children应该折叠\n          // 因此当parent准备展开时，children的值目前肯定是折叠状态，也就是nodeModel.isFolded=true，这个代码块不会触发\n          // 只有当parent准备折叠时，children目前状态才有可能是展开,\n          // 即nodeModel.isFolded=false，这个代码块触发，此时isFolded=true，触发children也进行折叠\n          ;(nodeModel as GroupNodeModel).foldGroup(isFolded)\n        }\n\n        if (nodeModel.isGroup && !isFolded) {\n          // 当parent准备展开时，children的值应该恢复到折叠前的状态\n          const lastFoldStatus = this.childrenLastFoldStatus[elementId]\n          if (\n            lastFoldStatus !== undefined &&\n            lastFoldStatus !== nodeModel.isFolded\n          ) {\n            // https://github.com/didi/LogicFlow/issues/1145\n            // 当parent准备展开时，children的值肯定是折叠，也就是nodeModel.isFolded=true\n            // 当parent准备展开时，如果children之前的状态是展开，则恢复展开状态\n            ;(nodeModel as GroupNodeModel).foldGroup(lastFoldStatus)\n          }\n        }\n        // 存储parent触发children改变折叠状态前的状态\n        this.childrenLastFoldStatus[elementId] = !!foldStatus\n        nodeModel.visible = !isFolded\n\n        const incomingEdges = (nodeModel.incoming as GraphElements).edges\n        const outgoingEdges = (nodeModel.outgoing as GraphElements).edges\n\n        allEdges = [...allEdges, ...incomingEdges, ...outgoingEdges]\n      }\n    })\n    // step 3\n    this.foldEdge(isFolded, allEdges)\n  }\n\n  getAnchorStyle(anchorInfo?: Point) {\n    const style = super.getAnchorStyle(anchorInfo)\n    style.stroke = 'transparent'\n    style.fill = 'transparent'\n    style.hover!.fill = 'transparent' // TODO: 确认这种情况如何解决，style.hover 为 undefined 时该如何处理\n    style.hover!.stroke = 'transparent'\n    return style\n  }\n\n  /**\n   * 折叠分组的时候，处理分组自身的连线和分组内部子节点上的连线\n   * 边的分类：\n   *   - 虚拟边：分组被收起时，表示分组本身与外部节点关系的边。\n   *   - 真实边：分组本身或者分组内部节点与外部节点节点（非收起分组）关系的边。\n   * 如果一个分组，本身与外部节点有M条连线，且内部N个子节点与外部节点有连线，那么这个分组收起时会生成M+N条连线。\n   * 折叠分组时：\n   *   - 原有的虚拟边删除；\n   *   - 创建一个虚拟边；\n   *   - 真实边则隐藏；\n   * 展开分组是：\n   *   - 原有的虚拟边删除；\n   *   - 如果目外部点是收起的分组，则创建虚拟边；\n   *   - 如果外部节点是普通节点，则显示真实边；\n   */\n  foldEdge(isFolded: boolean, allEdges: BaseEdgeModel[]) {\n    allEdges.forEach((edgeModel, index) => {\n      const {\n        id,\n        sourceNodeId,\n        targetNodeId,\n        startPoint,\n        endPoint,\n        type,\n        text,\n      } = edgeModel\n      const properties = edgeModel.getProperties()\n      const data: EdgeConfig = {\n        id: `${id}__${index}`,\n        sourceNodeId,\n        targetNodeId,\n        startPoint,\n        endPoint,\n        type,\n        properties,\n        text: text?.value,\n      }\n      if (edgeModel.virtual) {\n        this.graphModel.deleteEdgeById(edgeModel.id)\n      }\n      let targetNodeIdGroup = this.graphModel.group.getNodeGroup(targetNodeId)\n      // 考虑目标节点本来就是分组的情况\n      if (!targetNodeIdGroup) {\n        targetNodeIdGroup = this.graphModel.getNodeModelById(targetNodeId)\n      }\n      let sourceNodeIdGroup = this.graphModel.group.getNodeGroup(sourceNodeId)\n      if (!sourceNodeIdGroup) {\n        sourceNodeIdGroup = this.graphModel.getNodeModelById(sourceNodeId)\n      }\n      // 折叠时，处理未被隐藏的边的逻辑\n      if (isFolded && edgeModel.visible !== false) {\n        // 需要确认此分组节点是新连线的起点还是终点\n        // 创建一个虚拟边，虚拟边相对真实边，起点或者终点从一起分组内部的节点成为了分组，\n        // 如果需要被隐藏的边的起点在需要折叠的分组中，那么设置虚拟边的开始节点为此分组\n        if (this.children.has(sourceNodeId) || this.id === sourceNodeId) {\n          data.startPoint = undefined\n          data.sourceNodeId = this.id\n        } else {\n          data.endPoint = undefined\n          data.targetNodeId = this.id\n        }\n        // 如果边的起点和终点都在分组内部，则不创建新的虚拟边\n        if (\n          targetNodeIdGroup.id !== this.id ||\n          sourceNodeIdGroup.id !== this.id\n        ) {\n          this.createVirtualEdge(data)\n        }\n        edgeModel.visible = false\n      }\n      // 展开时，处理被隐藏的边的逻辑\n      if (!isFolded && edgeModel.visible === false) {\n        // 展开分组时：判断真实边的起点和终点是否有任一节点在已折叠分组中，如果不是，则显示真实边。如果是，这修改这个边的对应目标节点id来创建虚拟边。\n        if (\n          targetNodeIdGroup &&\n          targetNodeIdGroup.isGroup &&\n          targetNodeIdGroup.isFolded\n        ) {\n          data.targetNodeId = targetNodeIdGroup.id\n          data.endPoint = undefined\n          this.createVirtualEdge(data)\n        } else if (\n          sourceNodeIdGroup &&\n          sourceNodeIdGroup.isGroup &&\n          sourceNodeIdGroup.isFolded\n        ) {\n          data.sourceNodeId = sourceNodeIdGroup.id\n          data.startPoint = undefined\n          this.createVirtualEdge(data)\n        } else {\n          edgeModel.visible = true\n        }\n      }\n    })\n  }\n\n  createVirtualEdge(edgeData) {\n    edgeData.pointsList = undefined\n    const model = this.graphModel.addEdge(edgeData)\n    model.virtual = true\n    // 强制不保存group连线数据\n    // model.getData = () => null;\n    model.text.editable = false\n    model.isFoldedEdge = true\n  }\n\n  isInRange({ x1, y1, x2, y2 }) {\n    return (\n      x1 >= this.x - this.width / 2 &&\n      x2 <= this.x + this.width / 2 &&\n      y1 >= this.y - this.height / 2 &&\n      y2 <= this.y + this.height / 2\n    )\n  }\n\n  isAllowMoveTo({ x1, y1, x2, y2 }) {\n    return {\n      x: x1 >= this.x - this.width / 2 && x2 <= this.x + this.width / 2,\n      y: y1 >= this.y - this.height / 2 && y2 <= this.y + this.height / 2,\n    }\n  }\n\n  setAllowAppendChild(isAllow) {\n    this.setProperty('groupAddable', isAllow)\n  }\n\n  /**\n   * 添加分组子节点\n   * @param id 节点id\n   */\n  addChild(id: string) {\n    this.children.add(id)\n    this.graphModel.eventCenter.emit('group:add-node', { data: this.getData() })\n  }\n\n  /**\n   * 删除分组子节点\n   * @param id 节点id\n   */\n  removeChild(id: string) {\n    this.children.delete(id)\n    this.graphModel.eventCenter.emit('group:remove-node', {\n      data: this.getData(),\n    })\n  }\n\n  getAddableOutlineStyle() {\n    return {\n      stroke: '#FEB663',\n      strokeWidth: 2,\n      strokeDasharray: '4 4',\n      fill: 'transparent',\n    }\n  }\n\n  getData() {\n    const data = super.getData()\n    data.children = []\n    this.children.forEach((childId) => {\n      const model = this.graphModel.getNodeModelById(childId)\n      if (model && !model.virtual) {\n        ;(data.children as string[]).push(childId)\n      }\n    })\n    const { properties } = data\n    delete properties?.groupAddable\n    delete properties?.isFolded\n    return data\n  }\n\n  getHistoryData() {\n    const data = super.getData()\n    data.children = [...this.children]\n    data.isGroup = true\n    const { properties } = data\n    delete properties?.groupAddable\n    if (properties?.isFolded) {\n      // 如果分组被折叠\n      data.x = data.x + this.unfoldedWidth / 2 - this.foldedWidth / 2\n      data.y = data.y + this.unfoldedHeight / 2 - this.foldedHeight / 2\n    }\n    return data\n  }\n\n  /**\n   * 是否允许此节点添加到此分组中\n   */\n  isAllowAppendIn(_nodeData: NodeData) {\n    console.info('_nodeData', _nodeData)\n    return true\n  }\n\n  /**\n   * 当groupA被添加到groupB中时，将groupB及groupB所属的group的zIndex减1\n   */\n  toBack() {\n    this.zIndex--\n  }\n}\n\nexport class GroupNode extends RectResizeView {\n  getControlGroup(): h.JSX.Element | null {\n    const { resizable, properties } = this.props.model\n    return resizable && !properties.isFolded ? super.getControlGroup() : null\n  }\n\n  getAddableShape(): h.JSX.Element | null {\n    const { width, height, x, y, radius, properties, getAddableOutlineStyle } =\n      this.props.model as GroupNodeModel\n    if (!properties.groupAddable) return null\n    const { strokeWidth = 0 } = this.props.model.getNodeStyle()\n\n    const style: Record<string, any> = getAddableOutlineStyle()\n    const newWidth = width + strokeWidth + 8\n    const newHeight = height + strokeWidth + 8\n\n    return h('rect', {\n      ...style,\n      width: newWidth,\n      height: newHeight,\n      x: x - newWidth / 2,\n      y: y - newHeight / 2,\n      rx: radius,\n      ry: radius,\n    })\n  }\n\n  getFoldIcon(): h.JSX.Element | null {\n    const { model } = this.props\n    const foldX = model.x - model.width / 2 + 5\n    const foldY = model.y - model.height / 2 + 5\n    if (!model.foldable) return null\n    const iconIcon = h('path', {\n      fill: 'none',\n      stroke: '#818281',\n      strokeWidth: 2,\n      'pointer-events': 'none',\n      d: model.properties.isFolded\n        ? `M ${foldX + 3},${foldY + 6} ${foldX + 11},${foldY + 6} M${\n            foldX + 7\n          },${foldY + 2} ${foldX + 7},${foldY + 10}`\n        : `M ${foldX + 3},${foldY + 6} ${foldX + 11},${foldY + 6} `,\n    })\n    return h('g', {}, [\n      h('rect', {\n        height: 12,\n        width: 14,\n        rx: 2,\n        ry: 2,\n        strokeWidth: 1,\n        fill: '#F4F5F6',\n        stroke: '#CECECE',\n        cursor: 'pointer',\n        x: model.x - model.width / 2 + 5,\n        y: model.y - model.height / 2 + 5,\n        onClick: () => {\n          ;(model as GroupNodeModel).foldGroup(!model.properties.isFolded)\n        },\n      }),\n      iconIcon,\n    ])\n  }\n\n  getResizeShape(): h.JSX.Element {\n    return h('g', {}, [\n      this.getAddableShape(),\n      super.getResizeShape(),\n      this.getFoldIcon(),\n    ])\n  }\n}\n\nexport default {\n  type: 'group',\n  view: GroupNode,\n  model: GroupNodeModel,\n}\n", "import { forEach } from 'lodash-es'\nimport LogicFlow, {\n  BaseEdgeModel,\n  BaseNodeModel,\n  EventType,\n  Model,\n} from '@logicflow/core'\nimport GroupNode, { GroupNodeModel } from './GroupNode'\n\nimport GraphConfigData = LogicFlow.GraphConfigData\nimport EdgeConfig = LogicFlow.EdgeConfig\nimport NodeData = LogicFlow.NodeData\nimport Point = LogicFlow.Point\nimport BoxBoundsPoint = Model.BoxBoundsPoint\n\nconst DEFAULT_TOP_Z_INDEX = -1000\nconst DEFAULT_BOTTOM_Z_INDEX = -10000\n\nexport class Group {\n  static pluginName = 'group'\n\n  private lf: LogicFlow\n  topGroupZIndex = DEFAULT_BOTTOM_Z_INDEX\n  activeGroup: any\n  nodeGroupMap: Map<string, string> = new Map()\n\n  constructor({ lf }: LogicFlow.IExtensionProps) {\n    lf.register(GroupNode)\n    this.lf = lf\n\n    lf.graphModel.addNodeMoveRules((model, deltaX, deltaY) => {\n      if (model.isGroup) {\n        // 如果移动的是分组，那么分组的子节点也跟着移动。\n        const nodeIds = this.getNodeAllChild(model)\n        lf.graphModel.moveNodes(nodeIds, deltaX, deltaY, true)\n        return true\n      }\n      const groupModel = lf.getNodeModelById(\n        this.nodeGroupMap.get(model.id)!,\n      ) as GroupNodeModel\n      if (groupModel && groupModel.isRestrict) {\n        // 如果移动的节点存在分组中，且这个分组禁止子节点移出去。\n        const { x1, y1, x2, y2 } = model.getBounds()\n        return groupModel.isAllowMoveTo({\n          x1: x1 + deltaX,\n          y1: y1 + deltaY,\n          x2: x2 + deltaX,\n          y2: y2 + deltaY,\n        })\n      }\n\n      return true\n    })\n\n    lf.graphModel.group = this\n    lf.on('node:add,node:drop,node:dnd-add', this.appendNodeToGroup)\n    lf.on('node:delete', this.deleteGroupChild)\n    lf.on('node:dnd-drag,node:drag', this.setActiveGroup)\n    lf.on('node:click', this.nodeSelected)\n    lf.on('graph:rendered', this.graphRendered)\n\n    // https://github.com/didi/LogicFlow/issues/1346\n    // 重写 addElements() 方法，在 addElements() 原有基础上增加对 group 内部所有 nodes 和 edges 的复制功能\n    lf.addElements = (\n      { nodes: selectedNodes, edges: selectedEdges }: GraphConfigData,\n      distance: number,\n    ): {\n      nodes: BaseNodeModel[]\n      edges: BaseEdgeModel[]\n    } => {\n      // ============== 变量初始化 ==============\n      const nodeIdMap: Record<string, string> = {}\n      const elements: any = {\n        nodes: [],\n        edges: [],\n      }\n      const groupInnerEdges: EdgeConfig[] = []\n      // ============== 变量初始化 ==============\n\n      forEach(selectedNodes, (node) => {\n        const preId = node.id\n        const { children, ...rest } = node\n        const nodeModel = lf.addNode(rest)\n        if (!nodeModel) {\n          return {\n            nodes: [],\n            edges: [],\n          }\n        }\n        if (preId) nodeIdMap[preId] = nodeModel.id\n        elements.nodes.push(nodeModel) // group的nodeModel\n\n        // 递归创建group的nodeModel的children\n        const { edgesArray } = this.createAllChildNodes(\n          nodeIdMap,\n          children as Set<string>,\n          nodeModel,\n          distance,\n        )\n        groupInnerEdges.push(...edgesArray)\n      })\n\n      groupInnerEdges.forEach((edge) => {\n        this.createEdgeModel(edge, nodeIdMap, distance)\n      })\n      // 构建的时候直接偏移，这里不需要再进行再度偏移\n      // groupInnerChildren.nodes.forEach(node => this.translationNodeData(node, distance));\n      // groupInnerChildren.edges.forEach(edge => this.translationEdgeData(edge, distance));\n\n      // 最外层的edges继续执行创建edgeModel的流程\n      // 由于最外层会调用translationEdgeData()，因此这里不用传入distance进行偏移\n      forEach(selectedEdges, (edge) => {\n        const edgeModel = this.createEdgeModel(edge, nodeIdMap, 0)\n        elements.edges.push(edgeModel)\n      })\n\n      // 返回elements进行选中效果，即触发element.selectElementById()\n      // shortcut.ts也会对最外层的nodes和edges进行偏移，即translationNodeData()\n      return elements\n    }\n  }\n\n  /**\n   * 创建一个Group类型节点内部的所有子节点的副本\n   * 并且在遍历所有nodes的过程中顺便拿到所有edges（只在Group范围的edges）\n   */\n  createAllChildNodes(\n    nodeIdMap: Record<string, string>,\n    children: Set<string>,\n    current: BaseNodeModel,\n    distance: number,\n  ) {\n    const { lf } = this\n    const edgesDataArray: EdgeConfig[] = []\n    const edgesNodeModelArray: BaseEdgeModel[] = []\n    const nodesArray: BaseNodeModel[] = []\n    children?.forEach((childId: string) => {\n      const childNodeModel = lf.getNodeModelById(childId)\n      if (childNodeModel) {\n        const {\n          x,\n          y,\n          properties,\n          type,\n          text,\n          rotate,\n          children,\n          // incoming,\n          // outgoing,\n        } = childNodeModel\n\n        const eventType =\n          EventType.NODE_GROUP_COPY || ('node:group-copy-add' as EventType)\n        const newChildModel = lf.addNode(\n          {\n            x: x + distance,\n            y: y + distance,\n            properties,\n            type,\n            text: {\n              ...text,\n              x: text.x + distance,\n              y: text.y + distance,\n            },\n            rotate,\n            // 如果不传递type，会自动触发NODE_ADD\n            // 有概率触发appendToGroup\n          },\n          eventType,\n        )\n        ;(current as GroupNodeModel).addChild(newChildModel.id)\n        nodeIdMap[childId] = newChildModel.id\n        nodesArray.push(newChildModel)\n        // 存储children内部节点相关的输入边\n        childNodeModel.incoming.edges.forEach((edge) => {\n          edgesNodeModelArray.push(edge)\n        })\n        // 存储children内部节点相关的输出边\n        childNodeModel.outgoing.edges.forEach((edge) => {\n          edgesNodeModelArray.push(edge)\n        })\n\n        if (children instanceof Set) {\n          const { nodesArray: childNodes, edgesArray: childEdges } =\n            this.createAllChildNodes(\n              nodeIdMap,\n              children,\n              newChildModel,\n              distance,\n            )\n          nodesArray.push(...childNodes)\n          edgesDataArray.push(...childEdges)\n        }\n      }\n    })\n    // 1. 判断每一条边的开始节点和目标节点是否在Group中\n    const filterEdgesArray: BaseEdgeModel[] = edgesNodeModelArray.filter(\n      (edge: BaseEdgeModel) =>\n        nodeIdMap[edge.sourceNodeId] && nodeIdMap[edge.targetNodeId],\n    )\n    // 2. 为每一条group的内部边构建出EdgeData数据\n    // 从GraphModel.ts的getSelectElements()可以知道EdgeConfig就是EdgeData\n    const filterEdgesDataArray: EdgeConfig[] = filterEdgesArray.map((item) =>\n      item.getData(),\n    )\n    return {\n      nodesArray,\n      edgesArray: edgesDataArray.concat(filterEdgesDataArray),\n    }\n  }\n\n  createEdgeModel(\n    edge: EdgeConfig,\n    nodeIdMap: Record<string, string>,\n    distance: number,\n  ) {\n    const { lf } = this\n    let sourceId = edge.sourceNodeId\n    let targetId = edge.targetNodeId\n    if (nodeIdMap[sourceId]) sourceId = nodeIdMap[sourceId]\n    if (nodeIdMap[targetId]) targetId = nodeIdMap[targetId]\n    const { type, startPoint, endPoint, pointsList, text } = edge\n    // ====== 仿造shortcut.ts的translationEdgeData()逻辑 ======\n    const newStartPoint = {\n      x: (startPoint?.x || 0) + distance,\n      y: (startPoint?.y || 0) + distance,\n    }\n    const newEndPoint = {\n      x: (endPoint?.x || 0) + distance,\n      y: (endPoint?.y || 0) + distance,\n    }\n    let newPointsList: Point[] = []\n    if (pointsList && pointsList.length > 0) {\n      newPointsList = pointsList.map((point) => {\n        point.x += distance\n        point.y += distance\n        return point\n      })\n    }\n    const newText = text\n    if (text && typeof text !== 'string') {\n      ;(newText as { x: number; y: number; value: string }).x =\n        text.x + distance\n      ;(newText as { x: number; y: number; value: string }).y =\n        text.y + distance\n    }\n    // ====== 仿造shortcut.ts的translationEdgeData()逻辑 ======\n\n    // 简化复制时的参数传入，防止创建出两个edge属于同个group这种情况\n    return lf.graphModel.addEdge({\n      type,\n      startPoint: newStartPoint,\n      endPoint: newEndPoint,\n      sourceNodeId: sourceId,\n      targetNodeId: targetId,\n      pointsList: newPointsList,\n      text: newText,\n    })\n  }\n\n  /**\n   * 获取一个节点内部所有的子节点，包裹分组的子节点\n   */\n  getNodeAllChild(model: GroupNodeModel | BaseNodeModel) {\n    let nodeIds: string[] = []\n    if (model.children) {\n      ;(model as GroupNodeModel).children.forEach((nodeId) => {\n        nodeIds.push(nodeId)\n        const nodeModel = this.lf.getNodeModelById(nodeId)\n        if (nodeModel?.isGroup) {\n          nodeIds = nodeIds.concat(this.getNodeAllChild(nodeModel))\n        }\n      })\n    }\n    return nodeIds\n  }\n\n  graphRendered = ({ data }: { data: LogicFlow.GraphData }) => {\n    // 如果节点\n    if (data && data.nodes) {\n      data.nodes.forEach((node) => {\n        if (node.children) {\n          ;(node.children as string[]).forEach((nodeId) => {\n            this.nodeGroupMap.set(nodeId, node.id)\n          })\n        }\n      })\n\n      // 初始化nodes时进行this.topGroupZIndex的校准更新\n      this.checkAndCorrectTopGroupZIndex(data.nodes)\n    }\n  }\n  appendNodeToGroup = ({ data }: { data: NodeData }) => {\n    // 如果这个节点之前已经在group中了，则将其从之前的group中移除\n    const preGroupId = this.nodeGroupMap.get(data.id)\n    if (preGroupId) {\n      const preGroup = this.lf.getNodeModelById(preGroupId) as GroupNodeModel\n      preGroup.removeChild(data.id)\n      this.nodeGroupMap.delete(data.id)\n      preGroup.setAllowAppendChild(false)\n    }\n\n    // 然后再判断这个节点是否在某个group中，如果在，则将其添加到对应的group中\n    const nodeModel = this.lf.getNodeModelById(data.id)\n    const bounds = nodeModel?.getBounds()\n    if (bounds && nodeModel) {\n      const group = this.getGroup(bounds, data) as GroupNodeModel\n\n      // https://github.com/didi/LogicFlow/issues/1261\n      // 当使用SelectionSelect框选后触发lf.addNode(Group)\n      // 会触发appendNodeToGroup()的执行\n      // 由于this.getGroup()会判断node.id !== nodeData.id\n      // 因此当addNode是Group类型时，this.getGroup()会一直返回空\n      // 导致了下面这段代码无法执行，也就是无法将当前添加的Group添加到this.nodeGroupMap中\n      // 这导致了折叠分组时触发的foldEdge()无法正确通过getNodeGroup()拿到正确的groupId\n      // 从而导致折叠分组时一直都会创建一个虚拟边\n      // 而初始化分组时由于正确设置了nodeGroupMap的数据，因此不会产生虚拟边的错误情况\n      if (nodeModel.isGroup) {\n        // 如果这个节点是分组，那么将其子节点也记录下来\n        ;(data.children as Set<string>).forEach((nodeId) => {\n          this.nodeGroupMap.set(nodeId, data.id)\n        })\n        // 新增node时进行this.topGroupZIndex的校准更新\n        this.checkAndCorrectTopGroupZIndex([data])\n        this.nodeSelected({\n          data,\n          isSelected: false,\n          isMultiple: false,\n        })\n      }\n      if (!group) return\n      const isAllowAppendIn = group.isAllowAppendIn(data)\n      if (!isAllowAppendIn) {\n        this.lf.emit('group:not-allowed', {\n          group: group.getData(),\n          node: data,\n        })\n        return\n      }\n      group.addChild(data.id)\n      this.nodeGroupMap.set(data.id, group.id)\n      group.setAllowAppendChild(false)\n    }\n  }\n  deleteGroupChild = ({ data }: { data: NodeData }) => {\n    // 如果删除的是分组节点，则同时删除分组的子节点\n    if (data.children) {\n      ;(data.children as Set<string>).forEach((nodeId) => {\n        this.nodeGroupMap.delete(nodeId)\n        this.lf.deleteNode(nodeId)\n      })\n    }\n    const groupId = this.nodeGroupMap.get(data.id)\n    if (groupId) {\n      const group = this.lf.getNodeModelById(groupId) as GroupNodeModel\n      group.removeChild(data.id)\n      this.nodeGroupMap.delete(data.id)\n    }\n  }\n  setActiveGroup = ({ data }: { data: NodeData }) => {\n    const nodeModel = this.lf.getNodeModelById(data.id)\n    const bounds = nodeModel?.getBounds()\n    if (nodeModel && bounds) {\n      const newGroup = this.getGroup(bounds, data)\n      if (this.activeGroup) {\n        this.activeGroup.setAllowAppendChild(false)\n      }\n      if (!newGroup || (nodeModel.isGroup && newGroup.id === data.id)) return\n      const isAllowAppendIn = (newGroup as GroupNodeModel).isAllowAppendIn(data)\n      if (!isAllowAppendIn) {\n        return\n      }\n      this.activeGroup = newGroup\n      this.activeGroup.setAllowAppendChild(true)\n    }\n  }\n  findNodeAndChildMaxZIndex = (nodeModel: BaseNodeModel) => {\n    let maxZIndex = DEFAULT_BOTTOM_Z_INDEX\n    if (nodeModel.isGroup) {\n      maxZIndex = Math.max(maxZIndex, nodeModel.zIndex)\n    }\n    if (nodeModel.children) {\n      ;(nodeModel as GroupNodeModel).children.forEach((nodeId) => {\n        if (typeof nodeId === 'object') {\n          // 正常情况下, GroupNodeModel.children是一个id数组，这里只是做个兼容\n          // @ts-ignore\n          nodeId = nodeId.id\n        }\n        const child = this.lf.getNodeModelById(nodeId)\n        if (child?.isGroup) {\n          const childMaxZIndex = this.findNodeAndChildMaxZIndex(child)\n          maxZIndex = Math.max(childMaxZIndex, maxZIndex)\n        }\n      })\n    }\n    return maxZIndex\n  }\n  checkAndCorrectTopGroupZIndex = (nodes: NodeData[]) => {\n    // 初始化时/增加新节点时，找出新增nodes的最大zIndex\n    let maxZIndex = DEFAULT_BOTTOM_Z_INDEX\n    nodes.forEach((node: NodeData) => {\n      const nodeModel = this.lf.getNodeModelById(node.id)\n      if (nodeModel) {\n        const currentNodeMaxZIndex = this.findNodeAndChildMaxZIndex(nodeModel)\n        if (currentNodeMaxZIndex > maxZIndex) {\n          maxZIndex = currentNodeMaxZIndex\n        }\n      }\n    })\n\n    if (this.topGroupZIndex >= maxZIndex) {\n      // 一般是初始化时/增加新节点时发生，因为外部强行设置了一个很大的zIndex\n      // 删除节点不会影响目前最高zIndex的赋值\n      return\n    }\n    // 新增nodes中如果存在zIndex比this.topGroupZIndex大\n    // 说明this.topGroupZIndex已经失去意义，代表不了目前最高zIndex的group，需要重新校准\n\n    // https://github.com/didi/LogicFlow/issues/1535\n    // 当外部直接设置多个BaseNode.zIndex=1时\n    // 当点击某一个node时，由于这个this.topGroupZIndex是从-10000开始计算的，this.topGroupZIndex+1也就是-9999\n    // 这就造成当前点击的node的zIndex远远比其它node的zIndex小，因此造成zIndex错乱问题\n    const allGroupNodes = this.lf.graphModel.nodes.filter(\n      (node: BaseNodeModel) => node.isGroup,\n    )\n    let max = this.topGroupZIndex\n    for (let i = 0; i < allGroupNodes.length; i++) {\n      const groupNode = allGroupNodes[i]\n      if (groupNode.zIndex > max) {\n        max = groupNode.zIndex\n      }\n    }\n    this.topGroupZIndex = max\n  }\n  /**\n   * 1. 分组节点默认在普通节点下面。\n   * 2. 分组节点被选中后，会将分组节点以及其内部的其他分组节点放到其余分组节点的上面。\n   * 3. 分组节点取消选中后，不会将分组节点重置为原来的高度。\n   * 4. 由于LogicFlow核心目标是支持用户手动绘制流程图，所以不考虑一张流程图超过1000个分组节点的情况。\n   */\n  nodeSelected = ({\n    data,\n    isMultiple,\n    isSelected,\n  }: {\n    data: NodeData\n    isMultiple: boolean\n    isSelected: boolean\n  }) => {\n    const nodeModel = this.lf.getNodeModelById(data.id)\n    this.toFrontGroup(nodeModel)\n    // 重置所有的group zIndex,防止group节点zIndex增长为正。\n    if (this.topGroupZIndex > DEFAULT_TOP_Z_INDEX) {\n      this.topGroupZIndex = DEFAULT_BOTTOM_Z_INDEX\n      const allGroups = this.lf.graphModel.nodes\n        .filter((node) => node.isGroup)\n        .sort((a, b) => a.zIndex - b.zIndex)\n      let preZIndex = 0\n      for (let i = 0; i < allGroups.length; i++) {\n        const group = allGroups[i]\n        if (group.zIndex !== preZIndex) {\n          this.topGroupZIndex++\n          preZIndex = group.zIndex\n        }\n        group.setZIndex(this.topGroupZIndex)\n      }\n    }\n    // FIX #1004\n    // 如果节点被多选，\n    // 这个节点是分组，则将分组的所有子节点取消选中\n    // 这个节点是分组的子节点，且其所属分组节点已选，则取消选中\n    if (isMultiple && isSelected) {\n      if (nodeModel?.isGroup) {\n        ;(nodeModel as GroupNodeModel).children.forEach((child) => {\n          const childModel = this.lf.graphModel.getElement(child)\n          childModel?.setSelected(false)\n        })\n      } else {\n        const groupId = this.nodeGroupMap.get(data.id)\n        if (groupId) {\n          const groupModel = this.lf.getNodeModelById(groupId)\n          groupModel?.isSelected && nodeModel?.setSelected(false)\n        }\n      }\n    }\n  }\n  toFrontGroup = (model?: BaseNodeModel) => {\n    if (!model || !model.isGroup) {\n      return\n    }\n    this.topGroupZIndex++\n    model.setZIndex(this.topGroupZIndex)\n    if (model.children) {\n      ;(model as GroupNodeModel).children.forEach((nodeId) => {\n        const node = this.lf.getNodeModelById(nodeId)\n        this.toFrontGroup(node)\n      })\n    }\n  }\n\n  /**\n   * 获取自定位置其所属分组\n   * 当分组重合时，优先返回最上层的分组\n   */\n  getGroup(\n    bounds: BoxBoundsPoint,\n    nodeData: NodeData,\n  ): BaseNodeModel | undefined {\n    const { nodes } = this.lf.graphModel\n    const groups = nodes.filter(\n      (node) =>\n        node.isGroup &&\n        (node as GroupNodeModel).isInRange(bounds) &&\n        node.id !== nodeData.id,\n    )\n    if (groups.length === 0) return\n    if (groups.length === 1) return groups[0]\n    let topGroup = groups[groups.length - 1]\n    for (let i = groups.length - 2; i >= 0; i--) {\n      if (groups[i].zIndex > topGroup.zIndex) {\n        topGroup = groups[i]\n      }\n    }\n    return topGroup\n  }\n\n  /**\n   * 获取某个节点所属的groupModel\n   */\n  getNodeGroup(nodeId: string) {\n    const groupId = this.nodeGroupMap.get(nodeId)\n    if (groupId) {\n      return this.lf.getNodeModelById(groupId)\n    }\n  }\n\n  render() {}\n  destroy() {}\n}\n\nexport * from './GroupNode'\nexport default GroupNode\n", "import { h } from '@logicflow/core'\nimport { GroupNode, GroupNodeModel } from '../../../materials/group'\n\nexport function SubProcessFactory(): {\n  type: string\n  model: any\n  view: any\n} {\n  class view extends GroupNode {\n    getFoldIcon() {\n      const { model } = this.props\n      const { x, y, width, height, properties, foldable } =\n        model as GroupNodeModel\n      const foldX = model.x - model.width / 2 + 5\n      const foldY = model.y - model.height / 2 + 5\n      if (!foldable) return null\n      const iconIcon = h('path', {\n        fill: 'none',\n        stroke: '#818281',\n        strokeWidth: 2,\n        'pointer-events': 'none',\n        d: properties.isFolded\n          ? `M ${foldX + 3},${foldY + 6} ${foldX + 11},${foldY + 6} M${\n              foldX + 7\n            },${foldY + 2} ${foldX + 7},${foldY + 10}`\n          : `M ${foldX + 3},${foldY + 6} ${foldX + 11},${foldY + 6} `,\n      })\n      return h('g', {}, [\n        h('rect', {\n          height: 12,\n          width: 14,\n          rx: 2,\n          ry: 2,\n          strokeWidth: 1,\n          fill: '#F4F5F6',\n          stroke: '#CECECE',\n          cursor: 'pointer',\n          x: x - width / 2 + 5,\n          y: y - height / 2 + 5,\n          onClick: (e: any) => {\n            e\n              .stopPropagation()(model as GroupNodeModel)\n              .foldGroup?.(!properties.isFolded)\n          },\n        }),\n        iconIcon,\n      ])\n    }\n\n    getResizeShape() {\n      const { model } = this.props\n      const { x, y, width, height } = model\n      const style = model.getNodeStyle()\n      const foldRectAttrs = {\n        ...style,\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        stroke: 'black',\n        strokeWidth: 2,\n        strokeDasharray: '0 0',\n      }\n      return h('g', {}, [\n        // this.getAddAbleShape(),\n        h('rect', { ...foldRectAttrs }),\n        this.getFoldIcon(),\n      ])\n    }\n  }\n\n  class model extends GroupNodeModel {\n    boundaryEvents: any\n\n    initNodeData(data: {\n      width: number\n      height: number\n      properties: Record<string, any>\n    }) {\n      super.initNodeData(data)\n      this.foldable = true\n      // this.isFolded = true;\n      this.resizable = true\n      this.width = 400\n      this.height = 200\n      // 根据 properties中的配置重设 宽高\n      this.resetWidthHeight()\n      this.isTaskNode = true // 标识此节点是任务节点，可以被附件边界事件\n      this.boundaryEvents = [] // 记录自己附加的边界事件\n    }\n\n    // 自定义根据properties.iniProp\n    resetWidthHeight() {\n      const width = (this.properties.iniProp as any)?.width\n      const height = (this.properties.iniProp as any)?.height\n      width && (this.width = width)\n      height && (this.height = height)\n    }\n\n    getNodeStyle() {\n      const style = super.getNodeStyle()\n      style.stroke = '#989891'\n      style.strokeWidth = 1\n      style.strokeDasharray = '3 3'\n      if (this.isSelected) {\n        style.stroke = 'rgb(124, 15, 255)'\n      }\n      // isBoundaryEventTouchingTask属性用于标识拖动边界节点是否靠近此节点\n      // 如果靠近，则高亮提示\n      // style.fill = 'rgb(255, 230, 204)';\n      const { isBoundaryEventTouchingTask } = this.properties\n      if (isBoundaryEventTouchingTask) {\n        style.stroke = '#00acff'\n        style.strokeWidth = 2\n      }\n\n      return style\n    }\n\n    addChild(id: string) {\n      const model = this.graphModel.getElement(id)\n      model?.setProperties({\n        parent: this.id,\n      })\n      super.addChild(id)\n    }\n\n    // 隐藏锚点而不是设置锚点数为0\n    // 因为分组内部节点与外部节点相连时，\n    // 如果折叠分组，需要分组代替内部节点与外部节点相连。\n    getAnchorStyle() {\n      const style = super.getAnchorStyle()\n      style.stroke = '#000'\n      style.fill = '#fff'\n      if (!style.hover) {\n        style.hover = {}\n      }\n      style.hover.stroke = 'transparent'\n      return style\n    }\n\n    getOutlineStyle() {\n      const style = super.getOutlineStyle()\n      style.stroke = 'transparent'\n      if (!style.hover) {\n        style.hover = {}\n      }\n      style.hover.stroke = 'transparent'\n      return style\n    }\n\n    /**\n     * 提供方法给插件在判断此节点被拖动边界事件节点靠近时调用，从而触发高亮\n     */\n    setTouching(flag: boolean) {\n      this.setProperty('isBoundaryEventTouchingTask', flag)\n    }\n\n    /**\n     * 附加后记录被附加的边界事件节点Id\n     */\n    addBoundaryEvent(nodeId: string) {\n      this.setTouching(false)\n      if (this.boundaryEvents.find((item: string) => item === nodeId)) {\n        return false\n      }\n      const boundaryEvent = this.graphModel.getNodeModelById(nodeId)\n      boundaryEvent?.setProperties({\n        attachedToRef: this.id,\n      })\n      this.boundaryEvents.push(nodeId)\n      return true\n    }\n\n    /**\n     * 被附加的边界事件节点被删除时，移除记录\n     */\n    deleteBoundaryEvent(nodeId: string) {\n      this.boundaryEvents = this.boundaryEvents.filter(\n        (item: string) => item !== nodeId,\n      )\n    }\n  }\n\n  return {\n    type: 'bpmn:subProcess',\n    view,\n    model,\n  }\n}\n", "import LogicFlow from '@logicflow/core'\nimport { serviceTaskIcon, userTaskIcon } from '../icons'\nimport { TaskNodeFactory } from './task'\nimport { SubProcessFactory } from './subProcess'\n\nfunction boundaryEvent(lf: any) {\n  lf.on('node:drag,node:dnd-drag', checkAppendBoundaryEvent)\n  lf.on('node:drop,node:dnd-add', appendBoundaryEvent)\n  lf.graphModel.addNodeMoveRules(\n    (\n      model: { isTaskNode: any; boundaryEvents: any },\n      deltaX: any,\n      deltaY: any,\n    ) => {\n      if (model.isTaskNode) {\n        // 如果移动的是分组，那么分组的子节点也跟着移动。\n        const nodeIds = model.boundaryEvents\n        lf.graphModel.moveNodes(nodeIds, deltaX, deltaY, true)\n        return true\n      }\n      return true\n    },\n  )\n\n  function appendBoundaryEvent(this: any, { data }: any) {\n    const { type, id } = data\n    if (type !== 'bpmn:boundaryEvent') {\n      return\n    }\n    const { nodes } = lf.graphModel\n    for (const node of nodes) {\n      if (node.isTaskNode) {\n        let nodeId = null\n        if ((nodeId = isBoundaryEventCloseToTask(node, data)) !== null) {\n          const eventModel = lf.graphModel.getNodeModelById(id)\n          const nodeModel = lf.graphModel.getNodeModelById(nodeId)\n          const { attachedToRef } = eventModel.properties\n          if (attachedToRef && attachedToRef !== nodeId) {\n            lf.graphModel\n              .getNodeModelById(attachedToRef)\n              .deleteBoundaryEvent(id)\n          }\n          nodeModel.addBoundaryEvent(id)\n          return\n        }\n      }\n    }\n  }\n\n  // 判断此节点是否在某个节点的边界上\n  // 如果在，且这个节点model存在属性isTaskNode，则调用这个方法\n  function checkAppendBoundaryEvent(this: any, { data }: any) {\n    const { type } = data\n    if (type !== 'bpmn:boundaryEvent') {\n      return\n    }\n    const { nodes } = lf.graphModel\n    for (const node of nodes) {\n      if (node.isTaskNode) {\n        if (isBoundaryEventCloseToTask(node, data)) {\n          // 同时只允许在一个节点的边界上\n          node.setTouching(true)\n        } else {\n          node.setTouching(false)\n        }\n      }\n    }\n  }\n\n  function isBoundaryEventCloseToTask(task: any, event: any) {\n    const offset = 5\n    const { x: tx, y: ty, width: twidth, height: theight, id } = task\n    const bbox = {\n      minX: tx - twidth / 2,\n      maxX: tx + twidth / 2,\n      minY: ty - theight / 2,\n      maxY: ty + theight / 2,\n    }\n    const { x: bx, y: by } = event\n    const outerBBox = {\n      minX: bbox.minX - offset,\n      maxX: bbox.maxX + offset,\n      minY: bbox.minY - offset,\n      maxY: bbox.maxY + offset,\n    }\n    const innerBBox = {\n      minX: bbox.minX + offset,\n      maxX: bbox.maxX - offset,\n      minY: bbox.minY + offset,\n      maxY: bbox.maxY - offset,\n    }\n    if (\n      bx > outerBBox.minX &&\n      bx < outerBBox.maxX &&\n      by > outerBBox.minY &&\n      by < outerBBox.maxY\n    ) {\n      if (\n        !(\n          bx > innerBBox.minX &&\n          bx < innerBBox.maxX &&\n          by > innerBBox.minY &&\n          by < innerBBox.maxY\n        )\n      ) {\n        return id\n      }\n    }\n    return null\n  }\n}\n\nexport function registerTaskNodes(lf: LogicFlow) {\n  const ServiceTask = TaskNodeFactory('bpmn:serviceTask', serviceTaskIcon)\n  const UserTask = TaskNodeFactory('bpmn:userTask', userTaskIcon)\n\n  lf.register(ServiceTask)\n  lf.register(UserTask)\n  lf.register(SubProcessFactory())\n\n  boundaryEvent(lf)\n}\n", "import LogicFlow, {\n  h,\n  GraphModel,\n  PolylineEdge,\n  PolylineEdgeModel,\n} from '@logicflow/core'\nimport { genBpmnId } from '../../utils'\n\nimport EdgeConfig = LogicFlow.EdgeConfig\n\ntype SequenceFlowType = {\n  panels: string[]\n  [key: string]: any\n}\n\nexport function sequenceFlowFactory(props?: any): {\n  type: string\n  model: any\n  view: any\n} {\n  class model extends PolylineEdgeModel {\n    static extendKey = 'SequenceFlowModel'\n\n    constructor(data: EdgeConfig, graphModel: GraphModel) {\n      if (!data.id) {\n        data.id = `Flow_${genBpmnId()}`\n      }\n      const properties: SequenceFlowType = {\n        ...(props || {}),\n        ...data.properties,\n        // panels: ['condition'],\n        isDefaultFlow: false,\n      }\n      data.properties = properties\n\n      super(data, graphModel)\n    }\n  }\n\n  class view extends PolylineEdge {\n    static extendKey = 'SequenceFlowEdge'\n\n    getStartArrow(): h.JSX.Element | null {\n      // eslint-disable-next-line no-shadow\n      const { model } = this.props\n      const { isDefaultFlow } = model.properties\n      return isDefaultFlow\n        ? h('path', {\n            refX: 15,\n            stroke: '#000000',\n            strokeWidth: 2,\n            d: 'M 20 5 10 -5 z',\n          })\n        : h('path', {\n            d: '',\n          })\n    }\n  }\n\n  return {\n    type: 'bpmn:sequenceFlow',\n    view,\n    model,\n  }\n}\n", "import LogicFlow from '@logicflow/core'\nimport { sequenceFlowFactory } from './sequenceFlow'\n\nexport const SequenceFlow = sequenceFlowFactory()\n\nexport function registerFlows(lf: LogicFlow) {\n  lf.register(SequenceFlow)\n}\n", "import { registerEventNodes } from './presets/Event'\nimport { registerGatewayNodes } from './presets/Gateway'\nimport { registerTaskNodes } from './presets/Task'\nimport { registerFlows } from './presets/Flow'\nimport { timerIcon } from './presets/icons'\nimport * as icons from './presets/icons'\nimport * as bpmnUtils from './utils'\n\ntype DefinitionConfigType = {\n  nodes: string[]\n  definition: EventDefinitionType[] | TaskDefinitionType[]\n}\n\ntype DefinitionPropertiesType = {\n  definitionType: string\n  timerType?: TimerType\n  timerValue?: string\n  [key: string]: any\n}\n\ntype EventDefinitionType = {\n  type: string\n  icon: string | Record<string, any>\n  toJSON: (data?: unknown) => unknown\n  properties: DefinitionPropertiesType\n  [key: string]: any\n}\n\ntype TaskDefinitionType = {\n  type: string\n  [key: string]: any\n}\n\ntype TimerType = 'timerCycle' | 'timerDate' | 'timerDuration'\n\nconst definitionConfig: DefinitionConfigType[] = [\n  {\n    nodes: ['startEvent', 'intermediateCatchEvent', 'boundaryEvent'],\n    definition: [\n      {\n        type: 'bpmn:timerEventDefinition',\n        icon: timerIcon,\n        properties: {\n          definitionType: 'bpmn:timerEventDefinition',\n          timerValue: '',\n          timerType: '',\n        },\n      },\n    ],\n  },\n]\n\nexport function useDefinition(definition: any) {\n  function setDefinition(config: DefinitionConfigType[]) {\n    function set(\n      nodes: any[],\n      definitions: EventDefinitionType[] | TaskDefinitionType[],\n    ) {\n      nodes.forEach((name) => {\n        if (!definition?.[name]) {\n          definition[name] = new Map()\n        }\n        const map = definition?.[name]\n        definitions.forEach((define) => {\n          map.set(define.type, define)\n        })\n      })\n      return definition\n    }\n\n    config.forEach((define: any) => {\n      set(define.nodes, define.definition)\n    })\n  }\n\n  return () => [definition, setDefinition]\n}\n\nexport class BPMNElements {\n  static pluginName = 'BpmnElementsPlugin'\n\n  constructor({ lf }: any) {\n    lf.definition = {}\n    lf.useDefinition = useDefinition(lf.definition)\n    const [_definition, setDefinition] = lf.useDefinition()\n    console.log('_definition', _definition)\n    setDefinition(definitionConfig)\n\n    registerEventNodes(lf)\n    registerGatewayNodes(lf)\n    registerFlows(lf)\n    registerTaskNodes(lf)\n\n    lf.setDefaultEdgeType('bpmn:sequenceFlow')\n  }\n}\n\nexport * from './presets/Event/EndEventFactory'\nexport * from './presets/Event/IntermediateCatchEvent'\nexport * from './presets/Event/StartEventFactory'\nexport * from './presets/Event/boundaryEventFactory'\nexport * from './presets/Event/IntermediateThrowEvent'\nexport * from './presets/Flow/sequenceFlow'\nexport * from './presets/Task/task'\nexport * from './presets/Task/subProcess'\nexport * from './presets/Gateway/gateway'\nexport { icons, bpmnUtils }\n", "export const StartEventConfig = {\n  width: 40,\n  height: 40,\n};\n\nexport const EndEventConfig = {\n  width: 40,\n  height: 40,\n};\n\nexport const BoundaryEventConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const IntermediateEventConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const ParallelGatewayConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const InclusiveGatewayConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const ExclusiveGatewayConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const ServiceTaskConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const UserTaskConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const SubProcessConfig = {\n  width: 100,\n  height: 80,\n};\n\nexport const theme = {\n  rect: {\n    radius: 5,\n    stroke: 'rgb(24, 125, 255)',\n  },\n  circle: {\n    r: 18,\n    stroke: 'rgb(24, 125, 255)',\n  },\n  polygon: {\n    stroke: 'rgb(24, 125, 255)',\n  },\n  polyline: {\n    stroke: 'rgb(24, 125, 255)',\n    hoverStroke: 'rgb(24, 125, 255)',\n    selectedStroke: 'rgb(24, 125, 255)',\n  },\n  edgeText: {\n    background: {\n      fill: 'white',\n      height: 14,\n      stroke: 'transparent',\n      radius: 3,\n    },\n  },\n};\n", "/* eslint-disable no-continue */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable guard-for-in */\n/* eslint-disable func-names */\n// @ts-nocheck\n\nimport { has } from 'lodash-es'\n// ========================================================================\n//  XML.ObjTree -- XML source code from/to JavaScript object like E4X\n// ========================================================================\n\nconst XML = function () {}\n\n//  constructor\nXML.ObjTree = function () {\n  // @ts-ignore\n  return this\n}\n\n//  class variables\n\nXML.ObjTree.VERSION = '0.23'\n\n//  object prototype\n\nXML.ObjTree.prototype.xmlDecl = '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n'\nXML.ObjTree.prototype.attr_prefix = '-'\n\n//  method: parseXML( xmlsource )\n\nXML.ObjTree.prototype.parseXML = function (xml) {\n  let root\n  if (window.DOMParser) {\n    const xmldom = new DOMParser()\n    //      xmldom.async = false;           // DOMParser is always sync-mode\n    const dom = xmldom.parseFromString(xml, 'application/xml')\n    if (!dom) return\n    root = dom.documentElement\n  } else if (window.ActiveXObject) {\n    xmldom = new ActiveXObject('Microsoft.XMLDOM')\n    xmldom.async = false\n    xmldom.loadXML(xml)\n    root = xmldom.documentElement\n  }\n  if (!root) return\n  const data = this.parseDOM(root)\n  return data\n}\n\n//  method: parseHTTP( url, options, callback )\n\nXML.ObjTree.prototype.parseHTTP = function (url, options, callback) {\n  const myOpt = {}\n  for (const key in options) {\n    myOpt[key] = options[key] // copy object\n  }\n  if (!myOpt.method) {\n    if (\n      typeof myOpt.postBody === 'undefined' &&\n      typeof myOpt.postbody === 'undefined' &&\n      typeof myOpt.parameters === 'undefined'\n    ) {\n      myOpt.method = 'get'\n    } else {\n      myOpt.method = 'post'\n    }\n  }\n  if (callback) {\n    myOpt.asynchronous = true // async-mode\n    const __this = this\n    const __func = callback\n    const __save = myOpt.onComplete\n    myOpt.onComplete = function (trans) {\n      let tree\n      if (trans && trans.responseXML && trans.responseXML.documentElement) {\n        tree = __this.parseDOM(trans.responseXML.documentElement)\n      }\n      __func(tree, trans)\n      if (__save) __save(trans)\n    }\n  } else {\n    myOpt.asynchronous = false // sync-mode\n  }\n  let trans\n  if (typeof HTTP !== 'undefined' && HTTP.Request) {\n    myOpt.uri = url\n    const req = new HTTP.Request(myOpt)\n    if (req) trans = req.transport\n  } else if (typeof Ajax !== 'undefined' && Ajax.Request) {\n    const req = new Ajax.Request(url, myOpt)\n    if (req) trans = req.transport\n  }\n  if (callback) return trans\n  if (trans && trans.responseXML && trans.responseXML.documentElement) {\n    return this.parseDOM(trans.responseXML.documentElement)\n  }\n}\n\nXML.ObjTree.prototype.parseDOM = function (root) {\n  if (!root) return\n\n  this.__force_array = {}\n  if (this.force_array) {\n    for (let i = 0; i < this.force_array.length; i++) {\n      this.__force_array[this.force_array[i]] = 1\n    }\n  }\n\n  let json = this.parseElement(root) // parse root node\n  if (this.__force_array[root.nodeName]) {\n    json = [json]\n  }\n  if (root.nodeType !== 11) {\n    // DOCUMENT_FRAGMENT_NODE\n    const tmp = {}\n    tmp[root.nodeName] = json // root nodeName\n    json = tmp\n  }\n  return json\n}\n\n//  method: parseElement( element )\n/**\n * @reference node type reference https://www.w3schools.com/xml/dom_nodetype.asp\n */\nXML.ObjTree.prototype.parseElement = function (elem) {\n  //  PROCESSING_INSTRUCTION_NODE\n  if (elem.nodeType === 7) {\n    return\n  }\n\n  //  TEXT_NODE CDATA_SECTION_NODE COMMENT_NODE\n  if (elem.nodeType === 3 || elem.nodeType === 4 || elem.nodeType === 8) {\n    // eslint-disable-next-line no-control-regex\n    const bool = elem.nodeValue.match(/[^\\x00-\\x20]/)\n    if (bool == null) return // ignore white spaces\n    return elem.nodeValue\n  }\n\n  let retVal = null\n  const cnt = {}\n\n  if (elem.attributes && elem.attributes.length) {\n    retVal = {}\n    for (let i = 0; i < elem.attributes.length; i++) {\n      let key = elem.attributes[i].nodeName\n      if (typeof key !== 'string') continue\n      let val = elem.attributes[i].nodeValue\n      try {\n        val = JSON.parse(elem.attributes[i].nodeValue.replace(/'/g, '\"'))\n      } catch (error) {\n        val = elem.attributes[i].nodeValue\n      }\n      if (val === null || val === undefined) continue\n      key = this.attr_prefix + key\n      if (typeof cnt[key] === 'undefined') cnt[key] = 0\n      cnt[key]++\n      this.addNode(retVal, key, cnt[key], val)\n    }\n  }\n\n  //  parse child nodes (recursive)\n  if (elem.childNodes && elem.childNodes.length) {\n    let textOnly = true\n    if (retVal) textOnly = false // some attributes exists\n    for (let i = 0; i < elem.childNodes.length && textOnly; i++) {\n      const nType = elem.childNodes[i].nodeType\n      if (nType === 3 || nType === 4 || nType === 8) continue\n      textOnly = false\n    }\n    if (textOnly) {\n      if (!retVal) retVal = ''\n      for (let i = 0; i < elem.childNodes.length; i++) {\n        retVal += elem.childNodes[i].nodeValue\n      }\n    } else {\n      if (!retVal) retVal = {}\n      for (let i = 0; i < elem.childNodes.length; i++) {\n        const key = elem.childNodes[i].nodeName\n        if (typeof key !== 'string') continue\n        const val = this.parseElement(elem.childNodes[i])\n        if (!val) continue\n        if (typeof cnt[key] === 'undefined') cnt[key] = 0\n        cnt[key]++\n        this.addNode(retVal, key, cnt[key], val)\n      }\n    }\n  } else {\n    // @see issue https://github.com/didi/LogicFlow/issues/1068\n    // if retVal is null, that means the elem doesn't have any attributes and children,\n    // the elem would be like: <a /> or <a></a>, so set retVal to empty object {}\n    retVal === null && (retVal = {})\n  }\n  return retVal\n}\n\n//  method: addNode( hash, key, count, value )\n\nXML.ObjTree.prototype.addNode = function (hash, key, counts, val) {\n  if (this.__force_array[key]) {\n    if (counts === 1) hash[key] = []\n    hash[key][hash[key].length] = val // push\n  } else if (counts === 1) {\n    // 1st sibling\n    hash[key] = val\n  } else if (counts === 2) {\n    // 2nd sibling\n    hash[key] = [hash[key], val]\n  } else {\n    // 3rd sibling and more\n    hash[key][hash[key].length] = val\n  }\n}\n\n//  method: writeXML( tree )\n\nXML.ObjTree.prototype.writeXML = function (tree) {\n  const xml = this.hash_to_xml(null, tree)\n  return this.xmlDecl + xml\n}\n\n//  method: hash_to_xml( tagName, tree )\n\nXML.ObjTree.prototype.hash_to_xml = function (name, tree) {\n  const elem = []\n  const attr = []\n  for (const key in tree) {\n    if (!has(tree, key)) continue\n    const val = tree[key]\n    if (key.charAt(0) !== this.attr_prefix) {\n      if (typeof val === 'undefined' || val == null) {\n        elem[elem.length] = `<${key} />`\n      } else if (typeof val === 'object' && val.constructor === Array) {\n        elem[elem.length] = this.array_to_xml(key, val)\n      } else if (typeof val === 'object') {\n        elem[elem.length] = this.hash_to_xml(key, val)\n      } else {\n        elem[elem.length] = this.scalar_to_xml(key, val)\n      }\n    } else {\n      attr[attr.length] = ` ${key.substring(1)}=\"${this.xml_escape(val)}\"`\n    }\n  }\n  const jattr = attr.join('')\n  let jelem = elem.join('')\n  if (typeof name === 'undefined' || name == null) {\n    // no tag\n  } else if (elem.length > 0) {\n    if (jelem.match(/\\n/)) {\n      jelem = `<${name}${jattr}>\\n${jelem}</${name}>\\n`\n    } else {\n      jelem = `<${name}${jattr}>${jelem}</${name}>\\n`\n    }\n  } else {\n    jelem = `<${name}${jattr} />\\n`\n  }\n  return jelem\n}\n\n//  method: array_to_xml( tagName, array )\n\nXML.ObjTree.prototype.array_to_xml = function (name, array) {\n  const out = []\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i]\n    if (typeof val === 'undefined' || val == null) {\n      out[out.length] = `<${name} />`\n    } else if (typeof val === 'object' && val.constructor === Array) {\n      out[out.length] = this.array_to_xml(name, val)\n    } else if (typeof val === 'object') {\n      out[out.length] = this.hash_to_xml(name, val)\n    } else {\n      out[out.length] = this.scalar_to_xml(name, val)\n    }\n  }\n  return out.join('')\n}\n\n//  method: scalar_to_xml( tagName, text )\n\nXML.ObjTree.prototype.scalar_to_xml = function (name, text) {\n  if (name === '#text') {\n    return this.xml_escape(text)\n  }\n  return `<${name}>${this.xml_escape(text)}</${name}>\\n`\n}\n\n//  method: xml_escape( text )\n\nXML.ObjTree.prototype.xml_escape = function (text) {\n  return text\n    .replace(/&/g, '&')\n    .replace(/</g, '<')\n    .replace(/>/g, '>')\n    .replace(/\"/g, '\"')\n}\n\n/*\n// ========================================================================\n\n=head1 NAME\n\nXML.ObjTree -- XML source code from/to JavaScript object like E4X\n\n=head1 SYNOPSIS\n\nvar xotree = new XML.ObjTree();\nvar tree1 = {\nroot: {\nnode: \"Hello, World!\"\n}\n};\nvar xml1 = xotree.writeXML( tree1 );        // object tree to XML source\nalert( \"xml1: \"+xml1 );\n\nvar xml2 = '<?xml version=\"1.0\"?><response><error>0</error></response>';\nvar tree2 = xotree.parseXML( xml2 );        // XML source to object tree\nalert( \"error: \"+tree2.response.error );\n\n=head1 DESCRIPTION\n\nXML.ObjTree class is a parser/generator between XML source code\nand JavaScript object like E4X, ECMAScript for XML.\nThis is a JavaScript version of the XML::TreePP module for Perl.\nThis also works as a wrapper for XMLHTTPRequest and successor to JKL.ParseXML class\nwhen this is used with prototype.js or JSAN's HTTP.Request class.\n\n=head2 JavaScript object tree format\n\nA sample XML source:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<family name=\"Kawasaki\">\n<father>Yasuhisa</father>\n<mother>Chizuko</mother>\n<children>\n<girl>Shiori</girl>\n<boy>Yusuke</boy>\n<boy>Kairi</boy>\n</children>\n</family>\n\nIts JavaScript object tree like JSON/E4X:\n\n{\n'family': {\n'-name':    'Kawasaki',\n'father':   'Yasuhisa',\n'mother':   'Chizuko',\n'children': {\n'girl': 'Shiori'\n'boy': [\n'Yusuke',\n'Kairi'\n]\n}\n}\n};\n\nEach elements are parsed into objects:\n\ntree.family.father;             # the father's given name.\n\nPrefix '-' is inserted before every attributes' name.\n\ntree.family[\"-name\"];           # this family's family name\n\nA array is used because this family has two boys.\n\ntree.family.children.boy[0];    # first boy's name\ntree.family.children.boy[1];    # second boy's name\ntree.family.children.girl;      # (girl has no other sisters)\n\n=head1 METHODS\n\n=head2 xotree = new XML.ObjTree()\n\nThis constructor method returns a new XML.ObjTree object.\n\n=head2 xotree.force_array = [ \"rdf:li\", \"item\", \"-xmlns\" ];\n\nThis property allows you to specify a list of element names\nwhich should always be forced into an array representation.\nThe default value is null, it means that context of the elements\nwill determine to make array or to keep it scalar.\n\n=head2 xotree.attr_prefix = '@';\n\nThis property allows you to specify a prefix character which is\ninserted before each attribute names.\nInstead of default prefix '-', E4X-style prefix '@' is also available.\nThe default character is '-'.\nOr set '@' to access attribute values like E4X, ECMAScript for XML.\nThe length of attr_prefix must be just one character and not be empty.\n\n=head2 tree = xotree.parseXML( xmlSrc );\n\nThis method loads an XML document using the supplied string\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseDOM( domNode );\n\nThis method parses a DOM tree (ex. responseXML.documentElement)\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseHTTP( url, options );\n\nThis method loads a XML file from remote web server\nand returns its JavaScript object converted.\nXMLHTTPRequest's synchronous mode is always used.\nThis mode blocks the process until the response is completed.\n\nFirst argument is a XML file's URL\nwhich must exist in the same domain as parent HTML file's.\nCross-domain loading is not available for security reasons.\n\nSecond argument is options' object which can contains some parameters:\nmethod, postBody, parameters, onLoading, etc.\n\nThis method requires JSAN's L<HTTP.Request> class or prototype.js's Ajax.Request class.\n\n=head2 xotree.parseHTTP( url, options, callback );\n\nIf a callback function is set as third argument,\nXMLHTTPRequest's asynchronous mode is used.\n\nThis mode calls a callback function with XML file's JavaScript object converted\nafter the response is completed.\n\n=head2 xmlSrc = xotree.writeXML( tree );\n\nThis method parses a JavaScript object tree\nand returns its XML source generated.\n\n=head1 EXAMPLES\n\n=head2 Text node and attributes\n\nIf a element has both of a text node and attributes\nor both of a text node and other child nodes,\ntext node's value is moved to a special node named \"#text\".\n\nvar xotree = new XML.ObjTree();\nvar xmlSrc = '<span class=\"author\">Kawasaki Yusuke</span>';\nvar tree = xotree.parseXML( xmlSrc );\nvar class = tree.span[\"-class\"];        # attribute\nvar name  = tree.span[\"#text\"];         # text node\n\n=head2 parseHTTP() method with HTTP-GET and sync-mode\n\nHTTP/Request.js or prototype.js must be loaded before calling this method.\n\nvar xotree = new XML.ObjTree();\nvar url = \"http://example.com/index.html\";\nvar tree = xotree.parseHTTP( url );\nxotree.attr_prefix = '@';                   // E4X-style\nalert( tree.html[\"@lang\"] );\n\nThis code shows C<lang=\"\"> attribute from a X-HTML source code.\n\n=head2 parseHTTP() method with HTTP-POST and async-mode\n\nThird argument is a callback function which is called on onComplete.\n\nvar xotree = new XML.ObjTree();\nvar url = \"http://example.com/mt-tb.cgi\";\nvar opts = {\npostBody:   \"title=...&excerpt=...&url=...&blog_name=...\"\n};\nvar func = function ( tree ) {\nalert( tree.response.error );\n};\nxotree.parseHTTP( url, opts, func );\n\nThis code send a track back ping and shows its response code.\n\n=head2 Simple RSS reader\n\nThis is a RSS reader which loads RDF file and displays all items.\n\nvar xotree = new XML.ObjTree();\nxotree.force_array = [ \"rdf:li\", \"item\" ];\nvar url = \"http://example.com/news-rdf.xml\";\nvar func = function( tree ) {\nvar elem = document.getElementById(\"rss_here\");\nfor( var i=0; i<tree[\"rdf:RDF\"].item.length; i++ ) {\nvar divTag = document.createElement( \"div\" );\nvar aTag = document.createElement( \"a\" );\naTag.href = tree[\"rdf:RDF\"].item[i].link;\nvar title = tree[\"rdf:RDF\"].item[i].title;\nvar tNode = document.createTextNode( title );\naTag.appendChild( tNode );\ndivTag.appendChild( aTag );\nelem.appendChild( divTag );\n}\n};\nxotree.parseHTTP( url, {}, func );\n\n=head2  XML-RPC using writeXML, prototype.js and parseDOM\n\nIf you wish to use prototype.js's Ajax.Request class by yourself:\n\nvar xotree = new XML.ObjTree();\nvar reqTree = {\nmethodCall: {\nmethodName: \"weblogUpdates.ping\",\nparams: {\nparam: [\n{ value: \"Kawa.net xp top page\" },  // 1st param\n{ value: \"http://www.kawa.net/\" }   // 2nd param\n]\n}\n}\n};\nvar reqxml = xotree.writeXML( reqTree );       // JS-Object to XML code\nvar url = \"http://example.com/xmlrpc\";\nvar func = function( req ) {\nvar resDom = req.responseXML.documentElement;\nxotree.force_array = [ \"member\" ];\nvar resTree = xotree.parseDOM( resDom );   // XML-DOM to JS-Object\nalert( resTree.methodResponse.params.param.value.struct.member[0].value.string );\n};\nvar opt = {\nmethod:         \"post\",\npostBody:       reqxml,\nasynchronous:   true,\nonComplete:     func\n};\nnew Ajax.Request( url, opt );\n\n=head1 AUTHOR\n\nYusuke Kawasaki http://www.kawa.net/\n=head1 COPYRIGHT AND LICENSE\n\nCopyright (c) 2005-2006 Yusuke Kawasaki. All rights reserved.\nThis program is free software; you can redistribute it and/or\nmodify it under the Artistic license. Or whatever license I choose,\nwhich I will do instead of keeping this documentation like it is.\n\n=cut\n// ========================================================================\n*/\n\nconst lfXml2Json = (xmlData) => new XML.ObjTree().parseXML(xmlData)\n\nexport { lfXml2Json }\n", "/* eslint-disable guard-for-in */\nfunction type(obj: any) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction addSpace(depth: number) {\n  return '  '.repeat(depth);\n}\n\nfunction handleAttributes(obj: any): any {\n  if (type(obj) === '[object Object]') {\n    return Object.keys(obj).reduce((tmp: any, key: string) => {\n      let tmpKey = key;\n      if (key.charAt(0) === '-') {\n        tmpKey = key.substring(1);\n      }\n      tmp[tmpKey] = handleAttributes(obj[key]);\n      return tmp;\n    }, {});\n  } if (Array.isArray(obj)) {\n    return obj.map((item) => handleAttributes(item));\n  }\n  return obj;\n}\n\nfunction getAttributes(obj: any) {\n  let tmp = obj;\n  try {\n    if (typeof tmp !== 'string') {\n      tmp = JSON.parse(obj);\n    }\n  } catch (error) {\n    tmp = JSON.stringify(handleAttributes(obj)).replace(/\"/g, '\\'');\n  }\n  return tmp;\n}\n\nconst tn = '\\t\\n';\n\n// @see issue https://github.com/didi/LogicFlow/issues/718, refactoring of function toXml\nfunction toXml(obj: any, name: string, depth: number) {\n  const frontSpace = addSpace(depth);\n  let str = '';\n  const prefix = tn + frontSpace;\n  if (name === '-json') return '';\n  if (name === '#text') {\n    return prefix + obj;\n  } if (name === '#cdata-section') {\n    return `${prefix}<![CDATA[${obj}]]>`;\n  } if (name === '#comment') {\n    return `${prefix}<!--${obj}-->`;\n  }\n  if (`${name}`.charAt(0) === '-') {\n    return ` ${name.substring(1)}=\"${getAttributes(obj)}\"`;\n  }\n  if (Array.isArray(obj)) {\n    str += obj.map((item) => toXml(item, name, depth + 1)).join('');\n  } else if (type(obj) === '[object Object]') {\n    const keys = Object.keys(obj);\n    let attributes = '';\n    let children = obj['-json']\n      ? tn + addSpace(depth + 1) + obj['-json']\n      : '';\n\n    str += `${depth === 0 ? '' : prefix}<${name}`;\n\n    keys.forEach((k) => {\n      k.charAt(0) === '-'\n        ? (attributes += toXml(obj[k], k, depth + 1))\n        : (children += toXml(obj[k], k, depth + 1));\n    });\n\n    str\n        += attributes\n        + (children !== '' ? `>${children}${prefix}</${name}>` : ' />');\n  } else {\n    str += `${prefix}<${name}>${obj.toString()}</${name}>`;\n  }\n\n  return str;\n}\n\nfunction lfJson2Xml(obj: any) {\n  let xmlStr = '';\n  for (const key in obj) {\n    xmlStr += toXml(obj[key], key, 0);\n  }\n  return xmlStr;\n}\n\nexport { lfJson2Xml, handleAttributes };\n", "/* eslint-disable func-names */\n/* eslint-disable no-continue */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-shadow */\nimport _ from 'lodash-es'\nimport {\n  ExclusiveGatewayConfig,\n  InclusiveGatewayConfig,\n  ParallelGatewayConfig,\n  StartEventConfig,\n  EndEventConfig,\n  BoundaryEventConfig,\n  IntermediateEventConfig,\n  ServiceTaskConfig,\n  UserTaskConfig,\n  SubProcessConfig,\n} from './constant'\nimport { lfXml2Json } from './xml2json'\nimport { lfJson2Xml, handleAttributes } from './json2xml'\n\ntype NodeConfig = {\n  id: string\n  properties?: Record<string, unknown>\n  text?: {\n    x: number\n    y: number\n    value: string\n  }\n  type: string\n  x: number\n  y: number\n  children?: string[]\n}\n\ntype Point = {\n  x: number\n  y: number\n}\n\ntype EdgeConfig = {\n  id: string\n  sourceNodeId: string\n  targetNodeId: string\n  type: string\n  startPoint?: {\n    x: number\n    y: number\n  }\n  endPoint?: {\n    x: number\n    y: number\n  }\n  text?: {\n    x: number\n    y: number\n    value: string\n  }\n  pointsList?: Point[]\n  properties: Record<string, unknown>\n}\n\ntype TransformerType = {\n  [key: string]: {\n    in?: (key: string, data: any) => any\n    out?: (data: any) => any\n  }\n}\n\ntype MappingType = {\n  in?: {\n    [key: string]: string\n  }\n  out?: {\n    [key: string]: string\n  }\n}\n\ntype excludeFieldsType = {\n  in?: Set<string>\n  out?: Set<string>\n}\n\ntype ExtraPropsType = {\n  retainedAttrsFields?: string[]\n  excludeFields?: excludeFieldsType\n  transformer?: TransformerType\n  mapping?: MappingType\n}\n\nenum BpmnElements {\n  START = 'bpmn:startEvent',\n  END = 'bpmn:endEvent',\n  INTERMEDIATE_CATCH = 'bpmn:intermediateCatchEvent',\n  INTERMEDIATE_THROW = 'bpmn:intermediateThrowEvent',\n  BOUNDARY = 'bpmn:boundaryEvent',\n  PARALLEL_GATEWAY = 'bpmn:parallelGateway',\n  INCLUSIVE_GATEWAY = 'bpmn:inclusiveGateway',\n  EXCLUSIVE_GATEWAY = 'bpmn:exclusiveGateway',\n  USER = 'bpmn:userTask',\n  SYSTEM = 'bpmn:serviceTask',\n  FLOW = 'bpmn:sequenceFlow',\n  SUBPROCESS = 'bpmn:subProcess',\n}\n\nconst defaultAttrsForInput = [\n  '-name',\n  '-id',\n  'bpmn:incoming',\n  'bpmn:outgoing',\n  '-sourceRef',\n  '-targetRef',\n  '-children',\n]\n\nconst defaultRetainedProperties = [\n  'properties',\n  'startPoint',\n  'endPoint',\n  'pointsList',\n]\n\nconst defaultExcludeFields = {\n  in: [],\n  out: [\n    'properties.panels',\n    'properties.nodeSize',\n    'properties.definitionId',\n    'properties.timerValue',\n    'properties.timerType',\n    'properties.definitionType',\n    'properties.parent',\n    'properties.isBoundaryEventTouchingTask',\n  ],\n}\n\nconst mergeInNOutObject = (target: any, source: any): TransformerType => {\n  const sourceKeys = Object.keys(source || {})\n  sourceKeys.forEach((key) => {\n    if (target[key]) {\n      const { in: fnIn, out: fnOut } = source[key]\n      if (fnIn) {\n        target[key].in = fnIn\n      }\n      if (fnOut) {\n        target[key].out = fnOut\n      }\n    } else {\n      target[key] = source[key]\n    }\n  })\n  return target\n}\n\n// @ts-ignore\nlet defaultTransformer: TransformerType = {\n  'bpmn:startEvent': {\n    out(data: any) {\n      const { properties } = data\n      return defaultTransformer[properties.definitionType]?.out?.(data) || {}\n    },\n  },\n  // 'bpmn:endEvent': undefined,\n  'bpmn:intermediateCatchEvent': {\n    out(data: any) {\n      const { properties } = data\n      return defaultTransformer[properties.definitionType]?.out?.(data) || {}\n    },\n  },\n  'bpmn:intermediateThrowEvent': {\n    out(data: any) {\n      const { properties } = data\n      return defaultTransformer[properties.definitionType]?.out?.(data) || {}\n    },\n  },\n  'bpmn:boundaryEvent': {\n    out(data: any) {\n      const { properties } = data\n      return defaultTransformer[properties.definitionType]?.out?.(data) || {}\n    },\n  },\n  // 'bpmn:userTask': undefined,\n  'bpmn:sequenceFlow': {\n    out(data: any) {\n      const {\n        properties: { expressionType, condition },\n      } = data\n      if (condition) {\n        if (expressionType === 'cdata') {\n          return {\n            json: `<bpmn:conditionExpression xsi:type=\"bpmn2:tFormalExpression\"><![CDATA[\\${${condition}}]]></bpmn:conditionExpression>`,\n          }\n        }\n        return {\n          json: `<bpmn:conditionExpression xsi:type=\"bpmn2:tFormalExpression\">${condition}</bpmn:conditionExpression>`,\n        }\n      }\n      return {\n        json: '',\n      }\n    },\n  },\n  // 'bpmn:subProcess': undefined,\n  // 'bpmn:participant': undefined,\n  'bpmn:timerEventDefinition': {\n    out(data: any) {\n      const {\n        properties: { timerType, timerValue, definitionId },\n      } = data\n\n      const typeFunc = () =>\n        `<bpmn:${timerType} xsi:type=\"bpmn:tFormalExpression\">${timerValue}</bpmn:${timerType}>`\n\n      return {\n        json: `<bpmn:timerEventDefinition id=\"${definitionId}\"${\n          timerType && timerValue\n            ? `>${typeFunc()}</bpmn:timerEventDefinition>`\n            : '/>'\n        }`,\n      }\n    },\n    in(key: string, data: any) {\n      const definitionType = key\n      const definitionId = data['-id']\n      let timerType = ''\n      let timerValue = ''\n      for (const key of Object.keys(data)) {\n        if (key.includes('bpmn:')) {\n          ;[, timerType] = key.split(':')\n          timerValue = data[key]?.['#text']\n        }\n      }\n      return {\n        '-definitionId': definitionId,\n        '-definitionType': definitionType,\n        '-timerType': timerType,\n        '-timerValue': timerValue,\n      }\n    },\n  },\n  'bpmn:conditionExpression': {\n    in(_key: string, data: any) {\n      let condition = ''\n      let expressionType = ''\n      if (data['#cdata-section']) {\n        expressionType = 'cdata'\n        condition = /^\\$\\{(.*)\\}$/g.exec(data['#cdata-section'])?.[1] || ''\n      } else if (data['#text']) {\n        expressionType = 'normal'\n        condition = data['#text']\n      }\n\n      return {\n        '-condition': condition,\n        '-expressionType': expressionType,\n      }\n    },\n  },\n}\n\n/**\n * 将普通json转换为xmlJson\n * xmlJson中property会以“-”开头\n * 如果没有“-”表示为子节点\n * fix issue https://github.com/didi/LogicFlow/issues/718, contain the process of #text/#cdata and array\n * @reference node type reference https://www.w3schools.com/xml/dom_nodetype.asp\n * @param retainedAttrsFields retainedAttrsFields会和默认的defaultRetainedProperties:\n * [\"properties\", \"startPoint\", \"endPoint\", \"pointsList\"]合并\n * 这意味着出现在这个数组里的字段当它的值是数组或是对象时不会被视为一个节点而是一个属性\n * @param excludeFields excludeFields会和默认的defaultExcludeFields合并，出现在这个数组中的字段在转换时会被忽略\n * @param transformer 对应节点或者边的子内容转换规则\n */\nfunction convertNormalToXml(other?: ExtraPropsType) {\n  const { retainedAttrsFields, excludeFields, transformer } = other ?? {}\n  const retainedAttrsSet = new Set([\n    ...defaultRetainedProperties,\n    ...(retainedAttrsFields || []),\n  ])\n  const excludeFieldsSet = {\n    in: new Set([...defaultExcludeFields.in, ...(excludeFields?.in || [])]),\n    out: new Set([...defaultExcludeFields.out, ...(excludeFields?.out || [])]),\n  }\n\n  defaultTransformer = mergeInNOutObject(defaultTransformer, transformer)\n\n  return (object: { nodes: any; edges: any }) => {\n    const { nodes } = object\n    const { edges } = object\n    function ToXmlJson(obj: any, path: string): any {\n      if (obj?.flag === 1) {\n        return\n      }\n\n      let fn\n      // @ts-ignore\n      if ((fn = defaultTransformer[obj.type]) && fn.out) {\n        const output = fn.out(obj)\n        const keys = Object.keys(output)\n        if (keys.length > 0) {\n          keys.forEach((key: string) => {\n            obj[key] = output[key]\n          })\n        }\n      }\n\n      if (obj?.children) {\n        obj.children = obj.children.map((key: any) => {\n          const target =\n            nodes.find((item: { id: any }) => item.id === key) ||\n            edges.find((item: { id: any }) => item.id === key)\n          return target || {}\n        })\n      }\n\n      const xmlJson: any = {}\n\n      if (typeof obj === 'string') {\n        return obj\n      }\n\n      if (Array.isArray(obj)) {\n        return (\n          obj\n            .map((item) => ToXmlJson(item, ''))\n            // eslint-disable-next-line eqeqeq\n            .filter((item) => item != undefined)\n        )\n      }\n\n      for (const [key, value] of Object.entries(obj)) {\n        if ((value as any)?.['flag'] === 1) {\n          return\n        }\n        const newPath = [path, key].filter((item) => item).join('.')\n        if (excludeFieldsSet.out.has(newPath)) {\n          continue\n        } else if (typeof value !== 'object') {\n          // node type reference https://www.w3schools.com/xml/dom_nodetype.asp\n          if (\n            key.indexOf('-') === 0 ||\n            ['#text', '#cdata-section', '#comment'].includes(key)\n          ) {\n            xmlJson[key] = value\n          } else {\n            xmlJson[`-${key}`] = value\n          }\n        } else if (retainedAttrsSet.has(newPath)) {\n          xmlJson[`-${key}`] = ToXmlJson(value, newPath)\n        } else {\n          xmlJson[key] = ToXmlJson(value, newPath)\n        }\n      }\n\n      return xmlJson\n    }\n    return ToXmlJson(object, '')\n  }\n}\n\n/**\n * 将xmlJson转换为普通的json，在内部使用。\n */\nfunction convertXmlToNormal(xmlJson: any) {\n  const json: any = {}\n  for (const [key, value] of Object.entries(xmlJson)) {\n    if (key.indexOf('-') === 0) {\n      json[key.substring(1)] = handleAttributes(value)\n    } else if (typeof value === 'string') {\n      json[key] = value\n    } else if (Object.prototype.toString.call(value) === '[object Object]') {\n      json[key] = convertXmlToNormal(value)\n    } else if (Array.isArray(value)) {\n      // contain the process of array\n      json[key] = value.map((v) => convertXmlToNormal(v))\n    } else {\n      json[key] = value\n    }\n  }\n  return json\n}\n\n/**\n * 设置bpmn process信息\n * 目标格式请参考examples/bpmn.json\n * bpmn因为是默认基于xml格式的，其特点与json存在差异。\n * 1) 如果是xml的属性，json中属性用'-'开头\n * 2）如果只有一个子元素，json中表示为正常属性\n * 3）如果是多个子元素，json中使用数组存储\n */\nfunction convertLf2ProcessData(\n  bpmnData: any,\n  data: any,\n  other?: ExtraPropsType,\n) {\n  const nodeIdMap = new Map()\n\n  const xmlJsonData = convertNormalToXml(other)(data)\n\n  xmlJsonData.nodes.forEach((node: any) => {\n    const {\n      '-id': nodeId,\n      '-type': nodeType,\n      text,\n      children,\n      ...otherProps\n    } = node\n    const processNode: any = { '-id': nodeId }\n\n    if (text?.['-value']) {\n      processNode['-name'] = text['-value']\n    }\n\n    if (otherProps['-json']) {\n      processNode['-json'] = otherProps['-json']\n    }\n\n    if (otherProps['-properties']) {\n      Object.assign(processNode, otherProps['-properties'])\n    }\n\n    if (children) {\n      processNode.children = children\n    }\n\n    // (bpmnData[nodeType] ??= []).push(processNode);\n\n    if (!bpmnData[nodeType]) {\n      bpmnData[nodeType] = []\n    }\n    bpmnData[nodeType].push(processNode)\n\n    nodeIdMap.set(nodeId, processNode)\n  })\n\n  const sequenceFlow = xmlJsonData.edges.map((edge: any) => {\n    const {\n      '-id': id,\n      // '-type': type,\n      '-sourceNodeId': sourceNodeId,\n      '-targetNodeId': targetNodeId,\n      text,\n      ...otherProps\n    } = edge\n    const targetNode = nodeIdMap.get(targetNodeId)\n    // (targetNode['bpmn:incoming'] ??= []).push(id);\n\n    if (!targetNode['bpmn:incoming']) {\n      targetNode['bpmn:incoming'] = []\n    }\n    targetNode['bpmn:incoming'].push(id)\n\n    const edgeConfig: any = {\n      '-id': id,\n      '-sourceRef': sourceNodeId,\n      '-targetRef': targetNodeId,\n    }\n\n    if (text?.['-value']) {\n      edgeConfig['-name'] = text['-value']\n    }\n\n    if (otherProps['-json']) {\n      edgeConfig['-json'] = otherProps['-json']\n    }\n\n    if (otherProps['-properties']) {\n      Object.assign(edgeConfig, otherProps['-properties'])\n    }\n\n    return edgeConfig\n  })\n\n  // @see https://github.com/didi/LogicFlow/issues/325\n  // 需要保证incoming在outgoing之前\n  data.edges.forEach(({ sourceNodeId, id }: any) => {\n    const sourceNode = nodeIdMap.get(sourceNodeId)\n    // (sourceNode['bpmn:outgoing'] ??= []).push(id);\n\n    if (!sourceNode['bpmn:outgoing']) {\n      sourceNode['bpmn:outgoing'] = []\n    }\n    sourceNode['bpmn:outgoing'].push(id)\n  })\n\n  bpmnData['bpmn:subProcess']?.forEach((item: any) => {\n    const setMap: any = {\n      'bpmn:incoming': new Set<string>(),\n      'bpmn:outgoing': new Set<string>(),\n    }\n    const edgesInSubProcess: any = []\n    item.children.forEach((child: any) => {\n      const target = nodeIdMap.get(child['-id'])\n      ;['bpmn:incoming', 'bpmn:outgoing'].forEach((key: string) => {\n        target[key] &&\n          target[key].forEach((value: string) => {\n            setMap[key].add(value)\n          })\n      })\n\n      const index = bpmnData[child['-type']]?.findIndex(\n        (_item: any) => _item['-id'] === child['-id'],\n      )\n      if (index >= 0) {\n        bpmnData[child['-type']].splice(index, 1)\n      }\n\n      nodeIdMap.delete(child['-id'])\n\n      // (item[child['-type']] ??= []).push(target);\n      if (!item[child['-type']]) {\n        item[child['-type']] = []\n      }\n      item[child['-type']].push(target)\n    })\n\n    const { 'bpmn:incoming': incomingSet, 'bpmn:outgoing': outgoingSet } =\n      setMap\n\n    outgoingSet.forEach((value: string) => {\n      incomingSet.has(value) && edgesInSubProcess.push(value)\n    })\n\n    for (let i = 0; i < edgesInSubProcess.length; ) {\n      const index = sequenceFlow.findIndex(\n        (item: any) => item['-id'] === edgesInSubProcess[i],\n      )\n      if (index >= 0) {\n        // (item['bpmn:sequenceFlow'] ??= []).push(sequenceFlow[index]);\n        if (!item['bpmn:sequenceFlow']) {\n          item['bpmn:sequenceFlow'] = []\n        }\n        item['bpmn:sequenceFlow'].push(sequenceFlow[index])\n        sequenceFlow.splice(index, 1)\n      } else {\n        i++\n      }\n    }\n\n    delete item.children\n  })\n\n  bpmnData[BpmnElements.FLOW] = sequenceFlow\n\n  return bpmnData\n}\n\n/**\n * adapterOut 设置bpmn diagram信息\n */\nfunction convertLf2DiagramData(bpmnDiagramData: any, data: any) {\n  bpmnDiagramData['bpmndi:BPMNEdge'] = data.edges.map((edge: any) => {\n    const edgeId = edge.id\n    const pointsList = edge.pointsList.map(\n      ({ x, y }: { x: number; y: number }) => ({\n        '-x': x,\n        '-y': y,\n      }),\n    )\n    const diagramData: any = {\n      '-id': `${edgeId}_di`,\n      '-bpmnElement': edgeId,\n      'di:waypoint': pointsList,\n    }\n    if (edge.text?.value) {\n      diagramData['bpmndi:BPMNLabel'] = {\n        'dc:Bounds': {\n          '-x': edge.text.x - (edge.text.value.length * 10) / 2,\n          '-y': edge.text.y - 7,\n          '-width': edge.text.value.length * 10,\n          '-height': 14,\n        },\n      }\n    }\n    return diagramData\n  })\n  bpmnDiagramData['bpmndi:BPMNShape'] = data.nodes.map((node: any) => {\n    const nodeId = node.id\n    let width = 100\n    let height = 80\n    let { x, y } = node\n    // bpmn坐标是基于左上角，LogicFlow基于中心点，此处处理一下。\n    const shapeConfig = BPMNBaseAdapter.shapeConfigMap.get(node.type)\n    if (shapeConfig) {\n      width = shapeConfig.width\n      height = shapeConfig.height\n    }\n    x -= width / 2\n    y -= height / 2\n    const diagramData: any = {\n      '-id': `${nodeId}_di`,\n      '-bpmnElement': nodeId,\n      'dc:Bounds': {\n        '-x': x,\n        '-y': y,\n        '-width': width,\n        '-height': height,\n      },\n    }\n    if (node.text?.value) {\n      diagramData['bpmndi:BPMNLabel'] = {\n        'dc:Bounds': {\n          '-x': node.text.x - (node.text.value.length * 10) / 2,\n          '-y': node.text.y - 7,\n          '-width': node.text.value.length * 10,\n          '-height': 14,\n        },\n      }\n    }\n    return diagramData\n  })\n}\n\nconst ignoreType = ['bpmn:incoming', 'bpmn:outgoing']\n\n/**\n * 将bpmn数据转换为LogicFlow内部能识别数据\n */\nfunction convertBpmn2LfData(bpmnData: any, other?: ExtraPropsType) {\n  let nodes: any[] = []\n  let edges: any[] = []\n\n  const eleMap = new Map<string, any>()\n\n  const { transformer, excludeFields } = other ?? {}\n\n  const excludeFieldsSet = {\n    in: new Set([...defaultExcludeFields.in, ...(excludeFields?.in || [])]),\n    out: new Set([...defaultExcludeFields.out, ...(excludeFields?.out || [])]),\n  }\n\n  defaultTransformer = mergeInNOutObject(defaultTransformer, transformer)\n\n  const definitions = bpmnData['bpmn:definitions']\n  if (definitions) {\n    const process = definitions['bpmn:process']\n    ;(function (data, callbacks) {\n      callbacks.forEach((callback) => {\n        try {\n          Object.keys(data).forEach((key: string) => {\n            try {\n              callback(key)\n            } catch (error) {\n              console.error(error)\n            }\n          })\n        } catch (error) {\n          console.error(error)\n        }\n      })\n    })(process, [\n      (key: string) => {\n        // 将bpmn:subProcess中的数据提升到process中\n        function subProcessProcessing(data: any) {\n          // data['-children'] ??= [];\n          if (!data['-children']) {\n            data['-children'] = []\n          }\n          Object.keys(data).forEach((key: string) => {\n            if (key.indexOf('bpmn:') === 0 && !ignoreType.includes(key)) {\n              // process[key] ??= [];\n              if (!process[key]) {\n                process[key] = []\n              }\n              !Array.isArray(process[key]) && (process[key] = [process[key]])\n              Array.isArray(data[key])\n                ? process[key].push(...data[key])\n                : process[key].push(data[key])\n              if (Array.isArray(data[key])) {\n                data[key].forEach((item: any) => {\n                  !key.includes('Flow') && data['-children'].push(item['-id'])\n                })\n              } else {\n                !key.includes('Flow') &&\n                  data['-children'].push(data[key]['-id'])\n              }\n              delete data[key]\n            }\n          })\n        }\n        if (key === 'bpmn:subProcess') {\n          const data = process[key]\n          if (Array.isArray(data)) {\n            data.forEach((item: any) => {\n              key === 'bpmn:subProcess' && subProcessProcessing(item)\n            })\n          } else {\n            subProcessProcessing(data)\n          }\n        }\n      },\n      (key: string) => {\n        // 处理被提升的节点、边, 主要是通过definitionTransformer处理出节点的属性\n        const fn = (obj: any) => {\n          Object.keys(obj).forEach((key: string) => {\n            if (key.includes('bpmn:')) {\n              let props: any = {}\n              if (defaultTransformer[key] && defaultTransformer[key].in) {\n                props = defaultTransformer[key].in?.(key, _.cloneDeep(obj[key]))\n                delete obj[key]\n              } else {\n                func(obj[key])\n              }\n              let keys: (string | number | symbol)[]\n              if ((keys = Reflect.ownKeys(props)).length > 0) {\n                keys.forEach((key) => {\n                  Reflect.set(obj, key, props[key])\n                })\n              }\n            }\n          })\n        }\n        function func(data: any) {\n          eleMap.set(data['-id'], data)\n          if (Array.isArray(data)) {\n            data.forEach((item) => {\n              func(item)\n            })\n          } else if (typeof data === 'object') {\n            fn(data)\n          }\n        }\n        func(process[key])\n      },\n      (key: string) => {\n        if (key.indexOf('bpmn:') === 0) {\n          const value = process[key]\n          if (key === 'bpmn:sequenceFlow') {\n            const bpmnEdges =\n              definitions['bpmndi:BPMNDiagram']['bpmndi:BPMNPlane'][\n                'bpmndi:BPMNEdge'\n              ]\n            edges = getLfEdges(value, bpmnEdges)\n          } else {\n            const shapes =\n              definitions['bpmndi:BPMNDiagram']['bpmndi:BPMNPlane'][\n                'bpmndi:BPMNShape'\n              ]\n            if (key === 'bpmn:boundaryEvent') {\n              const data = process[key]\n              const fn = (item: any) => {\n                const { '-attachedToRef': attachedToRef } = item\n                const attachedToNode = eleMap.get(attachedToRef)\n\n                // attachedToNode['-boundaryEvents'] ??= [];\n\n                if (!attachedToNode['-boundaryEvents']) {\n                  attachedToNode['-boundaryEvents'] = []\n                }\n\n                attachedToNode['-boundaryEvents'].push(item['-id'])\n              }\n              if (Array.isArray(data)) {\n                data.forEach((item) => {\n                  fn(item)\n                })\n              } else {\n                fn(data)\n              }\n            }\n            nodes = nodes.concat(getLfNodes(value, shapes, key))\n          }\n        }\n      },\n    ])\n  }\n\n  const ignoreFields = (\n    obj: Record<string, any>,\n    filterSet: Set<string>,\n    path: string,\n  ) => {\n    Object.keys(obj).forEach((key) => {\n      const tmpPath = path ? `${path}.${key}` : key\n      if (filterSet.has(tmpPath)) {\n        delete obj[key]\n      } else if (typeof obj[key] === 'object') {\n        ignoreFields(obj[key], filterSet, tmpPath)\n      }\n    })\n  }\n\n  nodes.forEach((node) => {\n    if (other?.mapping?.in) {\n      const mapping = other?.mapping?.in\n      const { type } = node\n      if (mapping[type]) {\n        node.type = mapping[type]\n      }\n    }\n    ignoreFields(node, excludeFieldsSet.in, '')\n    // Object.keys(node.properties).forEach((key) => {\n    //   excludeFieldsSet.in.has(key) && delete node.properties[key];\n    // });\n  })\n\n  edges.forEach((edge) => {\n    if (other?.mapping?.in) {\n      const mapping = other?.mapping?.in\n      const { type } = edge\n      if (mapping[type]) {\n        edge.type = mapping[type]\n      }\n    }\n    ignoreFields(edge, excludeFieldsSet.in, '')\n    // Object.keys(edge.properties).forEach((key) => {\n    //   excludeFieldsSet.in.has(key) && delete edge.properties[key];\n    // });\n  })\n\n  return {\n    nodes,\n    edges,\n  }\n}\n\nfunction getLfNodes(value: any, shapes: any, key: any) {\n  const nodes: NodeConfig[] = []\n  if (Array.isArray(value)) {\n    // 数组\n    value.forEach((val) => {\n      let shapeValue: any\n      if (Array.isArray(shapes)) {\n        shapeValue = shapes.find(\n          (shape) => shape['-bpmnElement'] === val['-id'],\n        )\n      } else {\n        shapeValue = shapes\n      }\n      const node = getNodeConfig(shapeValue, key, val)\n      nodes.push(node)\n    })\n  } else {\n    let shapeValue\n    if (Array.isArray(shapes)) {\n      shapeValue = shapes.find(\n        (shape) => shape['-bpmnElement'] === value['-id'],\n      )\n    } else {\n      shapeValue = shapes\n    }\n    const node = getNodeConfig(shapeValue, key, value)\n    nodes.push(node)\n  }\n  return nodes\n}\n\nfunction getNodeConfig(shapeValue: any, type: any, processValue: any) {\n  let x = Number(shapeValue['dc:Bounds']['-x'])\n  let y = Number(shapeValue['dc:Bounds']['-y'])\n  const { '-children': children } = processValue\n  const name = processValue['-name']\n  const shapeConfig = BPMNBaseAdapter.shapeConfigMap.get(type)\n  if (shapeConfig) {\n    x += shapeConfig.width / 2\n    y += shapeConfig.height / 2\n  }\n  let properties: any = {}\n  // 判断是否存在额外的属性，将额外的属性放到properties中\n  Object.entries(processValue).forEach(([key, value]) => {\n    if (!defaultAttrsForInput.includes(key)) {\n      properties[key] = value\n    }\n  })\n  properties = convertXmlToNormal(properties)\n  let text\n  if (name) {\n    text = {\n      x,\n      y,\n      value: name,\n    }\n    // 自定义文本位置\n    if (\n      shapeValue['bpmndi:BPMNLabel'] &&\n      shapeValue['bpmndi:BPMNLabel']['dc:Bounds']\n    ) {\n      const textBounds = shapeValue['bpmndi:BPMNLabel']['dc:Bounds']\n      text.x = Number(textBounds['-x']) + Number(textBounds['-width']) / 2\n      text.y = Number(textBounds['-y']) + Number(textBounds['-height']) / 2\n    }\n  }\n  const nodeConfig: NodeConfig = {\n    id: shapeValue['-bpmnElement'],\n    type,\n    x,\n    y,\n    properties,\n  }\n  children && (nodeConfig.children = children)\n  if (text) {\n    nodeConfig.text = text\n  }\n  return nodeConfig\n}\n\nfunction getLfEdges(value: any, bpmnEdges: any) {\n  const edges: EdgeConfig[] = []\n  if (Array.isArray(value)) {\n    value.forEach((val) => {\n      let edgeValue\n      if (Array.isArray(bpmnEdges)) {\n        edgeValue = bpmnEdges.find(\n          (edge) => edge['-bpmnElement'] === val['-id'],\n        )\n      } else {\n        edgeValue = bpmnEdges\n      }\n      edges.push(getEdgeConfig(edgeValue, val))\n    })\n  } else {\n    let edgeValue\n    if (Array.isArray(bpmnEdges)) {\n      edgeValue = bpmnEdges.find(\n        (edge) => edge['-bpmnElement'] === value['-id'],\n      )\n    } else {\n      edgeValue = bpmnEdges\n    }\n    edges.push(getEdgeConfig(edgeValue, value))\n  }\n  return edges\n}\n\nfunction getEdgeConfig(edgeValue: any, processValue: any) {\n  let text\n  const textVal = processValue['-name']\n  if (textVal) {\n    const textBounds = edgeValue['bpmndi:BPMNLabel']['dc:Bounds']\n    // 如果边文本换行，则其偏移量应该是最长一行的位置\n    let textLength = 0\n    textVal.split('\\n').forEach((textSpan: string) => {\n      if (textLength < textSpan.length) {\n        textLength = textSpan.length\n      }\n    })\n\n    text = {\n      value: textVal,\n      x: Number(textBounds['-x']) + (textLength * 10) / 2,\n      y: Number(textBounds['-y']) + 7,\n    }\n  }\n  let properties: any = {}\n  // 判断是否存在额外的属性，将额外的属性放到properties中\n  Object.entries(processValue).forEach(([key, value]) => {\n    if (!defaultAttrsForInput.includes(key)) {\n      properties[key] = value\n    }\n  })\n  properties = convertXmlToNormal(properties)\n  const pointsList = edgeValue['di:waypoint'].map((point: any) => ({\n    x: Number(point['-x']),\n    y: Number(point['-y']),\n  }))\n  const edge: EdgeConfig = {\n    id: processValue['-id'],\n    type: BpmnElements.FLOW,\n    pointsList,\n    sourceNodeId: processValue['-sourceRef'],\n    targetNodeId: processValue['-targetRef'],\n    properties,\n  }\n  if (text) {\n    edge.text = text\n  }\n  return edge\n}\n\nclass BPMNBaseAdapter {\n  static pluginName = 'bpmn-adapter'\n  static shapeConfigMap = new Map()\n  processAttributes: {\n    ['-isExecutable']: string\n    ['-id']: string\n  }\n  definitionAttributes: {\n    ['-id']: string\n    ['-xmlns:xsi']: string\n    ['-xmlns:bpmn']: string\n    ['-xmlns:bpmndi']: string\n    ['-xmlns:dc']: string\n    ['-xmlns:di']: string\n    ['-targetNamespace']: string\n    ['-exporter']: string\n    ['-exporterVersion']: string\n    [key: string]: any\n  }\n  constructor({ lf }: any) {\n    lf.adapterIn = this.adapterIn\n    lf.adapterOut = this.adapterOut\n    this.processAttributes = {\n      '-isExecutable': 'true',\n      '-id': 'Process',\n    }\n    this.definitionAttributes = {\n      '-id': 'Definitions',\n      '-xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      '-xmlns:bpmn': 'http://www.omg.org/spec/BPMN/20100524/MODEL',\n      '-xmlns:bpmndi': 'http://www.omg.org/spec/BPMN/20100524/DI',\n      '-xmlns:dc': 'http://www.omg.org/spec/DD/20100524/DC',\n      '-xmlns:di': 'http://www.omg.org/spec/DD/20100524/DI',\n      '-targetNamespace': 'http://logic-flow.org',\n      '-exporter': 'logicflow',\n      '-exporterVersion': '1.2.10',\n    }\n  }\n  setCustomShape(key: string, val: any) {\n    BPMNBaseAdapter.shapeConfigMap.set(key, val)\n  }\n  /**\n   * @param retainedAttrsFields?: string[] (可选)属性保留字段，retainedField会和默认的defaultRetainedFields:\n   * [\"properties\", \"startPoint\", \"endPoint\", \"pointsList\"]合并，\n   * 这意味着出现在这个数组里的字段当它的值是数组或是对象时不会被视为一个节点而是一个属性。\n   * @param excludeFields excludeFields会和默认的defaultExcludeFields合并，出现在这个数组中的字段在转换时会被忽略\n   * @param transformer 对应节点或者边的内容转换规则\n   */\n  adapterOut = (data: any, other?: ExtraPropsType) => {\n    const bpmnProcessData = { ...this.processAttributes }\n    convertLf2ProcessData(bpmnProcessData, data, other)\n    const bpmnDiagramData = {\n      '-id': 'BPMNPlane_1',\n      '-bpmnElement': bpmnProcessData['-id'],\n    }\n    convertLf2DiagramData(bpmnDiagramData, data)\n    const definitions = this.definitionAttributes\n    definitions['bpmn:process'] = bpmnProcessData\n    definitions['bpmndi:BPMNDiagram'] = {\n      '-id': 'BPMNDiagram_1',\n      'bpmndi:BPMNPlane': bpmnDiagramData,\n    }\n    const bpmnData = {\n      'bpmn:definitions': definitions,\n    }\n\n    if (other?.mapping?.out) {\n      const mapping = other?.mapping?.out\n\n      const nameMapping = (obj: Record<string, any> | any[]): any => {\n        if (Array.isArray(obj)) {\n          obj.forEach((item) => nameMapping(item))\n        }\n        if (typeof obj === 'object') {\n          Object.keys(obj).forEach((key: string) => {\n            let mappingName: string\n            if ((mappingName = mapping[key])) {\n              obj[mappingName] = _.cloneDeep(obj[key])\n              delete obj[key]\n              nameMapping(obj[mappingName])\n            } else {\n              nameMapping(obj[key])\n            }\n          })\n        }\n      }\n      nameMapping(bpmnData)\n    }\n\n    return bpmnData\n  }\n  adapterIn = (bpmnData: any, other?: ExtraPropsType) => {\n    if (bpmnData) {\n      return convertBpmn2LfData(bpmnData, other)\n    }\n  }\n}\n\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.START, {\n  width: StartEventConfig.width,\n  height: StartEventConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.END, {\n  width: EndEventConfig.width,\n  height: EndEventConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.INTERMEDIATE_CATCH, {\n  width: IntermediateEventConfig.width,\n  height: IntermediateEventConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.INTERMEDIATE_THROW, {\n  width: IntermediateEventConfig.width,\n  height: IntermediateEventConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.BOUNDARY, {\n  width: BoundaryEventConfig.width,\n  height: BoundaryEventConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.PARALLEL_GATEWAY, {\n  width: ParallelGatewayConfig.width,\n  height: ParallelGatewayConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.INCLUSIVE_GATEWAY, {\n  width: InclusiveGatewayConfig.width,\n  height: InclusiveGatewayConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.EXCLUSIVE_GATEWAY, {\n  width: ExclusiveGatewayConfig.width,\n  height: ExclusiveGatewayConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.SYSTEM, {\n  width: ServiceTaskConfig.width,\n  height: ServiceTaskConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.USER, {\n  width: UserTaskConfig.width,\n  height: UserTaskConfig.height,\n})\nBPMNBaseAdapter.shapeConfigMap.set(BpmnElements.SUBPROCESS, {\n  width: SubProcessConfig.width,\n  height: SubProcessConfig.height,\n})\n\nclass BPMNAdapter extends BPMNBaseAdapter {\n  static pluginName = 'BPMNAdapter'\n  private props: ExtraPropsType\n  constructor(data: any) {\n    super(data)\n    const { lf, props } = data\n    lf.adapterIn = this.adapterXmlIn\n    lf.adapterOut = this.adapterXmlOut\n    this.props = props\n  }\n  adapterXmlIn = (bpmnData: any) => {\n    const json = lfXml2Json(bpmnData)\n    return this.adapterIn(json, this.props)\n  }\n  adapterXmlOut = (data: any) => {\n    const outData = this.adapterOut(data, this.props)\n    return lfJson2Xml(outData)\n  }\n}\n\nexport { BPMNBaseAdapter, BPMNAdapter, convertNormalToXml, convertXmlToNormal }\n\nexport default BPMNAdapter\n", "/**\n * 图片缓存, 已请求过的图片直接从缓存中获取\n */\nconst imageCache: Record<string, string> = {}\n\n/**\n * 当获取图片失败时会返回失败信息，是 text/plain 类型的数据\n * @param str - 图片内容\n * @returns\n */\nexport function isTextPlainBase64(str: string) {\n  return str.startsWith('data:text/plain')\n}\n\n/**\n * 将网络图片转为 base64\n * @param url - 图片地址\n * @returns\n */\nexport async function convertImageToBase64(url: string): Promise<string> {\n  if (imageCache[url]) {\n    return imageCache[url]\n  }\n  return new Promise((resolve, reject) => {\n    try {\n      fetch(url)\n        .then((response) => response.blob())\n        .then((blob) => {\n          const reader = new FileReader()\n          reader.onloadend = () => {\n            resolve((imageCache[url] = reader.result as string))\n          }\n          reader.onerror = reject\n          reader.readAsDataURL(blob)\n        })\n        .catch(() => {\n          resolve((imageCache[url] = url))\n        })\n    } catch (error) {\n      // 如果转换失败，后续大概率仍然会失败，因此直接缓存\n      return (imageCache[url] = url)\n    }\n  })\n}\n\n/**\n * 使用 base64 的图片替换 img 标签的 src 或 image 标签的 href\n * @param node - html 节点或 svg 节点\n */\nexport async function updateImageSrcOrHrefWithBase64Image(\n  node: HTMLImageElement | SVGImageElement,\n  attrName: 'src' | 'href',\n) {\n  try {\n    const url = node.getAttribute(attrName) || ''\n    // 已经是 base64 图片，不需要处理\n    if (url.startsWith('data:')) {\n      return\n    }\n    const base64Image = await convertImageToBase64(url)\n    if (isTextPlainBase64(base64Image)) {\n      return\n    }\n    node.setAttribute(attrName, base64Image)\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * 使用 base64 的图片替换背景图片\n * @param node - html 节点\n * @param styleAttr - 样式属性名称\n */\nexport async function updateBackgroundImageWithBase64Image(\n  node: HTMLElement,\n  url: string,\n) {\n  try {\n    // 已经是 base64 图片，不需要处理\n    if (url.startsWith('data:')) {\n      return\n    }\n    const base64Image = await convertImageToBase64(url)\n    if (isTextPlainBase64(base64Image)) {\n      return\n    }\n    node.style.backgroundImage = `url(${base64Image})`\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * 更新图片数据\n * @param node - 节点\n */\nexport async function updateImageSource(node: HTMLElement | SVGElement) {\n  const nodes = [node]\n  let nodePtr\n  const promises: any[] = []\n  while (nodes.length) {\n    nodePtr = nodes.shift()\n    if (nodePtr.children.length) {\n      nodes.push(...nodePtr.children)\n    }\n    if (nodePtr instanceof HTMLElement) {\n      // 如果有 style 的 background, backgroundImage 属性中有 url(xxx), 尝试替换为 base64 图片\n      const { background, backgroundImage } = nodePtr.style\n      const backgroundUrlMatch = background.match(/url\\([\"']?(.*?)[\"']?\\)/)\n      if (backgroundUrlMatch && backgroundUrlMatch[1]) {\n        const imageUrl = backgroundUrlMatch[1]\n        promises.push(updateBackgroundImageWithBase64Image(nodePtr, imageUrl))\n      }\n      const backgroundImageUrlMatch = backgroundImage.match(\n        /url\\([\"']?(.*?)[\"']?\\)/,\n      )\n      if (backgroundImageUrlMatch && backgroundImageUrlMatch[1]) {\n        const imageUrl = backgroundImageUrlMatch[1]\n        promises.push(updateBackgroundImageWithBase64Image(nodePtr, imageUrl))\n      }\n    }\n    // 如果有 img 和 image 标签，尝试将 src 和 href 替换为 base64 图片\n    if (nodePtr instanceof HTMLImageElement) {\n      promises.push(updateImageSrcOrHrefWithBase64Image(nodePtr, 'src'))\n    } else if (nodePtr instanceof SVGImageElement) {\n      promises.push(updateImageSrcOrHrefWithBase64Image(nodePtr, 'href'))\n    }\n  }\n  await Promise.all(promises)\n}\n\n/**\n * 重新复制canvas 用于在不裁剪原canvas的基础上通过拉伸方式达到自定义宽高目的\n * @param originCanvas HTMLCanvasElement\n * @param targetWidth number\n * @param targetHeight number\n */\nexport function copyCanvas(\n  originCanvas: HTMLCanvasElement,\n  targetWidth: number,\n  targetHeight: number,\n): HTMLCanvasElement {\n  const newCanvas = document.createElement('canvas')\n  newCanvas.width = targetWidth\n  newCanvas.height = targetHeight\n  const newCtx = newCanvas.getContext('2d')\n  if (newCtx) {\n    // 注意: 自定义宽高时，可能会拉伸图形，这时候padding也会被拉伸导致不准确\n    newCtx.drawImage(\n      originCanvas,\n      0,\n      0,\n      originCanvas.width,\n      originCanvas.height,\n      0,\n      0,\n      targetWidth,\n      targetHeight,\n    )\n  }\n  return newCanvas\n}\n", "import LogicFlow from '@logicflow/core'\nimport { updateImageSource, copyCanvas } from './utils'\n\n// 导出图片\nexport type ToImageOptions = {\n  /**\n   * 导出图片的格式，可选值为：`png`、`webp`、`gif`、`jpeg`、`svg`，默认值为 `png`\n   */\n  fileType?: string\n  /**\n   * 导出图片的宽度，通常无需设置，设置后可能会拉伸图形\n   */\n  width?: number\n  /**\n   * 导出图片的高度，通常无需设置，设置后可能会拉伸图形\n   */\n  height?: number\n  /**\n   * 导出图片的背景色，默认为透明\n   */\n  backgroundColor?: string\n  /**\n   * 导出图片的质量。\n   *\n   * 在指定图片格式为 `jpeg` 或 `webp` 的情况下，可以从 0 到 1 的区间内选择图片的质量，如果超出取值范围，将会使用默认值 0.92。导出为其他格式的图片时，该参数会被忽略。\n   */\n  quality?: number\n  /**\n   * 导出图片的内边距，即元素内容所在区域边界与图片边界的距离，单位为像素，默认为 40\n   */\n  padding?: number\n  /**\n   * 导出图片时是否开启局部渲染\n   * - `false`：将导出画布上所有的元素\n   * - `true`：只导出画面区域内的可见元素\n   */\n  partial?: boolean\n}\n\n// Blob | base64\nexport type SnapshotResponse = {\n  data: Blob | string\n  width: number\n  height: number\n}\n\n/**\n * 快照插件，生成视图\n */\nexport class Snapshot {\n  static pluginName = 'snapshot'\n  lf: LogicFlow\n  offsetX?: number\n  offsetY?: number\n  fileName?: string // 默认是 logic-flow.当前时间戳\n  customCssRules: string\n  useGlobalRules: boolean\n\n  constructor({ lf }) {\n    this.lf = lf\n    this.customCssRules = ''\n    this.useGlobalRules = true\n\n    /* 下载快照 */\n    lf.getSnapshot = async (\n      fileName?: string,\n      toImageOptions?: ToImageOptions,\n    ) => {\n      const curPartial = this.lf.graphModel.getPartial()\n      const { partial = curPartial } = toImageOptions ?? {}\n      // 画布当前渲染模式和用户导出渲染模式不一致时，需要更新画布\n      if (curPartial !== partial) {\n        this.lf.graphModel.setPartial(partial)\n        this.lf.graphModel.eventCenter.once('graph:updated', async () => {\n          await this.getSnapshot(fileName, toImageOptions)\n          // 恢复原来渲染模式\n          this.lf.graphModel.setPartial(curPartial)\n        })\n      } else {\n        await this.getSnapshot(fileName, toImageOptions)\n      }\n    }\n\n    /* 获取Blob对象，用户图片上传 */\n    lf.getSnapshotBlob = async (backgroundColor?: string, fileType?: string) =>\n      await this.getSnapshotBlob(backgroundColor, fileType)\n\n    /* 获取Base64对象，用户图片上传 */\n    lf.getSnapshotBase64 = async (\n      backgroundColor?: string,\n      fileType?: string,\n    ) => await this.getSnapshotBase64(backgroundColor, fileType)\n  }\n\n  /**\n   * 获取svgRoot对象dom: 画布元素（不包含grid背景）\n   * @param lf LogicFlow\n   * @returns\n   */\n  getSvgRootElement(lf: LogicFlow) {\n    const svgRootElement = lf.container.querySelector('.lf-canvas-overlay')!\n    return svgRootElement\n  }\n\n  /**\n   * 通过 imgUrl 下载图片\n   * @param imgUrl\n   */\n  triggerDownload(imgUrl: string) {\n    const evt = new MouseEvent('click', {\n      view: document.defaultView,\n      bubbles: false,\n      cancelable: true,\n    })\n    const a = document.createElement('a')\n    a.setAttribute('download', this.fileName!)\n    a.setAttribute('href', imgUrl)\n    a.setAttribute('target', '_blank')\n    a.dispatchEvent(evt)\n  }\n\n  /**\n   * 删除锚点\n   * @param element ChildNode\n   */\n  private removeAnchor(element: ChildNode) {\n    const { childNodes } = element\n    let childLength = element.childNodes && element.childNodes.length\n    for (let i = 0; i < childLength; i++) {\n      const child = childNodes[i] as SVGGraphicsElement\n      const classList = (child.classList && Array.from(child.classList)) || []\n      if (classList.indexOf('lf-anchor') > -1) {\n        element.removeChild(element.childNodes[i])\n        childLength--\n        i--\n      }\n    }\n  }\n\n  /**\n   * 删除旋转按钮\n   * @param element\n   */\n  private removeRotateControl(element: ChildNode) {\n    const { childNodes } = element\n    let childLength = element.childNodes && element.childNodes.length\n    for (let i = 0; i < childLength; i++) {\n      const child = childNodes[i] as SVGGraphicsElement\n      const classList = (child.classList && Array.from(child.classList)) || []\n      if (classList.indexOf('lf-rotate-control') > -1) {\n        element.removeChild(element.childNodes[i])\n        childLength--\n        i--\n      }\n    }\n  }\n\n  /**\n   * 下载图片\n   * @param fileName string\n   * @param toImageOptions\n   */\n  private async getSnapshot(\n    fileName?: string,\n    toImageOptions?: ToImageOptions,\n  ) {\n    const { fileType = 'png', quality } = toImageOptions ?? {}\n    this.fileName = `${fileName ?? `logic-flow.${Date.now()}`}.${fileType}`\n    const svg = this.getSvgRootElement(this.lf)\n    await updateImageSource(svg as SVGElement)\n    if (fileType === 'svg') {\n      const copy = this.cloneSvg(svg)\n      const svgString = new XMLSerializer().serializeToString(copy)\n      const blob = new Blob([svgString], {\n        type: 'image/svg+xml;charset=utf-8',\n      })\n      const url = URL.createObjectURL(blob)\n      this.triggerDownload(url)\n    } else {\n      this.getCanvasData(svg, toImageOptions ?? {}).then(\n        (canvas: HTMLCanvasElement) => {\n          // canvas元素 => url   image/octet-stream: 确保所有浏览器都能正常下载\n          const imgUrl = canvas\n            .toDataURL(`image/${fileType}`, quality)\n            .replace(`image/${fileType}`, 'image/octet-stream')\n          this.triggerDownload(imgUrl)\n        },\n      )\n    }\n  }\n\n  /**\n   * 获取base64对象\n   * @param backgroundColor string | undefined\n   * @param fileType string | undefined\n   * @returns Promise<SnapshotResponse>\n   */\n  private async getSnapshotBase64(\n    backgroundColor?: string,\n    fileType?: string,\n  ): Promise<SnapshotResponse> {\n    const svg = this.getSvgRootElement(this.lf)\n    await updateImageSource(svg as SVGElement)\n    return new Promise((resolve) => {\n      this.getCanvasData(svg, { backgroundColor }).then(\n        (canvas: HTMLCanvasElement) => {\n          const base64 = canvas.toDataURL(`image/${fileType ?? 'png'}`)\n          // 输出图片数据以及图片宽高\n          resolve({\n            data: base64,\n            width: canvas.width,\n            height: canvas.height,\n          })\n        },\n      )\n    })\n  }\n\n  /**\n   * 获取Blob对象\n   * @param backgroundColor string | undefined\n   * @param fileType string | undefined\n   * @returns\n   */\n  private async getSnapshotBlob(\n    backgroundColor?: string,\n    fileType?: string,\n  ): Promise<SnapshotResponse> {\n    const svg = this.getSvgRootElement(this.lf)\n    await updateImageSource(svg as SVGElement)\n    return new Promise((resolve) => {\n      this.getCanvasData(svg, { backgroundColor }).then(\n        (canvas: HTMLCanvasElement) => {\n          canvas.toBlob(\n            (blob) => {\n              // 输出图片数据以及图片宽高\n              resolve({\n                data: blob!,\n                width: canvas.width,\n                height: canvas.height,\n              })\n            },\n            `image/${fileType ?? 'png'}`,\n          )\n        },\n      )\n    })\n  }\n\n  /**\n   * 获取脚本css样式\n   * @returns rules string\n   */\n  private getClassRules(): string {\n    let rules = ''\n    if (this.useGlobalRules) {\n      const { styleSheets } = document\n      for (let i = 0; i < styleSheets.length; i++) {\n        const sheet = styleSheets[i]\n        for (let j = 0; j < sheet.cssRules.length; j++) {\n          rules += sheet.cssRules[j].cssText\n        }\n      }\n    }\n    if (this.customCssRules) {\n      rules += this.customCssRules\n    }\n    return rules\n  }\n\n  /**\n   * 获取图片生成中间产物canvas对象，用户转换为其他需要的格式\n   * @param svg Element\n   * @param toImageOptions ToImageOptions\n   * @returns Promise<HTMLCanvasElement>\n   */\n  private async getCanvasData(\n    svg: Element,\n    toImageOptions: ToImageOptions,\n  ): Promise<HTMLCanvasElement> {\n    const { width, height, backgroundColor, padding = 40 } = toImageOptions\n    const copy = this.cloneSvg(svg, false)\n\n    let dpr = window.devicePixelRatio || 1\n    if (dpr < 1) {\n      // https://github.com/didi/LogicFlow/issues/1222\n      // canvas.width = bboxWidth * dpr配合ctx.scale(dpr, dpr)是为了解决绘制模糊\n      // 比如dpr=2，先让canvas.width放大到等同于屏幕的物理像素宽高，然后自适应缩放适配canvas.style.width\n      // 由于所有元素都缩放了一半，因此需要ctx.scale(dpr, dpr)放大2倍整体绘制的内容\n      // 当用户缩放浏览器时，window.devicePixelRatio会随着变小\n      // 当window.devicePixelRatio变小到一定程度，会导致canvas.width<canvas.style.width\n      // 由于导出图片的svg的大小是canvas.style.width+canvas.style.height\n      // 因此会导致导出的svg图片无法完整绘制到canvas（因为canvas.width小于svg的宽）\n      // 从而导致canvas导出图片是缺失的svg\n      // 而dpr>=1就能保证canvas.width>=canvas.style.width\n      // 当dpr小于1的时候，我们强制转化为1，并不会产生绘制模糊等问题\n      dpr = 1\n    }\n    /*\n    为了计算真实宽高需要取图的真实dom\n    真实dom存在缩放影响其宽高数值\n    在得到真实宽高后除以缩放比例即可得到正常宽高\n    */\n\n    const base = this.lf.graphModel.rootEl.querySelector('.lf-base')\n    const bbox = (base as Element).getBoundingClientRect()\n    const layoutCanvas = this.lf.container.querySelector('.lf-canvas-overlay')!\n    const layout = layoutCanvas.getBoundingClientRect()\n    const offsetX = bbox.x - layout.x\n    const offsetY = bbox.y - layout.y\n    const { graphModel } = this.lf\n    const { transformModel } = graphModel\n    const { SCALE_X, SCALE_Y, TRANSLATE_X, TRANSLATE_Y } = transformModel\n    ;(copy.lastChild as SVGElement).style.transform = `matrix(1, 0, 0, 1, ${\n      (-offsetX + TRANSLATE_X) * (1 / SCALE_X)\n    }, ${(-offsetY + TRANSLATE_Y) * (1 / SCALE_Y)})`\n    // 包含所有元素的最小宽高\n    const bboxWidth = Math.ceil(bbox.width / SCALE_X)\n    const bboxHeight = Math.ceil(bbox.height / SCALE_Y)\n    const canvas = document.createElement('canvas')\n    canvas.style.width = `${bboxWidth}px`\n    canvas.style.height = `${bboxHeight}px`\n    // 宽高值 默认加padding 40，保证图形不会紧贴着下载图片\n    canvas.width = bboxWidth * dpr + padding * 2\n    canvas.height = bboxHeight * dpr + padding * 2\n    const ctx = canvas.getContext('2d')\n    if (ctx) {\n      // 清空canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      ctx.scale(dpr, dpr)\n      // 如果有背景色，设置流程图导出的背景色\n      if (backgroundColor) {\n        ctx.fillStyle = backgroundColor\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n      } else {\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n      }\n    }\n\n    const img = new Image()\n\n    // 设置css样式\n    const style = document.createElement('style')\n    style.innerHTML = this.getClassRules()\n    const foreignObject = document.createElement('foreignObject')\n    foreignObject.appendChild(style)\n    copy.appendChild(foreignObject)\n    return new Promise((resolve) => {\n      img.onload = () => {\n        const isFirefox = navigator.userAgent.indexOf('Firefox') > -1\n        try {\n          if (isFirefox) {\n            createImageBitmap(img, {\n              resizeWidth:\n                width && height\n                  ? copyCanvas(canvas, width, height).width\n                  : canvas.width,\n              resizeHeight:\n                width && height\n                  ? copyCanvas(canvas, width, height).height\n                  : canvas.height,\n            }).then((imageBitmap) => {\n              ctx?.drawImage(imageBitmap, padding / dpr, padding / dpr)\n              resolve(\n                width && height ? copyCanvas(canvas, width, height) : canvas,\n              )\n            })\n          } else {\n            ctx?.drawImage(img, padding / dpr, padding / dpr)\n            resolve(\n              width && height ? copyCanvas(canvas, width, height) : canvas,\n            )\n          }\n          // 如果局部渲染本来是开启的，继续开启\n          // partial && this.lf.graphModel.setPartial(true)\n        } catch (e) {\n          ctx?.drawImage(img, padding / dpr, padding / dpr)\n          resolve(width && height ? copyCanvas(canvas, width, height) : canvas)\n        }\n      }\n\n      /*\n      因为svg中存在dom存放在foreignObject元素中\n      svg dom => Base64编码字符串 挂载到img上\n      fixme: XMLSerializer的中的css background url不会下载图片\n      */\n      const svg2Img = `data:image/svg+xml;charset=utf-8,${new XMLSerializer().serializeToString(\n        copy,\n      )}`\n      const imgSrc = svg2Img\n        .replace(/\\n/g, '')\n        .replace(/\\t/g, '')\n        .replace(/#/g, '%23')\n      img.src = imgSrc\n    })\n  }\n\n  /**\n   * 克隆并处理画布节点\n   * @param svg Node\n   * @returns\n   */\n  private cloneSvg(svg: Element, addStyle: boolean = true): Node {\n    const copy = svg.cloneNode(true)\n    const graph = copy.lastChild\n    let childLength = graph?.childNodes?.length\n    if (childLength) {\n      for (let i = 0; i < childLength; i++) {\n        const lfLayer = graph?.childNodes[i] as SVGGraphicsElement\n        // 只保留包含节点和边的基础图层进行下载，其他图层删除\n        const layerClassList =\n          lfLayer.classList && Array.from(lfLayer.classList)\n        if (layerClassList && layerClassList.indexOf('lf-base') < 0) {\n          graph?.removeChild(graph.childNodes[i])\n          childLength--\n          i--\n        } else {\n          // 删除锚点\n          const lfBase = graph?.childNodes[i]\n          lfBase &&\n            lfBase.childNodes.forEach((item) => {\n              const element = item as SVGGraphicsElement\n              this.removeAnchor(element.firstChild!)\n              this.removeRotateControl(element.firstChild!)\n            })\n        }\n      }\n    }\n    // 设置css样式\n    if (addStyle) {\n      const style = document.createElement('style')\n      style.innerHTML = this.getClassRules()\n      const foreignObject = document.createElement('foreignObject')\n      foreignObject.appendChild(style)\n      copy.appendChild(foreignObject)\n    }\n    return copy\n  }\n}\n\nexport default Snapshot\n", "const TurboType = {\n  SEQUENCE_FLOW: 1,\n  START_EVENT: 2,\n  END_EVENT: 3,\n  USER_TASK: 4,\n  // SERVICE_TASK = 5, 暂不支持\n  EXCLUSIVE_GATEWAY: 6,\n}\n\nconst TurboTypeMap = {\n  1: 'bpmn:sequenceFlow',\n  2: 'bpmn:startEvent',\n  3: 'bpmn:endEvent',\n  4: 'bpmn:userTask',\n  6: 'bpmn:exclusiveGateway',\n}\n\n// 转换Turbo识别的类型\nfunction getTurboType(type) {\n  switch (type) {\n    case 'bpmn:sequenceFlow':\n      return TurboType.SEQUENCE_FLOW\n    case 'bpmn:startEvent':\n      return TurboType.START_EVENT\n    case 'bpmn:endEvent':\n      return TurboType.END_EVENT\n    case 'bpmn:userTask':\n      return TurboType.USER_TASK\n    // case 'bpmn:serviceTask':\n    //   return TurboType.SERVICE_TASK;\n    case 'bpmn:exclusiveGateway':\n      return TurboType.EXCLUSIVE_GATEWAY\n    default:\n      return type\n  }\n}\n\n// 将LogicFlow中的Node数据转换为Turbo元素数据\nfunction convertNodeToTurboElement(node) {\n  const { id, type, x, y, text = '', properties } = node\n  return {\n    incoming: [],\n    outgoing: [],\n    dockers: [],\n    type: getTurboType(type),\n    properties: {\n      ...properties,\n      name: (text && text.value) || '',\n      x,\n      y,\n      text,\n    },\n    key: id,\n  }\n}\n\n// 将LogicFlow中的Edge数据转换为Turbo元素数据\nfunction convertEdgeToTurboElement(edge) {\n  const {\n    id,\n    type,\n    sourceNodeId,\n    targetNodeId,\n    startPoint,\n    endPoint,\n    pointsList,\n    text = '',\n    properties,\n  } = edge\n  return {\n    incoming: [sourceNodeId],\n    outgoing: [targetNodeId],\n    type: getTurboType(type),\n    dockers: [],\n    properties: {\n      ...properties,\n      name: (text && text.value) || '',\n      text,\n      startPoint: JSON.stringify(startPoint),\n      endPoint: JSON.stringify(endPoint),\n      pointsList: JSON.stringify(pointsList),\n    },\n    key: id,\n  }\n}\n\n// 将LogicFlow中数据转换为Turbo数据\nexport function toTurboData(data) {\n  const nodeMap = new Map()\n  const turboData: any = {\n    // TODO: 定义类型\n    flowElementList: [],\n  }\n  data.nodes.forEach((node) => {\n    const flowElement = convertNodeToTurboElement(node)\n    turboData.flowElementList.push(flowElement)\n    nodeMap.set(node.id, flowElement)\n  })\n  data.edges.forEach((edge) => {\n    const flowElement = convertEdgeToTurboElement(edge)\n    const sourceElement = nodeMap.get(edge.sourceNodeId)\n    sourceElement.outgoing.push(flowElement.key)\n    const targetElement = nodeMap.get(edge.targetNodeId)\n    targetElement.incoming.push(flowElement.key)\n    turboData.flowElementList.push(flowElement)\n  })\n  return turboData\n}\n\n// 将Turbo元素数据转换为LogicFlow中的Edge数据\nfunction convertFlowElementToEdge(element) {\n  const { incoming, outgoing, properties, key, type } = element\n  const { text, name, startPoint, endPoint, pointsList } = properties\n  const edge: Record<string, any> = {\n    id: key,\n    type: TurboTypeMap[type],\n    sourceNodeId: incoming[0],\n    targetNodeId: outgoing[0],\n    text: text || name,\n    properties: {},\n  }\n  if (startPoint) {\n    edge.startPoint = JSON.parse(startPoint)\n  }\n  if (endPoint) {\n    edge.endPoint = JSON.parse(endPoint)\n  }\n  if (pointsList) {\n    edge.pointsList = JSON.parse(pointsList)\n  }\n  // 这种转换方式，在自定义属性中不能与excludeProperties中的属性重名，否则将在转换过程中丢失\n  const excludeProperties = ['startPoint', 'endPoint', 'pointsList', 'text']\n  Object.keys(element.properties).forEach((property) => {\n    if (excludeProperties.indexOf(property) === -1) {\n      edge.properties[property] = element.properties[property]\n    }\n  })\n  return edge\n}\n\n// 将Turbo元素数据转换为LogicFlow中的Node数据\nfunction convertFlowElementToNode(element) {\n  const { properties, key, type, bounds } = element\n  let { x, y } = properties\n  const { text } = properties\n  if (x === undefined) {\n    const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = bounds\n    x = (x1 + x2) / 2\n    y = (y1 + y2) / 2\n  }\n  const node = {\n    id: key,\n    type: TurboTypeMap[type],\n    x,\n    y,\n    text,\n    properties: {},\n  }\n  // 这种转换方式，在自定义属性中不能与excludeProperties中的属性重名，否则将在转换过程中丢失\n  const excludeProperties = ['x', 'y', 'text']\n  Object.keys(element.properties).forEach((property) => {\n    if (excludeProperties.indexOf(property) === -1) {\n      node.properties[property] = element.properties[property]\n    }\n  })\n  return node\n}\n\n// 将Turbo元素数据转换为LogicFlow数据\nexport function toLogicflowData(data) {\n  const lfData: any = {\n    // TODO: 定义类型\n    nodes: [],\n    edges: [],\n  }\n  const list = data.flowElementList\n  list &&\n    list.length > 0 &&\n    list.forEach((element) => {\n      if (element.type === TurboType.SEQUENCE_FLOW) {\n        const edge = convertFlowElementToEdge(element)\n        lfData.edges.push(edge)\n      } else {\n        const node = convertFlowElementToNode(element)\n        lfData.nodes.push(node)\n      }\n    })\n  return lfData\n}\n\nclass TurboAdapter {\n  static pluginName = 'turboAdapter'\n\n  constructor({ lf }) {\n    lf.adapterIn = this.adapterIn\n    lf.adapterOut = this.adapterOut\n  }\n\n  adapterOut(logicflowData) {\n    if (logicflowData) {\n      return toTurboData(logicflowData)\n    }\n  }\n\n  adapterIn(turboData) {\n    if (turboData) {\n      return toLogicflowData(turboData)\n    }\n  }\n}\n\nexport default TurboAdapter\n", "import LogicFlow, { PolylineEdgeModel, BaseNodeModel } from '@logicflow/core'\n\nimport Point = LogicFlow.Point\n\n// 这个里面的函数有些在core中已经存在，为了解耦关系，没有引用\n\nenum SegmentDirection {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n\n/**\n * 判断一个点是否在线段中\n * @param point 判断的点\n * @param start 线段的起点\n * @param end 线段的终点\n * @param deviation 误差范围\n * @returns boolean\n */\nexport const isInSegment = (point, start, end, deviation = 0) => {\n  const distance = distToSegment(point, start, end)\n  return distance <= deviation\n}\n\nfunction sqr(x) {\n  return x * x\n}\n\nfunction dist2(v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y)\n}\n\nexport const distToSegmentSquared = (p, v, w) => {\n  const l2 = dist2(v, w)\n  if (l2 === 0) return dist2(p, v)\n  let t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2\n  t = Math.max(0, Math.min(1, t))\n  return dist2(p, {\n    x: v.x + t * (w.x - v.x),\n    y: v.y + t * (w.y - v.y),\n  })\n}\n\nexport const distToSegment = (point: Point, start: Point, end: Point) =>\n  Math.sqrt(distToSegmentSquared(point, start, end))\n\n/* 获取节点bbox */\nconst getNodeBBox = (node: BaseNodeModel) => {\n  const { x, y, width, height } = node\n  const bBox = {\n    minX: x - width / 2,\n    minY: y - height / 2,\n    maxX: x + width / 2,\n    maxY: y + height / 2,\n    x,\n    y,\n    width,\n    height,\n    centerX: x,\n    centerY: y,\n  }\n  return bBox\n}\n\n/* 判断线段的方向 */\nconst segmentDirection = (start: Point, end: Point) => {\n  let direction\n  if (start.x === end.x) {\n    direction = SegmentDirection.VERTICAL\n  } else if (start.y === end.y) {\n    direction = SegmentDirection.HORIZONTAL\n  }\n  return direction\n}\n\n// 节点是够在线段内，求出节点与线段的交点\nexport const crossPointInSegment = (\n  node: BaseNodeModel,\n  start: Point,\n  end: Point,\n) => {\n  const bBox = getNodeBBox(node)\n  const direction = segmentDirection(start, end)\n  const maxX = Math.max(start.x, end.x)\n  const minX = Math.min(start.x, end.x)\n  const maxY = Math.max(start.y, end.y)\n  const minY = Math.min(start.y, end.y)\n  const { x, y, width, height } = node\n  if (direction === SegmentDirection.HORIZONTAL) {\n    // 同一水平线\n    if (maxX >= bBox.maxX && minX <= bBox.minX) {\n      return {\n        startCrossPoint: {\n          x: start.x > end.x ? x + width / 2 : x - width / 2,\n          y: start.y,\n        },\n        endCrossPoint: {\n          x: start.x > end.x ? x - width / 2 : x + width / 2,\n          y: start.y,\n        },\n      }\n    }\n  } else if (direction === SegmentDirection.VERTICAL) {\n    // 同一垂直线\n    if (maxY >= bBox.maxY && minY <= bBox.minY) {\n      return {\n        startCrossPoint: {\n          x: start.x,\n          y: start.y > end.y ? y + height / 2 : y - height / 2,\n        },\n        endCrossPoint: {\n          x: start.x,\n          y: start.y > end.y ? y - height / 2 : y + height / 2,\n        },\n      }\n    }\n  }\n}\n\ninterface SegmentCross {\n  crossIndex: number\n  crossPoints: {\n    startCrossPoint: Point\n    endCrossPoint: Point\n  }\n}\n\n// 节点是否在线段内\n// eslint-disable-next-line max-len\nexport const isNodeInSegment = (\n  node: BaseNodeModel,\n  polyline: PolylineEdgeModel,\n  deviation = 0,\n): SegmentCross => {\n  const { x, y } = node\n  const { pointsList } = polyline\n  for (let i = 0; i < pointsList.length - 1; i++) {\n    if (\n      isInSegment(\n        {\n          x,\n          y,\n        },\n        pointsList[i],\n        pointsList[i + 1],\n        deviation,\n      )\n    ) {\n      const bBoxCross = crossPointInSegment(\n        node,\n        pointsList[i],\n        pointsList[i + 1],\n      )\n      if (bBoxCross) {\n        return {\n          crossIndex: i + 1,\n          crossPoints: bBoxCross,\n        }\n      }\n    }\n  }\n  return {\n    crossIndex: -1,\n    crossPoints: {\n      startCrossPoint: {\n        x: 0,\n        y: 0,\n      },\n      endCrossPoint: {\n        x: 0,\n        y: 0,\n      },\n    },\n  }\n}\n", "import LogicFlow, {\n  BaseNodeModel,\n  PolylineEdgeModel,\n  EventType,\n  formatAnchorConnectValidateData,\n} from '@logicflow/core'\nimport { cloneDeep } from 'lodash-es'\nimport { isNodeInSegment } from './edge'\n\nimport NodeData = LogicFlow.NodeData\n\nexport class InsertNodeInPolyline {\n  static pluginName = 'insertNodeInPolyline'\n  _lf: LogicFlow\n  dndAdd: boolean // dnd 添加节点到折线上的开关\n  dropAdd: boolean // 移动节点到折线上的开关\n  deviation: number // 节点中心距离直接距离小于该值时，认为节点在折线上\n  constructor({ lf }) {\n    this._lf = lf\n    // fix https://github.com/didi/LogicFlow/issues/754\n    this.deviation = 20\n    this.dndAdd = true\n    this.dropAdd = true\n    this.eventHandler()\n  }\n\n  eventHandler() {\n    // 监听事件\n    if (this.dndAdd) {\n      this._lf.on('node:dnd-add', ({ data }: { data: NodeData }) => {\n        this.insetNode(data)\n      })\n    }\n    if (this.dropAdd) {\n      this._lf.on('node:drop', ({ data }: { data: NodeData }) => {\n        const { edges } = this._lf.graphModel\n        const { id } = data\n        // 只有游离节点才能插入到连线上\n        let pureNode = true\n        for (let i = 0; i < edges.length; i++) {\n          if (edges[i].sourceNodeId === id || edges[i].targetNodeId === id) {\n            pureNode = false\n            break\n          }\n        }\n        if (pureNode) {\n          this.insetNode(data)\n        }\n      })\n    }\n  }\n\n  /**\n   * 插入节点前校验规则\n   * @param sourceNodeId\n   * @param targetNodeId\n   * @param sourceAnchorId\n   * @param targetAnchorId\n   * @param nodeData\n   */\n  // fix: https://github.com/didi/LogicFlow/issues/1078\n  checkRuleBeforeInsetNode(\n    sourceNodeId: string,\n    targetNodeId: string,\n    sourceAnchorId: string,\n    targetAnchorId: string,\n    nodeData: NodeData,\n  ) {\n    const sourceNodeModel = this._lf.getNodeModelById(sourceNodeId)!\n    const targetNodeModel = this._lf.getNodeModelById(targetNodeId)!\n\n    const sourceAnchorInfo = sourceNodeModel.getAnchorInfo(sourceAnchorId)!\n    const targetAnchorInfo = targetNodeModel.getAnchorInfo(targetAnchorId)!\n\n    // TODO: nodeData 与 isAllowConnectedAsSource 方法需要的类型 BaseNodeModel 不一致，少了 target 属性等，需要验证是否可用。\n    const sourceRuleResultData = sourceNodeModel.isAllowConnectedAsSource(\n      nodeData as BaseNodeModel,\n      sourceAnchorInfo,\n      targetAnchorInfo,\n    )\n    const targetRuleResultData = targetNodeModel.isAllowConnectedAsTarget(\n      nodeData as BaseNodeModel,\n      sourceAnchorInfo,\n      targetAnchorInfo,\n    )\n\n    const { isAllPass: isSourcePass, msg: sourceMsg } =\n      formatAnchorConnectValidateData(sourceRuleResultData)\n    const { isAllPass: isTargetPass, msg: targetMsg } =\n      formatAnchorConnectValidateData(targetRuleResultData)\n\n    return {\n      isPass: isSourcePass && isTargetPass,\n      sourceMsg,\n      targetMsg,\n    }\n  }\n\n  insetNode(nodeData: NodeData): void {\n    const { edges } = this._lf.graphModel\n    const nodeModel = this._lf.getNodeModelById(nodeData.id)\n\n    // fix: https://github.com/didi/LogicFlow/issues/1077\n    // 参照https://github.com/didi/LogicFlow/issues/454=>当getDefaultAnchor(){return []}表示：不显示锚点，也不允许其他节点连接到此节点\n    // 当getDefaultAnchor=[]，直接阻止下面进行edges的截断插入node相关逻辑\n    const anchorArray = nodeModel?.getDefaultAnchor()\n    const isNotAllowConnect = !anchorArray || anchorArray.length === 0\n    if (isNotAllowConnect) {\n      this._lf.graphModel.eventCenter.emit(EventType.CONNECTION_NOT_ALLOWED, {\n        data: nodeData,\n        msg: '自定义类型节点不显示锚点，也不允许其他节点连接到此节点',\n      })\n      return\n    }\n\n    if (!nodeModel) return\n    for (let i = 0; i < edges.length; i++) {\n      const { crossIndex, crossPoints } = isNodeInSegment(\n        nodeModel,\n        edges[i] as PolylineEdgeModel,\n        this.deviation,\n      )\n      if (crossIndex >= 0) {\n        const {\n          sourceNodeId,\n          targetNodeId,\n          id,\n          type,\n          pointsList,\n          sourceAnchorId,\n          targetAnchorId,\n        } = edges[i]\n        // fix https://github.com/didi/LogicFlow/issues/996\n        const startPoint = cloneDeep(pointsList[0])\n        const endPoint = cloneDeep(crossPoints.startCrossPoint)\n        this._lf.deleteEdge(id)\n        const checkResult = this.checkRuleBeforeInsetNode(\n          sourceNodeId,\n          targetNodeId,\n          sourceAnchorId!,\n          targetAnchorId!,\n          nodeData,\n        )\n        this._lf.addEdge({\n          type,\n          sourceNodeId,\n          targetNodeId: nodeData.id,\n          startPoint,\n          endPoint,\n          pointsList: [\n            ...pointsList.slice(0, crossIndex),\n            crossPoints.startCrossPoint,\n          ],\n        })\n        this._lf.addEdge({\n          type,\n          sourceNodeId: nodeData.id,\n          targetNodeId,\n          startPoint: cloneDeep(crossPoints.endCrossPoint),\n          endPoint: cloneDeep(pointsList[pointsList.length - 1]),\n          pointsList: [\n            crossPoints.endCrossPoint,\n            ...pointsList.slice(crossIndex),\n          ],\n        })\n        if (!checkResult.isPass) {\n          this._lf.graphModel.eventCenter.emit(\n            EventType.CONNECTION_NOT_ALLOWED,\n            {\n              data: nodeData,\n              msg: checkResult.targetMsg || checkResult.sourceMsg,\n            },\n          )\n          // FIXME:在关闭了历史记录的情况下，撤销操作会不生效。\n          setTimeout(() => {\n            this._lf.undo()\n          }, 200)\n          break\n        } else {\n          break\n        }\n      }\n    }\n  }\n}\n\nexport default InsertNodeInPolyline\n", "import LogicFlow from '@logicflow/core'\n\ntype ControlItem = {\n  key: string\n  iconClass: string\n  title: string\n  text: string\n  onClick?: (lf: LogicFlow, e: MouseEvent) => void\n  onMouseEnter?: (lf: LogicFlow, e: MouseEvent) => void\n  onMouseLeave?: (lf: LogicFlow, e: MouseEvent) => void\n}\n\nexport class Control {\n  static pluginName = 'control'\n\n  private readonly lf: LogicFlow\n  private controlItems: ControlItem[] = [\n    {\n      key: 'zoom-out',\n      iconClass: 'lf-control-zoomOut',\n      title: '缩小流程图',\n      text: '缩小',\n      onClick: () => {\n        this.lf.zoom(false)\n      },\n    },\n    {\n      key: 'zoom-in',\n      iconClass: 'lf-control-zoomIn',\n      title: '放大流程图',\n      text: '放大',\n      onClick: () => {\n        this.lf.zoom(true)\n      },\n    },\n    {\n      key: 'reset',\n      iconClass: 'lf-control-fit',\n      title: '恢复流程原有尺寸',\n      text: '适应',\n      onClick: () => {\n        this.lf.resetZoom()\n      },\n    },\n    {\n      key: 'undo',\n      iconClass: 'lf-control-undo',\n      title: '回到上一步',\n      text: '上一步',\n      onClick: () => {\n        this.lf.undo()\n      },\n    },\n    {\n      key: 'redo',\n      iconClass: 'lf-control-redo',\n      title: '移到下一步',\n      text: '下一步',\n      onClick: () => {\n        this.lf.redo()\n      },\n    },\n  ]\n  private domContainer?: HTMLElement\n  private toolEl?: HTMLElement\n\n  constructor({ lf }: LogicFlow.IExtensionProps) {\n    this.lf = lf\n  }\n\n  render(_: LogicFlow, domContainer: HTMLElement) {\n    this.destroy()\n    const toolEl = this.getControlTool()\n    this.toolEl = toolEl\n    domContainer.appendChild(toolEl)\n    this.domContainer = domContainer\n  }\n\n  destroy() {\n    if (\n      this.domContainer &&\n      this.toolEl &&\n      this.domContainer.contains(this.toolEl)\n    ) {\n      this.domContainer.removeChild(this.toolEl)\n    }\n  }\n\n  addItem(item: ControlItem) {\n    this.controlItems.push(item)\n  }\n\n  removeItem(key: string) {\n    const index = this.controlItems.findIndex((item) => item.key === key)\n    return index == -1 ? null : this.controlItems.splice(index, 1)[0]\n  }\n\n  private getControlTool(): HTMLElement {\n    const NORMAL = 'lf-control-item'\n    const DISABLED = 'lf-control-item disabled'\n    const controlTool = document.createElement('div')\n    const controlElements: HTMLDivElement[] = []\n    controlTool.className = 'lf-control'\n    this.controlItems.forEach((item) => {\n      const itemContainer = document.createElement('div')\n      const icon = document.createElement('i')\n      const text = document.createElement('span')\n      itemContainer.className = DISABLED\n      item.onClick && (itemContainer.onclick = item.onClick.bind(null, this.lf))\n      item.onMouseEnter &&\n        (itemContainer.onmouseenter = item.onMouseEnter.bind(null, this.lf))\n      item.onMouseLeave &&\n        (itemContainer.onmouseleave = item.onMouseLeave.bind(null, this.lf))\n      icon.className = item.iconClass\n      text.className = 'lf-control-text'\n      text.title = item.title\n      text.innerText = item.text\n      itemContainer.append(icon, text)\n      switch (item.text) {\n        case '上一步':\n          this.lf.on('history:change', ({ data: { undoAble } }: any) => {\n            itemContainer.className = undoAble ? NORMAL : DISABLED\n          })\n          break\n        case '下一步':\n          this.lf.on('history:change', ({ data: { redoAble } }: any) => {\n            itemContainer.className = redoAble ? NORMAL : DISABLED\n          })\n          break\n        default:\n          itemContainer.className = NORMAL\n          break\n      }\n      controlElements.push(itemContainer)\n    })\n    controlTool.append(...controlElements)\n    return controlTool\n  }\n}\n\nexport default Control\n", "import LogicFlow from '@logicflow/core'\n\nimport GraphData = LogicFlow.GraphData\nimport NodeData = LogicFlow.NodeData\nimport EdgeData = LogicFlow.EdgeData\n\ntype SetType = 'add' | 'reset'\n\nexport type MenuItem = {\n  text?: string\n  className?: string\n  icon?: boolean\n  callback: (element: any) => void\n}\n\nexport type MenuConfig = {\n  nodeMenu?: MenuItem[] | false\n  edgeMenu?: MenuItem[] | false\n  graphMenu?: MenuItem[] | false\n}\n\nconst DefaultNodeMenuKey = 'lf:defaultNodeMenu'\nconst DefaultEdgeMenuKey = 'lf:defaultEdgeMenu'\nconst DefaultGraphMenuKey = 'lf:defaultGraphMenu'\nconst DefaultSelectionMenuKey = 'lf:defaultSelectionMenu'\n\nclass Menu {\n  lf: LogicFlow\n  private __container?: HTMLElement\n  private __menuDOM?: HTMLElement\n  private menuTypeMap?: Map<string, MenuItem[]>\n  private __currentData: EdgeData | NodeData | GraphData | null = null\n  static pluginName = 'menu'\n\n  constructor({ lf }) {\n    this.lf = lf\n    const {\n      options: { isSilentMode },\n    } = lf\n    if (!isSilentMode) {\n      this.__menuDOM = document.createElement('ul')\n\n      this.menuTypeMap = new Map()\n      this.init()\n      this.lf.setMenuConfig = (config) => {\n        this.setMenuConfig(config)\n      }\n      this.lf.addMenuConfig = (config) => {\n        this.addMenuConfig(config)\n      }\n      this.lf.setMenuByType = (config) => {\n        this.setMenuByType(config)\n      }\n    }\n  }\n\n  /**\n   * 初始化设置默认内置菜单栏\n   */\n  private init() {\n    const defaultNodeMenu = [\n      {\n        text: '删除',\n        callback: (node) => {\n          this.lf.deleteNode(node.id)\n        },\n      },\n      {\n        text: '编辑文本',\n        callback: (node) => {\n          this.lf.graphModel.editText(node.id)\n        },\n      },\n      {\n        text: '复制',\n        callback: (node) => {\n          this.lf.cloneNode(node.id)\n        },\n      },\n    ]\n    this.menuTypeMap?.set(DefaultNodeMenuKey, defaultNodeMenu)\n\n    const defaultEdgeMenu = [\n      {\n        text: '删除',\n        callback: (edge) => {\n          this.lf.deleteEdge(edge.id)\n        },\n      },\n      {\n        text: '编辑文本',\n        callback: (edge) => {\n          this.lf.graphModel.editText(edge.id)\n        },\n      },\n    ]\n    this.menuTypeMap?.set(DefaultEdgeMenuKey, defaultEdgeMenu)\n\n    this.menuTypeMap?.set(DefaultGraphMenuKey, [])\n\n    const DefaultSelectionMenu = [\n      {\n        text: '删除',\n        callback: (elements) => {\n          this.lf.clearSelectElements()\n          elements.edges.forEach((edge) => this.lf.deleteEdge(edge.id))\n          elements.nodes.forEach((node) => this.lf.deleteNode(node.id))\n        },\n      },\n    ]\n    this.menuTypeMap?.set(DefaultSelectionMenuKey, DefaultSelectionMenu)\n  }\n\n  render(lf: LogicFlow, container: HTMLElement) {\n    if (lf.options.isSilentMode) return\n    this.__container = container\n    this.__currentData = null // 当前展示的菜单所属元素的model数据\n    if (this.__menuDOM) {\n      this.__menuDOM.className = 'lf-menu'\n      container.appendChild(this.__menuDOM)\n      // 将选项的click事件委托至menu容器\n      // 在捕获阶段拦截并执行\n      this.__menuDOM.addEventListener(\n        'click',\n        (event) => {\n          event.stopPropagation()\n          let target = event.target as HTMLElement\n          // 菜单有多层dom，需要精确获取菜单项所对应的dom\n          // 除菜单项dom外，应考虑两种情况\n          // 1. 菜单项的子元素 2. 菜单外层容器\n          while (\n            Array.from(target.classList).indexOf('lf-menu-item') === -1 &&\n            Array.from(target.classList).indexOf('lf-menu') === -1\n          ) {\n            target = target?.parentElement as HTMLElement\n          }\n          if (Array.from(target.classList).indexOf('lf-menu-item') > -1) {\n            // 如果点击区域在菜单项内\n            ;(target as any).onclickCallback(this.__currentData)\n            // 点击后隐藏menu\n            if (this.__menuDOM) {\n              this.__menuDOM.style.display = 'none'\n            }\n            this.__currentData = null\n          } else {\n            // 如果点击区域不在菜单项内\n            console.warn('点击区域不在菜单项内，请检查代码！')\n          }\n        },\n        true,\n      )\n    }\n    // 通过事件控制菜单的显示和隐藏\n    this.lf.on('node:contextmenu', ({ data, position, e }) => {\n      const {\n        domOverlayPosition: { x, y },\n      } = position\n      const { id } = data\n      const model = this.lf.graphModel.getNodeModelById(id)\n\n      if (!model) return\n      let menuList: any = []\n      const typeMenus = this.menuTypeMap?.get(model.type)\n      // 1.如果单个节点自定义了菜单，以单个节点自定义为准\n      if (model && model.menu && Array.isArray(model.menu)) {\n        menuList = model.menu\n      } else if (typeMenus) {\n        // 2.如果当前节点类型定义了菜单，再取该配置\n        menuList = typeMenus\n      } else {\n        // 3.最后取全局默认\n        menuList = this.menuTypeMap?.get(DefaultNodeMenuKey)\n      }\n      this.__currentData = data\n      this.showMenu(x, y, menuList, {\n        width: model.width,\n        height: model.height,\n        clientX: e.clientX,\n        clientY: e.clientY,\n      })\n    })\n    this.lf.on('edge:contextmenu', ({ data, position, e }) => {\n      const {\n        domOverlayPosition: { x, y },\n      } = position\n      const { id } = data\n      const model = this.lf.graphModel.getEdgeModelById(id)\n      if (!model) return\n      let menuList: any = []\n      const typeMenus = this.menuTypeMap?.get(model.type)\n      // 菜单优先级： model.menu > typeMenus > defaultEdgeMenu，注释同上节点\n      if (model && model.menu && Array.isArray(model.menu)) {\n        menuList = model.menu\n      } else if (typeMenus) {\n        menuList = typeMenus\n      } else {\n        menuList = this.menuTypeMap?.get(DefaultEdgeMenuKey) ?? []\n      }\n      this.__currentData = data\n      this.showMenu(x, y, menuList, {\n        width: model.width,\n        height: model.height,\n        clientX: e.clientX,\n        clientY: e.clientY,\n      })\n    })\n    this.lf.on('blank:contextmenu', ({ position }) => {\n      const menuList = this.menuTypeMap?.get(DefaultGraphMenuKey) ?? []\n      const {\n        domOverlayPosition: { x, y },\n      } = position\n      this.showMenu(x, y, menuList)\n    })\n    this.lf.on('selection:contextmenu', ({ data, position }) => {\n      const menuList = this.menuTypeMap?.get(DefaultSelectionMenuKey)\n      const {\n        domOverlayPosition: { x, y },\n      } = position\n      this.__currentData = data\n      this.showMenu(x, y, menuList)\n    })\n\n    this.lf.on('node:mousedown', () => {\n      this.__menuDOM!.style.display = 'none'\n    })\n    this.lf.on('edge:click', () => {\n      this.__menuDOM!.style.display = 'none'\n    })\n    this.lf.on('blank:click', () => {\n      this.__menuDOM!.style.display = 'none'\n    })\n  }\n\n  destroy() {\n    if (this.__menuDOM) {\n      this?.__container?.removeChild(this.__menuDOM)\n      this.__menuDOM = undefined\n    }\n  }\n\n  private showMenu(x, y, menuList, options?) {\n    if (!menuList || !menuList.length) return\n    const { __menuDOM: menu } = this\n    if (menu) {\n      // 菜单容器不变，需要先清空内部的菜单项\n      menu.innerHTML = ''\n      menu.append(...this.__getMenuDom(menuList))\n      // 菜单中没有项，不显示\n      if (!menu.children.length) return\n      menu.style.display = 'block'\n      if (!options) {\n        menu.style.top = `${y}px`\n        menu.style.left = `${x}px`\n        return\n      }\n\n      // https://github.com/didi/LogicFlow/issues/1019\n      // 根据边界判断菜单的left 和 top\n      const { width, height, clientX, clientY } = options\n      const { graphModel } = this.lf\n\n      const menuWidth = menu.offsetWidth\n      let menuIsRightShow = true\n      // ======先进行可视屏幕范围的判断=======\n      // 浏览器窗口可视区域兼容性写法\n      // eslint-disable-next-line max-len\n      const windowMaxX =\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      let rightDistance = windowMaxX - clientX\n      // ======先进行可视屏幕范围的判断=======\n      // ========再进行画布范围的判断========\n      const graphRect = graphModel.rootEl.getBoundingClientRect()\n      const graphMaxX = graphRect.left + graphRect.width\n      if (graphMaxX < windowMaxX) {\n        // 画布右边小于可视屏幕范围的最右边，取画布右边作为极限值，计算出当前触摸点距离右边极限值的距离\n        rightDistance = graphMaxX - clientX\n      }\n      // ========再进行画布范围的判断========\n      // 根据当前触摸点距离右边的距离 跟 menuWidth进行比较\n      if (rightDistance < menuWidth) {\n        // 空间不足够，显示在左边\n        menuIsRightShow = false\n      }\n      if (menuIsRightShow) {\n        menu.style.left = `${x}px`\n      } else {\n        menu.style.left = `${x - width}px`\n      }\n\n      const menuHeight = menu.offsetHeight\n      let menuIsBottomShow = true\n      // ======先进行可视屏幕范围的判断=======\n      // 浏览器窗口可视区域兼容性写法\n      // eslint-disable-next-line max-len\n      const windowMaxY =\n        window.innerHeight ||\n        document.documentElement.clientHeight ||\n        document.body.clientHeight\n      let bottomDistance = windowMaxY - clientY\n      // ======先进行可视屏幕范围的判断=======\n      // ========再进行画布范围的判断========\n      const graphMaxY = graphRect.top + graphRect.height\n      if (graphMaxY < windowMaxY) {\n        // 画布底部小于可视屏幕范围的最底边，取画布底部作为极限值，计算出当前触摸点距离底部极限值的距离\n        bottomDistance = graphMaxY - clientY\n      }\n      // ========再进行画布范围的判断========\n      if (bottomDistance < menuHeight) {\n        // 如果下边距离太小，无法显示menu，则向上显示\n        menuIsBottomShow = false\n      }\n      if (menuIsBottomShow) {\n        menu.style.top = `${y}px`\n      } else {\n        menu.style.top = `${y - height}px`\n      }\n    }\n  }\n\n  /**\n   * 设置指定类型元素的菜单\n   */\n  private setMenuByType(config) {\n    if (!config.type || !config.menu) {\n      return\n    }\n    this.menuTypeMap?.set(config.type, config.menu)\n  }\n\n  /**\n   * 获取 Menu DOM\n   * @param list 菜单项\n   * @return 菜单项 DOM\n   */\n  private __getMenuDom(list): HTMLElement[] {\n    const menuList: any = []\n    list &&\n      list.length > 0 &&\n      list.forEach((item) => {\n        const element = document.createElement('li')\n        if (item.className) {\n          element.className = `lf-menu-item ${item.className}`\n        } else {\n          element.className = 'lf-menu-item'\n        }\n        if (item.icon === true) {\n          const icon = document.createElement('span')\n          icon.className = 'lf-menu-item-icon'\n          element.appendChild(icon)\n        }\n        const text = document.createElement('span')\n        text.className = 'lf-menu-item-text'\n        if (item.text) {\n          text.innerText = item.text\n        }\n        element.appendChild(text)\n        ;(element as any).onclickCallback = item.callback\n        menuList.push(element)\n      })\n    return menuList\n  }\n\n  // 复写菜单\n  setMenuConfig(config: MenuConfig) {\n    if (!config) {\n      return\n    }\n    // node\n    config.nodeMenu !== undefined &&\n      this.menuTypeMap?.set(\n        DefaultNodeMenuKey,\n        config.nodeMenu ? config.nodeMenu : [],\n      )\n    // edge\n    config.edgeMenu !== undefined &&\n      this.menuTypeMap?.set(\n        DefaultEdgeMenuKey,\n        config.edgeMenu ? config.edgeMenu : [],\n      )\n    // graph\n    config.graphMenu !== undefined &&\n      this.menuTypeMap?.set(\n        DefaultGraphMenuKey,\n        config.graphMenu ? config.graphMenu : [],\n      )\n  }\n\n  // 在默认菜单后面追加菜单项\n  addMenuConfig(config: MenuConfig) {\n    if (!config) {\n      return\n    }\n    // 追加项时，只支持数组类型，对false不做操作\n    if (Array.isArray(config.nodeMenu)) {\n      const menuList = this.menuTypeMap?.get(DefaultNodeMenuKey) ?? []\n      this.menuTypeMap?.set(\n        DefaultNodeMenuKey,\n        menuList.concat(config.nodeMenu),\n      )\n    }\n    if (Array.isArray(config.edgeMenu)) {\n      const menuList = this.menuTypeMap?.get(DefaultEdgeMenuKey) ?? []\n      this.menuTypeMap?.set(\n        DefaultEdgeMenuKey,\n        menuList.concat(config.edgeMenu),\n      )\n    }\n    if (Array.isArray(config.graphMenu)) {\n      const menuList = this.menuTypeMap?.get(DefaultGraphMenuKey) ?? []\n      this.menuTypeMap?.set(\n        DefaultGraphMenuKey,\n        menuList.concat(config.graphMenu),\n      )\n    }\n  }\n\n  /**\n   * @deprecated\n   * 复写添加\n   */\n  changeMenuItem(type: SetType, config: MenuConfig) {\n    if (type === 'add') {\n      this.addMenuConfig(config)\n    } else if (type === 'reset') {\n      this.setMenuConfig(config)\n    } else {\n      throw new Error(\n        \"The first parameter of changeMenuConfig should be 'add' or 'reset'\",\n      )\n    }\n  }\n}\n\nexport default Menu\n\nexport { Menu }\n", "import LogicFlow from '@logicflow/core'\n\ntype MenuItem = {\n  icon: string\n  callback?: (data) => void\n  type?: string\n  className?: string\n  properties: Record<string, any>\n}\n\nexport type ContextMenuNodeData = {\n  sourceId: string\n  x: number\n  y: number\n  properties: Record<string, unknown>\n  type?: string\n}\n\nconst COMMON_TYPE_KEY = 'menu-common'\nconst NEXT_X_DISTANCE = 200\nconst NEXT_Y_DISTANCE = 100\n\nexport class ContextMenu {\n  static pluginName = 'contextMenu'\n  private __menuDOM: HTMLElement\n  private lf: LogicFlow\n  private _activeData: any\n  private menuTypeMap: Map<string, MenuItem[]> = new Map()\n  container: any\n  isShow?: boolean\n\n  constructor({ lf }) {\n    this.lf = lf\n    this.__menuDOM = document.createElement('div')\n    this.__menuDOM.className = 'lf-inner-context'\n    this.menuTypeMap.set(COMMON_TYPE_KEY, [])\n    this.lf.setContextMenuByType = (type, menus) => {\n      this.setContextMenuByType(type, menus)\n    }\n    this.lf.setContextMenuItems = (menus) => {\n      this.setContextMenuItems(menus)\n    }\n    this.lf.showContextMenu = (data) => {\n      this.showContextMenu(data)\n    }\n    this.lf.hideContextMenu = () => {\n      this.hideContextMenu()\n    }\n  }\n\n  render(lf, container) {\n    this.container = container\n    lf.on('node:click', ({ data }) => {\n      this._activeData = data\n      this.createContextMenu()\n    })\n    lf.on('edge:click', ({ data }) => {\n      // 获取右上角坐标\n      this._activeData = data\n      this.createContextMenu()\n    })\n    lf.on('blank:click', () => {\n      this.hideContextMenu()\n    })\n  }\n\n  setContextMenuByType(type, menus) {\n    this.menuTypeMap.set(type, menus)\n  }\n\n  /**\n   * 隐藏菜单\n   */\n  hideContextMenu() {\n    this.__menuDOM.innerHTML = ''\n    this.__menuDOM.style.display = 'none'\n    if (this.isShow) {\n      this.container.removeChild(this.__menuDOM)\n    }\n    this.lf.off(\n      'node:delete,edge:delete,node:drag,graph:transform',\n      this.listenDelete,\n    )\n    this.isShow = false\n  }\n\n  /**\n   * 显示指定元素菜单\n   * @param data 节点id、节点类型、菜单位置\n   */\n  showContextMenu(data) {\n    if (!data || !data.id) {\n      console.warn('请检查传入的参数')\n      return\n    }\n    this._activeData = data\n    this.createContextMenu()\n  }\n\n  setContextMenuItems(menus) {\n    this.menuTypeMap.set(COMMON_TYPE_KEY, menus)\n  }\n\n  /**\n   * 获取新菜单位置\n   */\n  private getContextMenuPosition() {\n    const data = this._activeData\n    const Model = this.lf.graphModel.getElement(data.id)\n    if (Model) {\n      let x\n      let y\n      if (Model.BaseType === 'edge') {\n        x = Number.MIN_SAFE_INTEGER\n        y = Number.MAX_SAFE_INTEGER\n        const edgeData = Model.getData()\n        x = Math.max(edgeData.startPoint.x, x)\n        y = Math.min(edgeData.startPoint.y, y)\n        x = Math.max(edgeData.endPoint.x, x)\n        y = Math.min(edgeData.endPoint.y, y)\n        if (edgeData.pointsList) {\n          edgeData.pointsList.forEach((point) => {\n            x = Math.max(point.x, x)\n            y = Math.min(point.y, y)\n          })\n        }\n      }\n      if (Model.BaseType === 'node') {\n        x = data.x + Model.width / 2\n        y = data.y - Model.height / 2\n      }\n      return this.lf.graphModel.transformModel.CanvasPointToHtmlPoint([x, y])\n    }\n  }\n\n  private createContextMenu() {\n    const { isSilentMode } = this.lf.options\n    // 静默模式不显示菜单\n    if (isSilentMode) {\n      return\n    }\n    const items = [\n      ...(this.menuTypeMap.get(this._activeData.type) || []),\n      ...(this.menuTypeMap.get(COMMON_TYPE_KEY) || []),\n    ]\n\n    const menus = document.createDocumentFragment()\n    items.forEach((item) => {\n      const menuItem = document.createElement('div')\n      menuItem.className = 'lf-context-item'\n      const img = document.createElement('img')\n      img.src = item.icon\n      img.className = 'lf-context-img'\n      if (item.className) {\n        menuItem.className = `${menuItem.className} ${item.className}`\n      }\n      img.addEventListener('click', () => {\n        this.hideContextMenu()\n        if (item.callback) {\n          item.callback(this._activeData)\n        } else {\n          this.addNode({\n            sourceId: this._activeData.id,\n            x: this._activeData.x,\n            y: this._activeData.y,\n            properties: item.properties,\n            type: item.type,\n          })\n        }\n      })\n      menuItem.appendChild(img)\n      menus.appendChild(menuItem)\n    })\n    this.__menuDOM.innerHTML = ''\n    this.__menuDOM.appendChild(menus)\n    this.showMenu()\n  }\n\n  private addNode(node: ContextMenuNodeData, y?: number) {\n    const isDeep = y !== undefined\n    if (y === undefined) {\n      y = node.y\n    }\n\n    const nodeModel = this.lf.getNodeModelById(node.sourceId)\n    if (nodeModel) {\n      const leftTopX = node.x - nodeModel.width + NEXT_X_DISTANCE\n      const leftTopY = y - node.y / 2 - 20\n      const rightBottomX = node.x + nodeModel.width + NEXT_X_DISTANCE\n      const rightBottomY = y + node.y / 2 + 20\n\n      const existElements = this.lf.getAreaElement(\n        [leftTopX, leftTopY],\n        [rightBottomX, rightBottomY],\n      )\n      if (existElements.length) {\n        y = y + NEXT_Y_DISTANCE\n        this.addNode(node, y)\n        return\n      }\n      if (node.type) {\n        const newNode = this.lf.addNode({\n          type: node.type,\n          x: node.x + 200,\n          y,\n          properties: node.properties,\n        })\n        let startPoint\n        let endPoint\n        if (isDeep) {\n          startPoint = {\n            x: node.x,\n            y: node.y + nodeModel.height / 2,\n          }\n          endPoint = {\n            x: newNode.x - newNode.width / 2,\n            y: newNode.y,\n          }\n        }\n        this.lf.addEdge({\n          sourceNodeId: node.sourceId,\n          targetNodeId: newNode.id,\n          startPoint,\n          endPoint,\n        })\n      }\n    }\n  }\n\n  private showMenu() {\n    const menuPosition = this.getContextMenuPosition()\n    if (menuPosition) {\n      const [x, y] = menuPosition\n      this.__menuDOM.style.display = 'flex'\n      this.__menuDOM.style.top = `${y}px`\n      this.__menuDOM.style.left = `${x + 10}px`\n      this.container.appendChild(this.__menuDOM)\n      // 菜单显示的时候，监听删除，同时隐藏\n      !this.isShow &&\n        this.lf.on(\n          'node:delete,edge:delete,node:drag,graph:transform',\n          this.listenDelete,\n        )\n      this.isShow = true\n    }\n  }\n\n  listenDelete = () => {\n    this.hideContextMenu()\n  }\n}\n\nexport default ContextMenu\n", "import LogicFlow from '@logicflow/core'\n\nexport type ShapeItem = {\n  type?: string\n  text?: string\n  icon?: string\n  label?: string\n  className?: string\n  disabled?: boolean\n  properties?: Record<string, unknown>\n  callback?: (lf: LogicFlow, container?: HTMLElement) => void\n  [key: string]: unknown\n}\n\nexport class DndPanel {\n  lf: LogicFlow\n  static pluginName = 'dndPanel'\n\n  shapeList?: ShapeItem[]\n  panelEl?: HTMLDivElement\n  domContainer?: HTMLElement\n\n  constructor({ lf }) {\n    this.lf = lf\n    this.lf.setPatternItems = (shapeList) => {\n      this.setPatternItems(shapeList)\n    }\n  }\n\n  render(_lf: LogicFlow, domContainer) {\n    this.destroy()\n    if (!this.shapeList || this.shapeList.length === 0) {\n      // 首次render后失败后，后续调用setPatternItems支持渲染\n      this.domContainer = domContainer\n      return\n    }\n    this.panelEl = document.createElement('div')\n    this.panelEl.className = 'lf-dndpanel'\n    this.shapeList.forEach((shapeItem) => {\n      this.panelEl?.appendChild(this.createDndItem(shapeItem))\n    })\n    domContainer.appendChild(this.panelEl)\n    this.domContainer = domContainer\n  }\n\n  destroy() {\n    if (\n      this.domContainer &&\n      this.panelEl &&\n      this.domContainer.contains(this.panelEl)\n    ) {\n      this.domContainer.removeChild(this.panelEl)\n    }\n  }\n\n  setPatternItems(shapeList) {\n    this.shapeList = shapeList\n    // 支持渲染后重新设置拖拽面板\n    if (this.domContainer) {\n      this.render(this.lf, this.domContainer)\n    }\n  }\n\n  private createDndItem(shapeItem: ShapeItem): HTMLElement {\n    const el = document.createElement('div')\n    el.className = shapeItem.className\n      ? `lf-dnd-item ${shapeItem.className}`\n      : 'lf-dnd-item'\n    const shape = document.createElement('div')\n    shape.className = 'lf-dnd-shape'\n    // if (typeof shapeItem.icon === 'string') {\n    if (shapeItem.icon) {\n      shape.style.backgroundImage = `url(${shapeItem.icon})`\n      // shape.style.backgroundSize = 'contain'\n      // } else {\n      //   shape.appendChild(shapeItem.icon);\n    }\n    el.appendChild(shape)\n    if (shapeItem.label) {\n      const text = document.createElement('div')\n      text.innerText = shapeItem.label\n      text.className = 'lf-dnd-text'\n      el.appendChild(text)\n    }\n    if (shapeItem.disabled) {\n      el.classList.add('disabled')\n      // 保留callback的执行，可用于界面提示当前shapeItem的禁用状态\n      el.onmousedown = () => {\n        if (shapeItem.callback) {\n          shapeItem.callback(this.lf, this.domContainer)\n        }\n      }\n      return el\n    }\n    el.onmousedown = () => {\n      if (shapeItem.type) {\n        this.lf.dnd.startDrag({\n          type: shapeItem.type,\n          properties: shapeItem.properties,\n          text: shapeItem.text,\n        })\n      }\n      if (shapeItem.callback) {\n        shapeItem.callback(this.lf, this.domContainer)\n      }\n    }\n    el.ondblclick = (e) => {\n      this.lf.graphModel.eventCenter.emit('dnd:panel-dbclick', {\n        e,\n        data: shapeItem,\n      })\n    }\n    el.onclick = (e) => {\n      this.lf.graphModel.eventCenter.emit('dnd:panel-click', {\n        e,\n        data: shapeItem,\n      })\n    }\n    el.oncontextmenu = (e) => {\n      this.lf.graphModel.eventCenter.emit('dnd:panel-contextmenu', {\n        e,\n        data: shapeItem,\n      })\n    }\n    return el\n  }\n}\n\nexport default DndPanel\n", "import LogicFlow from '@logicflow/core'\n\nimport Position = LogicFlow.Position\nimport PointTuple = LogicFlow.PointTuple\n\nexport class SelectionSelect {\n  static pluginName = 'selectionSelect'\n  private container?: HTMLElement\n  private wrapper?: HTMLElement\n  private lf: LogicFlow\n  private startPoint?: Position\n  private endPoint?: Position\n  private disabled = true\n  private isDefaultStopMoveGraph = false\n  private isWholeNode = true\n  private isWholeEdge = true\n\n  constructor({ lf }: LogicFlow.IExtensionProps) {\n    this.lf = lf\n    // 初始化isDefaultStopMoveGraph取值\n    const { stopMoveGraph } = lf.getEditConfig()\n    this.isDefaultStopMoveGraph = stopMoveGraph!\n    // TODO: 有没有既能将方法挂载到lf上，又能提供类型提示的方法？\n    lf.openSelectionSelect = () => {\n      this.openSelectionSelect()\n    }\n    lf.closeSelectionSelect = () => {\n      this.closeSelectionSelect()\n    }\n  }\n\n  render(lf: LogicFlow, domContainer: HTMLElement) {\n    this.container = domContainer\n    lf.on('blank:mousedown', ({ e }: { e: MouseEvent }) => {\n      const config = lf.getEditConfig()\n      // 鼠标控制滚动移动画布的时候，不能选区。\n      if (!config.stopMoveGraph || this.disabled) {\n        return\n      }\n      // 禁用右键框选，修复可能导致画布出现多个框选框不消失的问题，见https://github.com/didi/LogicFlow/issues/985\n      const isRightClick = e.button === 2\n      if (isRightClick) {\n        return\n      }\n      const {\n        domOverlayPosition: { x, y },\n      } = lf.getPointByClient(e.clientX, e.clientY)\n      this.startPoint = {\n        x,\n        y,\n      }\n      this.endPoint = {\n        x,\n        y,\n      }\n      const wrapper = document.createElement('div')\n      wrapper.className = 'lf-selection-select'\n      wrapper.oncontextmenu = function prevent(ev: MouseEvent) {\n        ev.preventDefault()\n      }\n      wrapper.style.top = `${this.startPoint.y}px`\n      wrapper.style.left = `${this.startPoint.x}px`\n      domContainer.appendChild(wrapper)\n      this.wrapper = wrapper\n      document.addEventListener('mousemove', this.draw)\n      document.addEventListener('mouseup', this.drawOff)\n    })\n  }\n\n  /**\n   * 设置选中的灵敏度\n   * @param isWholeEdge 是否要边的起点终点都在选区范围才算选中。默认true\n   * @param isWholeNode 是否要节点的全部点都在选区范围才算选中。默认true\n   */\n  setSelectionSense(isWholeEdge = true, isWholeNode = true) {\n    this.isWholeEdge = isWholeEdge\n    this.isWholeNode = isWholeNode\n  }\n\n  /**\n   * 开启选区\n   */\n  openSelectionSelect() {\n    const { stopMoveGraph } = this.lf.getEditConfig()\n    if (!stopMoveGraph) {\n      this.isDefaultStopMoveGraph = false\n      this.lf.updateEditConfig({\n        stopMoveGraph: true,\n      })\n    }\n    this.open()\n  }\n\n  /**\n   * 关闭选区\n   */\n  closeSelectionSelect() {\n    if (!this.isDefaultStopMoveGraph) {\n      this.lf.updateEditConfig({\n        stopMoveGraph: false,\n      })\n    }\n    this.close()\n  }\n\n  private draw = (ev: MouseEvent) => {\n    const {\n      domOverlayPosition: { x: x1, y: y1 },\n    } = this.lf.getPointByClient(ev.clientX, ev.clientY)\n    this.endPoint = {\n      x: x1,\n      y: y1,\n    }\n    if (this.startPoint) {\n      const { x, y } = this.startPoint\n      let left = x\n      let top = y\n      let width = x1 - x\n      let height = y1 - y\n      if (x1 < x) {\n        left = x1\n        width = x - x1\n      }\n      if (y1 < y) {\n        top = y1\n        height = y - y1\n      }\n      if (this.wrapper) {\n        this.wrapper.style.left = `${left}px`\n        this.wrapper.style.top = `${top}px`\n        this.wrapper.style.width = `${width}px`\n        this.wrapper.style.height = `${height}px`\n      }\n    }\n  }\n  private drawOff = () => {\n    document.removeEventListener('mousemove', this.draw)\n    document.removeEventListener('mouseup', this.drawOff)\n    if (this.wrapper) {\n      this.wrapper.oncontextmenu = null\n      this.container?.removeChild(this.wrapper)\n    }\n    if (this.startPoint && this.endPoint) {\n      const { x, y } = this.startPoint\n      const { x: x1, y: y1 } = this.endPoint\n      // 返回框选范围，左上角和右下角的坐标\n      const lt: PointTuple = [Math.min(x, x1), Math.min(y, y1)]\n      const rt: PointTuple = [Math.max(x, x1), Math.max(y, y1)]\n      this.lf.emit('selection:selected-area', {\n        topLeft: lt,\n        bottomRight: rt,\n      })\n      // 选区太小的情况就忽略\n      if (Math.abs(x1 - x) < 10 && Math.abs(y1 - y) < 10) {\n        return\n      }\n      const elements = this.lf.graphModel.getAreaElement(\n        lt,\n        rt,\n        this.isWholeEdge,\n        this.isWholeNode,\n        true,\n      )\n      const { group } = this.lf.graphModel\n      elements.forEach((element) => {\n        // 如果节点属于分组，则不不选中节点\n        if (!group || !group.getNodeGroup(element.id)) {\n          this.lf.selectElementById(element.id, true)\n        }\n      })\n      this.lf.emit('selection:selected', elements)\n    }\n  }\n\n  private open() {\n    this.disabled = false\n  }\n\n  private close() {\n    this.disabled = true\n  }\n}\n\nexport default SelectionSelect\n", "import LogicFlow from '@logicflow/core'\n\nimport Position = LogicFlow.Position\nimport MiniMapOption = MiniMap.MiniMapOption\nimport MiniMapPosition = MiniMap.MiniMapPosition\n\nexport namespace MiniMap {\n  export type MiniMapOption = Partial<{\n    /**\n     * 小地图中画布的宽度\n     */\n    width: number\n    /**\n     * 小地图中画布的高度\n     */\n    height: number\n    /**\n     * 在小地图的画布中是否渲染边\n     */\n    showEdge: boolean\n    /**\n     * 是否显示小地图的标题栏\n     */\n    isShowHeader: boolean\n    /**\n     * 是否显示关闭按钮\n     */\n    isShowCloseIcon: boolean\n    /**\n     * 小地图标题栏的文本内容\n     */\n    headerTitle: string\n    /**\n     * 小地图与画布左边界的左边距，优先级高于`rightPosition`\n     */\n    leftPosition: number\n    /**\n     * 小地图与画布右边界的右边距，优先级低于`leftPosition`\n     */\n    rightPosition: number\n    /**\n     * 小地图与画布上边界的上边距，优先级高于`bottomPosition`\n     */\n    topPosition: number\n    /**\n     * 小地图与画布下边界的下边距，优先级低于`topPosition`\n     */\n    bottomPosition: number\n  }>\n\n  export type AbsolutePosition = Partial<\n    Record<'left' | 'right' | 'top' | 'bottom', number>\n  >\n\n  export type MiniMapPosition =\n    | 'left-top'\n    | 'right-top'\n    | 'left-bottom'\n    | 'right-bottom'\n    | AbsolutePosition\n}\n\ntype Bounds = Record<'left' | 'top' | 'bottom' | 'right', number>\n\nexport class MiniMap {\n  static pluginName = 'miniMap'\n\n  /**\n   * 主画布的LogicFlow实例\n   */\n  private lf: LogicFlow\n  /**\n   * LogicFlow构造函数\n   */\n  private LFCtor: LogicFlow.LogicFlowConstructor\n  /**\n   * 小地图中画布的LogicFlow实例\n   */\n  private lfMap!: LogicFlow\n\n  /**\n   * lf的工具层容器，用于挂载小地图\n   */\n  private container?: HTMLElement\n  /**\n   * 小地图的容器\n   */\n  private miniMapContainer?: HTMLDivElement\n  /**\n   * 小地图的画布容器\n   */\n  private miniMapWrap!: HTMLDivElement\n  /**\n   * 小地图的预览视窗\n   */\n  private viewport!: HTMLDivElement\n\n  /**\n   * 小地图中画布容器的宽度\n   */\n  private width = 200\n  /**\n   * 小地图中画布容器的高度\n   */\n  private height = 150\n  /**\n   * 小地图中画布的缩放比例\n   */\n  private scale = 1\n  /**\n   * 小地图中画布的水平位移\n   */\n  private translateX = 0\n  /**\n   * 小地图中画布的垂直位移\n   */\n  private translateY = 0\n  /**\n   * 在小地图的画布中是否渲染边\n   */\n  private showEdge = false\n\n  /**\n   * 小地图中画布的区域范围\n   */\n  private bounds: Bounds\n  /**\n   * 所有元素占领的区域范围\n   */\n  private elementAreaBounds: Bounds\n  /**\n   * 主画布视口的区域范围\n   */\n  private viewPortBounds: Bounds\n\n  // 小地图相对画布的绝对定位\n  private leftPosition?: number\n  private topPosition?: number\n  private rightPosition?: number\n  private bottomPosition?: number\n\n  /**\n   * 预览视窗左上角在主画布的y坐标\n   */\n  private viewPortTop = 0\n  /**\n   * 预览视窗左上角在主画布的x坐标\n   */\n  private viewPortLeft = 0\n  // 预览视窗的宽高\n  private viewPortWidth = 150\n  private viewPortHeight = 75\n\n  /**\n   * 拖拽预览视窗时，记录起始点的位置\n   */\n  private startPosition!: Position\n\n  /**\n   * 是否显示小地图\n   */\n  private isShow = false\n  /**\n   * 是否显示小地图的标题栏\n   */\n  private isShowHeader = false\n  /**\n   * 是否显示关闭按钮\n   */\n  private isShowCloseIcon = false\n  /**\n   * 小地图标题栏的文本内容\n   */\n  private headerTitle = '导航'\n  /**\n   * 小地图的logicFlow实例需要禁用的插件\n   */\n  private disabledPlugins = ['miniMap', 'control', 'selectionSelect']\n\n  constructor({ lf, LogicFlow, options }: LogicFlow.IExtensionProps) {\n    this.lf = lf\n    this.LFCtor = LogicFlow\n    if (options && options.MiniMap) {\n      this.setOption(options.MiniMap as MiniMapOption)\n    }\n    this.viewPortWidth = lf.graphModel.width\n    this.viewPortHeight = lf.graphModel.height\n    const boundsInit: Bounds = {\n      left: 0,\n      right: this.viewPortWidth,\n      top: 0,\n      bottom: this.viewPortHeight,\n    }\n    this.bounds = boundsInit\n    this.elementAreaBounds = boundsInit\n    this.viewPortBounds = boundsInit\n    this.initMiniMap()\n  }\n\n  render = (_: LogicFlow, container: HTMLElement) => {\n    this.container = container\n    this.lf.on('history:change', () => {\n      if (this.isShow) {\n        this.setView()\n      }\n    })\n    this.lf.on('graph:transform', () => {\n      if (this.isShow) {\n        this.setView(false)\n      }\n    })\n  }\n\n  /**\n   * 显示小地图\n   * @param left 相对画布的左边距\n   * @param top 相对画布的上边距\n   */\n  public show = (left?: number, top?: number) => {\n    if (!this.isShow) {\n      this.createMiniMap(left, top)\n      this.setView()\n    }\n    this.isShow = true\n  }\n  /**\n   * 隐藏小地图\n   */\n  public hide = () => {\n    if (this.isShow) {\n      this.removeMiniMap()\n      this.lf.emit('miniMap:close', {})\n    }\n    this.isShow = false\n  }\n  /**\n   * 更新小地图在画布中的位置\n   * @param {MiniMapPosition} position\n   */\n  public updatePosition = (position: MiniMapPosition) => {\n    if (typeof position === 'object') {\n      if (position.left !== undefined || position.right !== undefined) {\n        this.leftPosition = position.left\n        this.rightPosition = position.right\n      }\n      if (position.top !== undefined || position.bottom !== undefined) {\n        this.topPosition = position.top\n        this.bottomPosition = position.bottom\n      }\n    } else {\n      switch (position) {\n        case 'left-top':\n          this.leftPosition = 0\n          this.rightPosition = undefined\n          this.topPosition = 0\n          this.bottomPosition = undefined\n          break\n        case 'right-top':\n          this.leftPosition = undefined\n          this.rightPosition = 0\n          this.topPosition = 0\n          this.bottomPosition = undefined\n          break\n        case 'left-bottom':\n          this.leftPosition = 0\n          this.rightPosition = undefined\n          this.topPosition = undefined\n          this.bottomPosition = 0\n          break\n        case 'right-bottom':\n          this.leftPosition = undefined\n          this.rightPosition = 0\n          this.topPosition = undefined\n          this.bottomPosition = 0\n          break\n      }\n    }\n    this.updateMiniMapPosition()\n  }\n  /**\n   * 重置主画布的缩放和平移\n   */\n  public reset = () => {\n    this.lf.resetTranslate()\n    this.lf.resetZoom()\n  }\n  /**\n   * 设置小地图的画布中是否绘制边\n   * @param {boolean} showEdge\n   */\n  public setShowEdge = (showEdge: boolean) => {\n    if (this.showEdge !== showEdge) {\n      this.showEdge = showEdge\n      this.setView()\n    }\n  }\n\n  /**\n   * 初始化小地图的配置\n   * @param options\n   */\n  private setOption(options: MiniMapOption) {\n    const {\n      width = 150,\n      height = 220,\n      showEdge = false,\n      isShowHeader = false,\n      isShowCloseIcon = false,\n      leftPosition,\n      topPosition,\n      rightPosition = 0,\n      bottomPosition = 0,\n      headerTitle = '导航',\n    } = options\n    this.width = width\n    this.height = height\n    this.showEdge = showEdge\n    this.isShowHeader = isShowHeader\n    this.isShowCloseIcon = isShowCloseIcon\n    this.leftPosition = leftPosition\n    this.rightPosition = leftPosition !== undefined ? undefined : rightPosition\n    this.topPosition = topPosition\n    this.bottomPosition = topPosition !== undefined ? undefined : bottomPosition\n    this.headerTitle = headerTitle\n  }\n\n  /**\n   * 初始化小地图的 LogicFlow 实例\n   */\n  private initMiniMap() {\n    const miniMapWrap = document.createElement('div')\n    miniMapWrap.className = 'lf-mini-map-graph'\n    miniMapWrap.style.width = `${this.width}px`\n    miniMapWrap.style.height = `${this.height}px`\n    this.lfMap = new this.LFCtor({\n      container: miniMapWrap,\n      grid: false,\n      isSilentMode: true,\n      stopZoomGraph: true,\n      stopScrollGraph: true,\n      // 禁用画布移动会导致 transformModel.translate 无效，所以这里不禁用\n      stopMoveGraph: false,\n      history: false,\n      snapline: false,\n      disabledPlugins: this.disabledPlugins,\n    })\n    // minimap中禁用adapter。\n    // this.lfMap.adapterIn = (a) => a\n    // this.lfMap.adapterOut = (a) => a\n    this.miniMapWrap = miniMapWrap\n    this.createViewPort()\n    miniMapWrap.addEventListener('click', this.mapClick)\n  }\n\n  private createMiniMap(left?: number, top?: number) {\n    const miniMapContainer = document.createElement('div')\n    this.miniMapContainer = miniMapContainer\n    miniMapContainer.appendChild(this.miniMapWrap)\n\n    miniMapContainer.style.position = 'absolute'\n    if (left !== undefined || top !== undefined) {\n      this.leftPosition = left || 0\n      this.topPosition = top || 0\n      this.rightPosition = undefined\n      this.bottomPosition = undefined\n    }\n    this.updateMiniMapPosition()\n\n    miniMapContainer.className = 'lf-mini-map'\n    if (!this.isShowCloseIcon) {\n      miniMapContainer.classList.add('lf-mini-map-no-close-icon')\n    }\n    if (!this.isShowHeader) {\n      miniMapContainer.classList.add('lf-mini-map-no-header')\n    }\n    this.container?.appendChild(miniMapContainer)\n    this.miniMapWrap.appendChild(this.viewport)\n\n    const header = document.createElement('div')\n    header.className = 'lf-mini-map-header'\n    header.innerText = this.headerTitle\n    miniMapContainer.appendChild(header)\n\n    const close = document.createElement('span')\n    close.className = 'lf-mini-map-close'\n    close.addEventListener('click', this.hide)\n    miniMapContainer.appendChild(close)\n  }\n\n  private updateMiniMapPosition() {\n    if (this.miniMapContainer) {\n      const { style } = this.miniMapContainer\n\n      if (this.rightPosition !== undefined) {\n        style.right = `${this.rightPosition}px`\n        style.left = ''\n      } else {\n        style.left = `${this.leftPosition}px`\n        style.right = ''\n      }\n\n      if (this.bottomPosition !== undefined) {\n        style.bottom = `${this.bottomPosition}px`\n        style.top = ''\n      } else {\n        style.top = `${this.topPosition}px`\n        style.bottom = ''\n      }\n    }\n  }\n\n  private removeMiniMap() {\n    if (this.miniMapContainer) {\n      this.container?.removeChild(this.miniMapContainer)\n    }\n  }\n\n  /**\n   * 更新小地图的区域范围\n   * @param data\n   */\n  private updateBounds(data?: LogicFlow.GraphData) {\n    if (data) {\n      this.updateElementAreaBounds(data)\n    }\n    this.updateViewPortBounds()\n    this.bounds = {\n      left: Math.min(this.elementAreaBounds.left, this.viewPortBounds.left),\n      right: Math.max(this.elementAreaBounds.right, this.viewPortBounds.right),\n      top: Math.min(this.elementAreaBounds.top, this.viewPortBounds.top),\n      bottom: Math.max(\n        this.elementAreaBounds.bottom,\n        this.viewPortBounds.bottom,\n      ),\n    }\n  }\n\n  /**\n   * 计算所有图形一起，占领的区域范围。\n   * @param data\n   */\n  private updateElementAreaBounds(data: LogicFlow.GraphData) {\n    const elementAreaBounds: Bounds = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    }\n    const { nodes } = data\n    if (nodes && nodes.length > 0) {\n      // TODO: 后续能获取节点高宽信息后，需要更新这里的计算方式\n      nodes.forEach((node) => {\n        const { x, y } = node\n        const width = (node.width as number) ?? 200\n        const height = (node.height as number) ?? 200\n\n        const nodeLeft = x - width / 2\n        const nodeRight = x + width / 2\n        const nodeTop = y - height / 2\n        const nodeBottom = y + height / 2\n\n        elementAreaBounds.left = Math.min(nodeLeft, elementAreaBounds.left)\n        elementAreaBounds.right = Math.max(nodeRight, elementAreaBounds.right)\n        elementAreaBounds.top = Math.min(nodeTop, elementAreaBounds.top)\n        elementAreaBounds.bottom = Math.max(\n          nodeBottom,\n          elementAreaBounds.bottom,\n        )\n      })\n    }\n    this.elementAreaBounds = elementAreaBounds\n  }\n\n  /**\n   * 获取视口范围\n   */\n  private updateViewPortBounds() {\n    const { TRANSLATE_X, TRANSLATE_Y, SCALE_X, SCALE_Y } =\n      this.lf.getTransform()\n    const { width, height } = this.lf.graphModel\n\n    this.viewPortBounds = {\n      left: -TRANSLATE_X / SCALE_X,\n      right: (-TRANSLATE_X + width) / SCALE_X,\n      top: -TRANSLATE_Y / SCALE_Y,\n      bottom: (-TRANSLATE_Y + height) / SCALE_Y,\n    }\n  }\n\n  /**\n   * 删除部分内容以简化渲染，包括边与节点文本\n   */\n  private resetData(data: LogicFlow.GraphData): LogicFlow.GraphData {\n    const { nodes, edges } = data\n    nodes.forEach((node) => {\n      // 删除节点文本\n      node.text = undefined\n    })\n    if (this.showEdge) {\n      edges.forEach((edge) => {\n        // 删除边上的文本\n        edge.text = undefined\n      })\n    }\n    return {\n      nodes,\n      // 是否渲染边\n      edges: this.showEdge ? edges : [],\n    }\n  }\n\n  /**\n   * MiniMap视图重绘\n   * @param reRender 是否重新渲染画布元素\n   */\n  // TODO: 确定 render 函数是否为增量渲染，如果是则不需要 reRender 参数做限制\n  private setView(reRender: boolean = true) {\n    if (reRender) {\n      // 1. 获取到图中所有的节点中的位置\n      const graphData = this.lf.getGraphRawData()\n      const data = this.resetData(graphData)\n      // 由于随时都会有新节点注册进来，需要同步将注册的\n      const { viewMap } = this.lf\n      const { modelMap } = this.lf.graphModel\n      const { viewMap: minimapViewMap } = this.lfMap\n\n      for (const key of viewMap.keys()) {\n        if (!minimapViewMap.has(key)) {\n          this.lfMap.register({\n            type: key,\n            view: viewMap.get(key)!,\n            model: modelMap.get(key)!,\n          })\n        }\n      }\n\n      // 2. 将数据渲染到小地图的画布上\n      this.lfMap.render(data)\n\n      // 3. 更新所有节点与当前视口构成的区域范围\n      this.updateBounds(data)\n    } else {\n      this.updateBounds()\n    }\n\n    // 4. 计算小地图画布相对小地图容器的缩放比例，并移动小地图的视图保证元素全部可见且整体居中。\n    const { left, top, right, bottom } = this.bounds\n    const realWidth = right - left\n    const realHeight = bottom - top\n    const realWidthScale = this.width / realWidth\n    const realHeightScale = this.height / realHeight\n    const scale = Math.min(realWidthScale, realHeightScale)\n    this.scale = scale\n\n    const translateX = left - (this.width / scale - realWidth) / 2\n    const translateY = top - (this.height / scale - realHeight) / 2\n    this.lfMap.graphModel.transformModel.translate(\n      -translateX + this.translateX,\n      -translateY + this.translateY,\n    )\n    this.translateX = translateX\n    this.translateY = translateY\n\n    // 5. 将小地图的画布缩放对应的比例。\n    if (this.miniMapWrap.firstChild) {\n      const innerStyle = (this.miniMapWrap.firstChild as HTMLElement).style\n      innerStyle.pointerEvents = 'none'\n      innerStyle.transform = `matrix(${scale}, 0, 0, ${scale}, 0, 0)`\n      innerStyle.transformOrigin = 'left top'\n      innerStyle.height = `${this.height / scale}px`\n      innerStyle.width = `${this.width / scale}px`\n      this.updateViewPort()\n    }\n  }\n\n  /**\n   * 更新预览视窗的位置\n   */\n  private updateViewPort() {\n    const viewStyle = this.viewport.style\n    const { TRANSLATE_X, TRANSLATE_Y, SCALE_X, SCALE_Y } =\n      this.lf.getTransform()\n    const { width, height } = this.lf.graphModel\n\n    this.viewPortLeft = -TRANSLATE_X / SCALE_X\n    this.viewPortTop = -TRANSLATE_Y / SCALE_Y\n    this.viewPortWidth = (width / SCALE_X) * this.scale\n    this.viewPortHeight = (height / SCALE_Y) * this.scale\n\n    viewStyle.width = `${this.viewPortWidth}px`\n    viewStyle.height = `${this.viewPortHeight}px`\n    viewStyle.left = `${(this.viewPortLeft - this.translateX) * this.scale}px`\n    viewStyle.top = `${(this.viewPortTop - this.translateY) * this.scale}px`\n  }\n\n  /**\n   * 创建预览视窗元素\n   */\n  private createViewPort() {\n    const div = document.createElement('div')\n    div.className = 'lf-minimap-viewport'\n\n    // 拖拽预览视窗，主画布视口跟随移动\n    div.addEventListener('mousedown', this.startDrag)\n\n    // 禁止预览视窗的点击事件冒泡\n    div.addEventListener('click', (e: MouseEvent) => {\n      e.stopPropagation()\n    })\n    this.viewport = div\n  }\n\n  private startDrag = (e: MouseEvent) => {\n    document.addEventListener('mousemove', this.drag)\n    document.addEventListener('mouseup', this.drop)\n    const { x, y } = e\n    this.startPosition = { x, y }\n  }\n\n  /**\n   * 拖拽预览视窗过程中，更新主画布视口\n   */\n  private drag = (e: MouseEvent) => {\n    const { x, y } = e\n    const translateX = (x - this.startPosition.x) / this.scale\n    const translateY = (y - this.startPosition.y) / this.scale\n    const centerX =\n      this.viewPortLeft + translateX + this.viewPortWidth / this.scale / 2\n    const centerY =\n      this.viewPortTop + translateY + this.viewPortHeight / this.scale / 2\n\n    // 每移动一次预览视窗都需要更新拖拽的起始点\n    this.startPosition = { x, y }\n    this.lf.focusOn({\n      coordinate: {\n        x: centerX,\n        y: centerY,\n      },\n    })\n  }\n\n  /**\n   * 拖拽预览视窗结束，移除拖拽事件\n   */\n  private drop = () => {\n    document.removeEventListener('mousemove', this.drag)\n    document.removeEventListener('mouseup', this.drop)\n  }\n\n  /**\n   * 点击小地图中非预览视窗的区域时，移动主画布视口聚焦于点击位置\n   */\n  private mapClick = (e: MouseEvent) => {\n    const { offsetX, offsetY } = e\n    const centerX = this.translateX + offsetX / this.scale\n    const centerY = this.translateY + offsetY / this.scale\n    this.lf.focusOn({\n      coordinate: {\n        x: centerX,\n        y: centerY,\n      },\n    })\n  }\n}\n\nexport default MiniMap\n", "import { PolylineEdge, PolylineEdgeModel, h, LogicFlow } from '@logicflow/core'\nimport PointTuple = LogicFlow.PointTuple\n\ntype DirectionType = 't' | 'b' | 'l' | 'r' | ''\ntype ArcQuadrantType = 'tl' | 'tr' | 'bl' | 'br' | '-'\n\nconst directionMap: {\n  [key: string]: ArcQuadrantType\n} = {\n  tr: 'tl',\n  lb: 'tl',\n  tl: 'tr',\n  rb: 'tr',\n  br: 'bl',\n  lt: 'bl',\n  bl: 'br',\n  rt: 'br',\n}\n\nfunction pointFilter(points: number[][]) {\n  const all = points\n  let i = 1\n  while (i < all.length - 1) {\n    const [x, y] = all[i - 1]\n    const [x1, y1] = all[i]\n    const [x2, y2] = all[i + 1]\n    if ((x === x1 && x1 === x2) || (y === y1 && y1 === y2)) {\n      all.splice(i, 1)\n    } else {\n      i++\n    }\n  }\n  return all\n}\n\nfunction getMidPoints(\n  cur: PointTuple,\n  key: string,\n  orientation: ArcQuadrantType,\n  radius: number,\n) {\n  const mid1 = [cur[0], cur[1]]\n  const mid2 = [cur[0], cur[1]]\n  switch (orientation) {\n    case 'tl': {\n      if (key === 'tr') {\n        mid1[1] += radius\n        mid2[0] += radius\n      } else if (key === 'lb') {\n        mid1[0] += radius\n        mid2[1] += radius\n      }\n      return [mid1, mid2]\n    }\n    case 'tr': {\n      if (key === 'tl') {\n        mid1[1] += radius\n        mid2[0] -= radius\n      } else if (key === 'rb') {\n        mid1[0] -= radius\n        mid2[1] += radius\n      }\n      return [mid1, mid2]\n    }\n    case 'bl': {\n      if (key === 'br') {\n        mid1[1] -= radius\n        mid2[0] += radius\n      } else if (key === 'lt') {\n        mid1[0] += radius\n        mid2[1] -= radius\n      }\n      return [mid1, mid2]\n    }\n    case 'br': {\n      if (key === 'bl') {\n        mid1[1] -= radius\n        mid2[0] -= radius\n      } else if (key === 'rt') {\n        mid1[0] -= radius\n        mid2[1] -= radius\n      }\n      return [mid1, mid2]\n    }\n    default:\n      return []\n  }\n}\n\nfunction getPartialPath(\n  prev: PointTuple,\n  cur: PointTuple,\n  next: PointTuple,\n  radius: number,\n): string {\n  let dir1: DirectionType = ''\n  let dir2: DirectionType = ''\n\n  if (prev[0] === cur[0]) {\n    dir1 = prev[1] > cur[1] ? 't' : 'b'\n  } else if (prev[1] === cur[1]) {\n    dir1 = prev[0] > cur[0] ? 'l' : 'r'\n  }\n\n  if (cur[0] === next[0]) {\n    dir2 = cur[1] > next[1] ? 't' : 'b'\n  } else if (cur[1] === next[1]) {\n    dir2 = cur[0] > next[0] ? 'l' : 'r'\n  }\n\n  const r =\n    Math.min(\n      Math.hypot(cur[0] - prev[0], cur[1] - prev[1]) / 2,\n      Math.hypot(next[0] - cur[0], next[1] - cur[1]) / 2,\n      radius,\n    ) || (1 / 5) * radius\n\n  const key = `${dir1}${dir2}`\n  const orientation: ArcQuadrantType = directionMap[key] || '-'\n  let path = `L ${prev[0]} ${prev[1]}`\n\n  if (orientation === '-') {\n    path += `L ${cur[0]} ${cur[1]} L ${next[0]} ${next[1]}`\n  } else {\n    const [mid1, mid2] = getMidPoints(cur, key, orientation, r)\n    if (mid1 && mid2) {\n      path += `L ${mid1[0]} ${mid1[1]} Q ${cur[0]} ${cur[1]} ${mid2[0]} ${mid2[1]}`\n      ;[cur[0], cur[1]] = mid2\n    }\n  }\n  return path\n}\n\nfunction getCurvedEdgePath(points: number[][], radius: number): string {\n  let i = 0\n  let d = ''\n  if (points.length === 2) {\n    d += `M${points[i][0]} ${points[i++][1]} L ${points[i][0]} ${points[i][1]}`\n  } else {\n    d += `M${points[i][0]} ${points[i++][1]}`\n    for (; i + 1 < points.length; ) {\n      const prev = points[i - 1] as PointTuple\n      const cur = points[i] as PointTuple\n      const next = points[i++ + 1] as PointTuple\n      d += getPartialPath(prev, cur, next, radius as number)\n    }\n    d += `L ${points[i][0]} ${points[i][1]}`\n  }\n  return d\n}\n\nclass CurvedEdge extends PolylineEdge {\n  getEdge(): h.JSX.Element {\n    const { model } = this.props\n    const { points: pointsStr, isAnimation, arrowConfig, radius = 5 } = model\n    const style = model.getEdgeStyle()\n    const animationStyle = model.getEdgeAnimationStyle()\n    const points = pointFilter(\n      pointsStr.split(' ').map((p) => p.split(',').map((a) => +a)),\n    )\n    const d = getCurvedEdgePath(points, radius as number)\n    const attrs = {\n      style: isAnimation ? animationStyle : {},\n      ...style,\n      ...arrowConfig,\n      fill: 'none',\n    }\n    return h('path', {\n      d,\n      ...attrs,\n    })\n  }\n}\n\nclass CurvedEdgeModel extends PolylineEdgeModel {}\n\nconst defaultCurvedEdge = {\n  type: 'curved-edge',\n  view: CurvedEdge,\n  model: CurvedEdgeModel,\n}\n\nexport default defaultCurvedEdge\n\nexport { CurvedEdge, CurvedEdgeModel, getCurvedEdgePath }\n", "import { get } from 'lodash-es'\nimport { h, PolygonNode, PolygonNodeModel } from '@logicflow/core'\n\nclass NodeSelectionView extends PolygonNode {\n  getLabelShape(): h.JSX.Element {\n    const { id, x, y, width, height, properties } = this.props.model\n    const style = this.props.model.getNodeStyle()\n    return h(\n      'svg',\n      {\n        x: x - width / 2,\n        y: y - height / 2,\n        width: 50,\n        height: 24,\n        style: 'z-index: 0; background: none; overflow: auto;',\n      },\n      [\n        properties.labelText\n          ? h(\n              'text',\n              {\n                x: 0,\n                y: -5,\n                fontSize: '16px',\n                fill: style.stroke,\n              },\n              properties.labelText,\n            )\n          : '',\n        properties.disabledDelete\n          ? ''\n          : h(\n              'text',\n              {\n                x: properties.labelText ? 50 : 0,\n                y: -5,\n                fontSize: '24px',\n                cursor: 'pointer',\n                fill: style.stroke,\n                onclick: this.handleCustomDeleteIconClick.bind(this, id),\n              },\n              'x',\n            ),\n      ],\n    )\n  }\n\n  getShape(): h.JSX.Element {\n    const { x, y, width, height, id } = this.props.model\n    const style = this.props.model.getNodeStyle()\n\n    return h('g', {}, [\n      h('rect', {\n        ...style,\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        id,\n      }),\n      this.getLabelShape(),\n    ])\n  }\n  // 避免点击时，该节点置于最高层，挡住内部节点\n  toFront() {}\n\n  /**\n   * 点击删除\n   * @param id\n   */\n  handleCustomDeleteIconClick(id) {\n    const { graphModel } = this.props\n    graphModel.deleteNode(id)\n  }\n}\n\nclass NodeSelectionModel extends PolygonNodeModel {\n  d = 10\n\n  initNodeData(data) {\n    data.text = {\n      value: '',\n      x: data.x,\n      y: data.y,\n      draggable: false,\n      editable: false,\n    }\n    super.initNodeData(data)\n    this.zIndex = 0\n    this.draggable = true\n  }\n\n  setAttributes() {\n    // 默认不显示\n    this.points = []\n\n    // 图render的时候，会把所有nodes数据实例化，全部实例化完成后，放到nodesMap里。\n    // 节点的setAttributes在实例化的时候执行第一次\n    // updatePointsByNodes中的getNodeModelById方法，是从nodesMap取的数据，第一次就拿不到，所以要加setTimeout\n    if ((this.properties?.node_selection_ids as string[]).length > 1) {\n      setTimeout(() => {\n        this.updatePointsByNodes(this.properties?.node_selection_ids || [])\n      })\n    }\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle()\n    style.stroke = this.properties.strokeColor || '#008000'\n    style.strokeDasharray = '10 5'\n    return style\n  }\n\n  getDefaultAnchor() {\n    return []\n  }\n\n  /**\n   * 更新points - 多边形顶点坐标集合\n   * @param points\n   */\n  updatePoints(points) {\n    this.points = points\n  }\n\n  /**\n   * 更新x y - 多边形中点坐标\n   */\n  updateCoordinate({ x, y }) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * 计算新的 points 和 x y\n   */\n  updatePointsByNodes(nodesIds) {\n    const points: [number, number][] = []\n    let minX = Infinity\n    let minY = Infinity\n    let maxX = -Infinity\n    let maxY = -Infinity\n\n    nodesIds.forEach((id) => {\n      const model = this.graphModel.getNodeModelById(id)\n      if (!model) return\n      const { width, height, x, y } = model\n      minX = Math.min(minX, x - width / 2 - this.d)\n      minY = Math.min(minY, y - height / 2 - this.d)\n      maxX = Math.max(maxX, x + width / 2 + this.d)\n      maxY = Math.max(maxY, y + height / 2 + this.d)\n    })\n    points.push([minX, minY], [maxX, minY], [maxX, maxY], [minX, maxY])\n\n    if ([minX, minY, maxX, maxY].some((n) => Math.abs(n) === Infinity)) return\n\n    this.updatePoints(points)\n    this.updateCoordinate({\n      x: (maxX + minX) / 2,\n      y: (maxY + minY) / 2,\n    })\n  }\n}\n\nclass NodeSelection {\n  static pluginName = 'node-selection'\n  lf // lf 实例\n  selectNodes: any[] = [] // 选择的nodes\n  currentClickNode // 当前点击的节点，选中的节点是无序的\n  d = 10\n\n  constructor({ lf }) {\n    lf.register({\n      type: 'node-selection',\n      view: NodeSelectionView,\n      model: NodeSelectionModel,\n    })\n  }\n\n  /**\n   * 获取所选node的id数组\n   */\n  get selectNodesIds(): string[] {\n    return this.selectNodes.map((node) => node.id)\n  }\n\n  /**\n   * 新建node-selection节点\n   */\n  addNodeSelection() {\n    const node = this.lf.addNode({\n      type: 'node-selection',\n      text: '',\n      properties: {\n        node_selection_ids: this.selectNodesIds,\n      },\n    })\n    node.updatePointsByNodes(this.selectNodesIds)\n  }\n\n  /**\n   * 更新node-selection节点\n   */\n  updateNodeSelection() {\n    const nodeSelection = this.getNodeSelection()\n    if (!nodeSelection) return\n    this.lf.setProperties(nodeSelection.id, {\n      node_selection_ids: this.selectNodesIds,\n    })\n\n    this.lf\n      .getNodeModelById(nodeSelection.id)\n      .updatePointsByNodes(this.selectNodesIds)\n  }\n\n  /**\n   * 获取所属的node-selection\n   */\n  getNodeSelection() {\n    const ids = this.selectNodesIds\n    const rawData = this.lf.getGraphRawData()\n\n    const oldIds = ids.filter((id) => id !== this.currentClickNode.id)\n    return rawData.nodes.find((node) => {\n      if (node.type === 'node-selection') {\n        const nodeSelectionIds = get(node, 'properties.node_selection_ids', [])\n        return oldIds.every((id) => nodeSelectionIds.includes(id))\n      }\n      return false\n    })\n  }\n\n  render(lf) {\n    this.lf = lf\n\n    lf.on('node:click', (val) => {\n      if (!val.e.shiftKey || val.data.type === 'node-selection') return\n      this.currentClickNode = val.data\n\n      // 如果selectNodesIds中已存在此节点，则取消选中此节点\n      let hasExists = false\n      if (this.selectNodesIds.includes(val.data.id)) {\n        this.lf.getNodeModelById(val.data.id).setSelected(false)\n        hasExists = true\n      }\n\n      // 获取所有被选中的节点，获取到的数组是无序的\n      const { nodes } = lf.getSelectElements(true)\n      this.selectNodes = nodes\n      if (this.selectNodes.length === 1) {\n        if (!hasExists) {\n          this.addNodeSelection()\n        } else {\n          this.updateNodeSelection()\n        }\n      } else if (this.selectNodes.length > 1) {\n        this.updateNodeSelection()\n      }\n    })\n    lf.graphModel.addNodeMoveRules((model, deltaX, deltaY) => {\n      if (model.type === 'node-selection') {\n        // 如果移动的是分组，那么分组的子节点也跟着移动。\n        const nodeIds = model.properties.node_selection_ids\n        lf.graphModel.moveNodes(nodeIds, deltaX, deltaY, true)\n        return true\n      }\n      return true\n    })\n  }\n}\n\nexport default NodeSelection\n\nexport { NodeSelection }\n", "/**\n * 路径插件，此插件支持获取绘制的图中所有的路径。\n * 需要指定开始节点类型。\n */\n\nimport LogicFlow from '@logicflow/core'\nimport { getBpmnId } from '../../bpmn/getBpmnId'\n\ntype Path = {\n  routeId: string\n  name: string\n  elements: string[]\n  type: number\n}\n\ntype RawPath = Path & {\n  similarElement: RawPath\n  weight: number\n}\n\ntype PathNodeData = {\n  id: string\n  data: any\n  nextNodes: string[]\n}\n\nexport class FlowPath {\n  lf: LogicFlow\n  paths: RawPath[]\n  startNodeType?: string\n  static pluginName = 'flowPath'\n\n  constructor({ lf }) {\n    this.lf = lf\n    this.paths = []\n    // 给lf添加方法\n    lf.getPathes = () => {\n      if (!this.startNodeType) {\n        throw new Error('需要预先指定开始节点类型')\n      }\n      return this.getPathes()\n    }\n\n    lf.setRawPaths = (paths: Path[]) => {\n      this.setPathes(paths)\n    }\n\n    lf.getRawPathes = () => this.paths\n\n    lf.setStartNodeType = (type: string) => {\n      this.startNodeType = type\n    }\n  }\n\n  setPathes(paths) {\n    this.paths = paths.map(({ routeId, name, elements, type }) => ({\n      routeId,\n      name,\n      elements,\n      type,\n      similarElement: null,\n      weight: 0,\n    }))\n  }\n\n  getPathes() {\n    const graphData = this.lf.getGraphRawData()\n    const nodesMap: Map<string, PathNodeData> = new Map()\n    const startNodeIds: string[] = []\n    graphData.nodes.forEach((node) => {\n      nodesMap.set(node.id, {\n        id: node.id,\n        data: node,\n        nextNodes: [],\n      })\n      if (node.type === this.startNodeType) {\n        startNodeIds.push(node.id)\n      }\n    })\n    graphData.edges.forEach((edge) => {\n      const node = nodesMap.get(edge.sourceNodeId)\n      node?.nextNodes.push(edge.targetNodeId)\n    })\n    let pathElements: string[][] = []\n    startNodeIds.forEach((id) => {\n      const node = nodesMap.get(id)\n      if (node) {\n        pathElements = pathElements.concat(\n          this.findPathElements(node, nodesMap, []),\n        )\n      }\n    })\n    return this.getNewPathes(pathElements)\n  }\n\n  private findPathElements(\n    node: PathNodeData,\n    nodesMap: Map<string, PathNodeData>,\n    elements: string[] = [],\n  ) {\n    const newPaths: string[] = [...elements]\n    newPaths.push(node.id)\n    if (node.nextNodes.length === 0) {\n      return [newPaths]\n    }\n    let subPath = []\n    for (let i = 0; i < node.nextNodes.length; i++) {\n      const n = nodesMap.get(node.nextNodes[i])\n      let p\n      // 循环路径\n      if (n) {\n        const idx = newPaths.indexOf(n.id)\n        if (idx !== -1) {\n          p = [[...newPaths.slice(idx), n.id]]\n        } else {\n          p = this.findPathElements(n, nodesMap, [...newPaths])\n        }\n        subPath = subPath.concat(p)\n      }\n    }\n    return subPath\n  }\n\n  /**\n   * 设置路径id\n   * 如果存在原始路径Id, 则需要比较新路径是否在原始路径中存在相似路径\n   * 如果有，则尽量使用原始路径。\n   * 相似路径\n   * 1. 如果所有的节点都相同，则必定为同一路径。(包括顺序不同)\n   * 2. 如果新路径比原来路径少了或者多了部分节点，则记录为相似路径。基于不同的差异，标记不同的权重。\n   * 3. 基于新路径在旧路径占用权限，设置新路径Id.\n   * 4. 如果某一条旧路径被多条新路径标记为相同的权重，则这两条新路径都使用新Id.\n   */\n  private getNewPathes(pathElements) {\n    const paths: any = []\n    // 由于循环路径不包括开始，所以存在重复的情况，此处去重。\n    const LoopSet = new Set()\n    pathElements.forEach((elements) => {\n      console.log('elements', elements)\n      const routeId = this.getNewId('path')\n      const name = this.getNewId('路径')\n      const isLoop = this.isLoopPath(elements)\n      const elementStr = elements.join(',')\n      if (!LoopSet.has(elementStr)) {\n        LoopSet.add(elementStr)\n        paths.push({\n          routeId,\n          name,\n          elements,\n          type: isLoop,\n          weight: 0,\n          similarElement: '',\n        })\n      }\n    })\n    const oldPaths = JSON.parse(JSON.stringify(this.paths))\n    // 1) 找到所有路径最相似的路径, 给旧路径标记其最接近的路径\n    paths.forEach((newPath) => {\n      for (let i = 0; i < oldPaths.length; i++) {\n        const oldPath = oldPaths[i]\n        const weight = this.similar2Path(\n          [...newPath.elements],\n          [...oldPath.elements],\n        )\n        if (weight > newPath.weight && oldPath.weight <= weight) {\n          newPath.weight = weight\n          newPath.similarElement = oldPath\n          if (weight === oldPath.weight && oldPath.similarElement) {\n            // 特殊处理，如果两个路径都与同一条旧路径有相似的权重，则这两个路径的相似路径都置空\n            oldPath.similarElement.similarElement = null\n            oldPath.similarElement.weight = 0\n            oldPath.similarElement = null\n            oldPath.weight = 0\n          } else {\n            oldPath.similarElement = newPath\n            oldPath.weight = weight\n          }\n        }\n      }\n    })\n    // 2) 再次遍历所有路径，如果该路径的相似路径对应的相似路径是自己，那么就设置该路径id和name为其相似路径。\n    paths.forEach((newPath) => {\n      if (\n        newPath.similarElement &&\n        newPath.similarElement.similarElement === newPath\n      ) {\n        newPath.routeId = newPath.similarElement.routeId\n        newPath.name = newPath.similarElement.name\n      }\n      delete newPath.similarElement\n      delete newPath.weight\n    })\n\n    this.setPathes(paths)\n    return paths\n  }\n\n  private similar2Path(x, y) {\n    let z = 0\n    const s = x.length + y.length\n\n    x.sort()\n    y.sort()\n    let a = x.shift()\n    let b = y.shift()\n\n    while (a !== undefined && b !== undefined) {\n      if (a === b) {\n        z++\n        a = x.shift()\n        b = y.shift()\n      } else if (a < b) {\n        a = x.shift()\n      } else if (a > b) {\n        b = y.shift()\n      }\n    }\n    return (z / s) * 200\n  }\n\n  private getNewId(prefix) {\n    return `${prefix}_${getBpmnId()}`\n  }\n\n  /**\n   * 判断是否为循环路径\n   * 由于前面进行了特殊处理，将循环部分单独提出来作为路径\n   * 所有循环路径必定开始节点等于结束节点。\n   */\n  private isLoopPath(elements) {\n    const { length } = elements\n    return elements.indexOf(elements[length - 1]) !== length - 1 ? 1 : 0\n  }\n}\n", "/**\n * 自动布局插件\n * 依赖flowPath插件\n * 未完善\n */\n\nimport LogicFlow from '@logicflow/core'\n\nconst POSITION_TYPE = {\n  LEFT_TOP: -1,\n  LEFT: 0,\n  LEFT_BOTTOM: 1,\n}\n\nclass AutoLayout {\n  lf: LogicFlow\n  levelHeight: any[] = []\n  newNodeMap: Map<string, any> = new Map()\n  trunk: any[]\n  static pluginName = 'AutoLayout'\n\n  constructor({ lf }) {\n    this.lf = lf\n    /**\n     * 用于记录上一次调用layout时计算出的trunk\n     * 当旧trunk和新trunk长度一致时，用于选择旧trunk,\n     * a->b->c->d\n     *    |->e\n     * e后面新增f节点时候，旧逻辑会返回新trunk[a,b,e,f]\n     * 界面布局变成\n     * a->b->e->f\n     *    |->c->d\n     * 其实只想要这样 尽量少变化\n     * a->b->c->d\n     *    |->e->f\n     * */\n    this.trunk = []\n    // 给lf添加方法\n    lf.layout = (startNodeType) => {\n      const data = this.lf.getGraphRawData()\n      this.lf.setStartNodeType(startNodeType)\n      const path = this.lf.getPathes()\n      this.levelHeight = []\n      this.newNodeMap = new Map()\n      return this.layout(data, path)\n    }\n  }\n\n  // 1) 将所有节点和边的坐标删除。节点上的文本改成偏移量。\n  // 2) 找到长度最长的路径，作为基准路径。\n  // 3) 依次计算\n  // 拿到最长的路径。\n  // nodes: [], edges: [],\n  layout(data, path) {\n    let trunk: any = [] // TODO: 完成类型定义\n    path.forEach((p) => {\n      const { elements } = p\n      if (elements.length > trunk.length) {\n        trunk = elements\n      } else if (elements.length === trunk.length) {\n        // 考虑是否替换为旧的trunk\n        if (JSON.stringify(elements) === JSON.stringify(this.trunk)) {\n          trunk = this.trunk\n        }\n      }\n    })\n    // 记录上一次trunk\n    this.trunk = trunk\n    const nodeMap = this.formatData(data)\n    const newGraphData = {\n      nodes: [],\n      edges: [],\n    }\n    // 从后向前布局\n    for (let i = trunk.length - 1; i >= 0; i--) {\n      this.setNodePosition(trunk[i], nodeMap, newGraphData, i, 1)\n    }\n    this.lf.graphModel.graphDataToModel(newGraphData)\n  }\n\n  // 1) 需要知道下一层级已占高度。\n  // 2) 基于自己的高度，判断下一个层级的高度\n  private setNodePosition(nodeId, nodeMap, newGraphData, xLevel, yLevel) {\n    const n = nodeMap[nodeId]\n    const { text, type, next, properties } = n\n    const x = xLevel * 160 + 40\n    const y = yLevel * 120\n    const nodeData = {\n      id: nodeId,\n      x,\n      text,\n      y,\n      type,\n      properties,\n    }\n    if (text && typeof text === 'object') {\n      nodeData.text = {\n        ...text,\n        x: x + text.x,\n        y: y + text.y,\n      }\n    }\n    this.newNodeMap.set(nodeData.id, {\n      x: nodeData.x,\n      y: nodeData.y,\n      type,\n    })\n    newGraphData.nodes.push(nodeData)\n    n.isFixed = true\n    this.addLevelHeight(xLevel, 1)\n    if (next && next.length > 0) {\n      next.forEach((nextInfo) => {\n        // 如果下一个节点还没有被定位，那么设置其定位\n        const n1 = nodeMap[nextInfo.nodeId]\n        if (!n1.isFixed) {\n          const nextYLevel = this.getLevelHeight(xLevel + 1)\n          this.addLevelHeight(xLevel, 1)\n          this.setNodePosition(\n            nextInfo.nodeId,\n            nodeMap,\n            newGraphData,\n            xLevel + 1,\n            nextYLevel + 1,\n          )\n        } else {\n          // todo: 如果下一个节点是已经定位的，则需要考虑边的规避\n        }\n        // 设置连接到下一个节点的边\n        // 1) 起始位置为source节点的下方，结束位置为target节点左边。\n        // 2) 计算折线\n        newGraphData.edges.push({\n          id: nextInfo.edgeId,\n          type: nextInfo.edgeType,\n          sourceNodeId: nodeId,\n          targetNodeId: nextInfo.nodeId,\n          properties: nextInfo.properties,\n          text: nextInfo.text,\n          ...this.getEdgeDataPoints(nodeId, nextInfo.nodeId),\n        })\n      })\n    }\n    return nodeData\n  }\n\n  /**\n   * 1. 处理边上的文本\n   * 2. 主干节点之间直接的边\n   * 3. 一个节点被多个连接作为目标节点，合理分配锚点位置。\n   */\n  private getEdgeDataPoints(sourceNodeId, targetNodeId) {\n    const source = this.newNodeMap.get(sourceNodeId)\n    const target = this.newNodeMap.get(targetNodeId)\n    const { width, height } = this.getShape(sourceNodeId)\n    const { width: targetWidth, height: targetHeight } =\n      this.getShape(targetNodeId)\n    const positionType = this.getRelativePosition(source, target)\n    const startPoint = {\n      x: source.x,\n      y: source.y,\n    }\n    const endPoint = {\n      x: target.x,\n      y: target.y,\n    }\n    switch (positionType) {\n      case POSITION_TYPE.LEFT:\n        startPoint.x = source.x + width / 2\n        endPoint.x = target.x - targetWidth / 2\n        break\n      case POSITION_TYPE.LEFT_TOP:\n        startPoint.y = source.y + height / 2\n        endPoint.x = target.x - targetWidth / 2\n        break\n      case POSITION_TYPE.LEFT_BOTTOM:\n        startPoint.x = source.x + width / 2\n        endPoint.y = target.y + targetHeight / 2\n        break\n      default:\n        break\n    }\n    return {\n      startPoint,\n      endPoint,\n    }\n  }\n\n  /**\n   * 获取边的连接节点相对位置。\n   * source一定在target左边。\n   * 1. 如果source和target在同一x, y坐标内容。\n   * 2. 如果source在target左上方。\n   * 3. 如果source在target左下方。\n   */\n  private getRelativePosition(source, target) {\n    const { y } = source\n    const { y: y1 } = target\n    let positionType\n    if (y < y1) {\n      positionType = -1\n    } else if (y === y1) {\n      positionType = 0\n    } else {\n      positionType = 1\n    }\n    return positionType\n  }\n\n  /**\n   * 获取边节点图形的宽高。\n   */\n  private getShape(nodeId) {\n    const nodeModel = this.lf.getNodeModelById(nodeId)\n\n    return {\n      height: nodeModel?.height ?? 0,\n      width: nodeModel?.width ?? 0,\n    }\n  }\n\n  private formatData(data) {\n    const nodeMap = data.nodes.reduce((nMap, node) => {\n      const { type, properties, text, x, y } = node\n      if (text && typeof text === 'object') {\n        // 坐标转换为偏移量\n        text.x = text.x - x\n        text.y = text.y - y\n      }\n      nMap[node.id] = {\n        type,\n        properties,\n        text,\n        prev: [],\n        next: [],\n      }\n      return nMap\n    }, {})\n\n    data.edges.forEach((edge) => {\n      const { sourceNodeId, targetNodeId, id, properties, text } = edge\n      let newText = text\n      if (typeof text === 'object') {\n        newText = text.value\n      }\n      nodeMap[sourceNodeId].next.push({\n        edgeId: id,\n        nodeId: targetNodeId,\n        edgeType: edge.type,\n        properties,\n        text: newText,\n      })\n      nodeMap[targetNodeId].prev.push({\n        edgeId: id,\n        nodeId: sourceNodeId,\n        properties,\n        text: newText,\n      })\n    })\n    return nodeMap\n  }\n\n  addLevelHeight(level, height = 1, isNegative = false) {\n    let l = this.levelHeight[level]\n    if (!l) {\n      l = {\n        positiveHeight: 0,\n        negativeHeight: 0,\n      }\n      this.levelHeight[level] = l\n    }\n    isNegative ? (l.negativeHeight -= height) : (l.positiveHeight += height)\n  }\n\n  getLevelHeight(level, isNegative = false) {\n    const val = this.levelHeight[level]\n    if (!val) {\n      return 0\n    }\n    return isNegative ? val.negativeHeight : val.positiveHeight\n  }\n}\n\nexport { AutoLayout }\n", "import LogicFlow, { BaseNodeModel } from '@logicflow/core'\n\n// 后续并入FlowPath\nconst getPath = (id: string, lf: LogicFlow) => {\n  const el = lf.getModelById(id)\n  return getNodePath(el?.BaseType === 'node' ? el : el?.targetNode, lf)\n}\n\n// dfs + 动态规划\n// todo 算法优化\nconst getNodePath = (node, lf: LogicFlow) => {\n  const incomingPaths: any[] = []\n  const outgoingPaths: any[] = []\n\n  const getIncomingPaths = (curNode, path, prevNode?: BaseNodeModel) => {\n    if (prevNode) {\n      // * 上个节点和当前节点中间边\n      path.unshift(\n        ...lf\n          .getEdgeModels({\n            sourceNodeId: curNode.id,\n            targetNodeId: prevNode?.id,\n          })\n          .map((item) => item.id),\n      )\n    }\n\n    // * 路径中存在节点，则不再继续查找，说明出现环情况\n    if (path.includes(curNode.id)) {\n      incomingPaths.push(path)\n      return\n    }\n\n    // * 路径中当前加入节点\n    path.unshift(curNode.id)\n\n    if (!curNode.incoming.nodes.length) {\n      incomingPaths.push(path)\n      return\n    }\n\n    // * 往下找\n    curNode.incoming.nodes.forEach((nextNode) => {\n      getIncomingPaths(nextNode, path.slice(), curNode)\n    })\n  }\n\n  // * 同上逻辑\n  const getOutgoingPaths = (curNode, path, prevNode?: BaseNodeModel) => {\n    if (prevNode) {\n      path.push(\n        ...lf\n          .getEdgeModels({\n            sourceNodeId: prevNode?.id,\n            targetNodeId: curNode.id,\n          })\n          .map((item) => item.id),\n      )\n    }\n    if (path.includes(curNode.id)) {\n      outgoingPaths.push(path)\n      return\n    }\n\n    path.push(curNode.id)\n\n    if (!curNode.outgoing.nodes.length) {\n      outgoingPaths.push(path)\n      return\n    }\n\n    curNode.outgoing.nodes.forEach((nextNode) => {\n      getOutgoingPaths(nextNode, path.slice(), curNode)\n    })\n  }\n\n  getIncomingPaths(node, [])\n  getOutgoingPaths(node, [])\n\n  return [...new Set([...incomingPaths.flat(), ...outgoingPaths.flat()])]\n}\n\ntype IMode = 'single' | 'path'\n\nexport class Highlight {\n  lf: LogicFlow\n  static pluginName = 'highlight'\n  mode: IMode = 'path'\n  manual = false\n  tempStyles = {}\n\n  constructor({ lf }) {\n    this.lf = lf\n  }\n\n  setMode(mode: IMode) {\n    this.mode = mode\n  }\n\n  setManual(manual: boolean) {\n    this.manual = manual\n  }\n\n  private highlightSingle(id: string) {\n    const model = this.lf.getModelById(id)\n\n    if (model?.BaseType === 'node') {\n      // 高亮节点\n      model.updateStyles(this.tempStyles[id])\n    } else if (model?.BaseType === 'edge') {\n      // 高亮边及对应的节点\n      model.updateStyles(this.tempStyles[id])\n      model.sourceNode.updateStyles(this.tempStyles[model.sourceNode.id])\n      model.targetNode.updateStyles(this.tempStyles[model.targetNode.id])\n    }\n  }\n\n  private highlightPath(id: string) {\n    const path = getPath(id, this.lf)\n    path.forEach((_id) => {\n      // 高亮路径上所有的边和节点\n      this.lf.getModelById(_id)?.updateStyles(this.tempStyles[_id])\n    })\n  }\n\n  highlight(id: string, mode: IMode = this.mode) {\n    if (this.manual) return\n    if (Object.keys(this.tempStyles).length) {\n      this.restoreHighlight()\n    }\n\n    Object.values(this.lf.graphModel.modelsMap).forEach((item) => {\n      //  所有节点样式都进行备份\n      const oStyle =\n        item.BaseType === 'node' ? item.getNodeStyle() : item.getEdgeStyle()\n      this.tempStyles[item.id] = { ...oStyle }\n\n      //  所有节点都设置透明度为0.1\n      item.setStyles({ opacity: 0.1 })\n    })\n\n    const modeTrigger = {\n      single: this.highlightSingle.bind(this),\n      path: this.highlightPath.bind(this),\n    }\n\n    modeTrigger[mode](id)\n  }\n\n  restoreHighlight() {\n    // 恢复所有节点的样式\n    if (!Object.keys(this.tempStyles).length) return\n    Object.values(this.lf.graphModel.modelsMap).forEach((item) => {\n      const oStyle = this.tempStyles[item.id] ?? {}\n      item.updateStyles({ ...oStyle })\n    })\n\n    this.tempStyles = {}\n  }\n\n  render() {\n    this.lf.on('node:mouseenter', ({ data }: any) => this.highlight(data.id))\n    this.lf.on('edge:mouseenter', ({ data }: any) => this.highlight(data.id))\n\n    this.lf.on('node:mouseleave', this.restoreHighlight.bind(this))\n    this.lf.on('edge:mouseleave', this.restoreHighlight.bind(this))\n    this.lf.on('history:change', this.restoreHighlight.bind(this))\n  }\n\n  destroy() {}\n}\n\nexport default Highlight\n"],
  "mappings": "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",
  "names": ["IDS", "StartEventModel", "StartEventView", "__extends", "EndEventModel", "__extends", "EndEventView", "style", "__extends", "SequenceFlowModel", "__extends", "SequenceFlowView", "__extends", "ExclusiveGatewayModel", "__extends", "ExclusiveGatewayView", "style", "__assign", "__extends", "ServiceTaskModel", "__extends", "ServiceTaskView", "style", "__assign", "__extends", "UserTaskModel", "__extends", "UserTaskView", "style", "__assign", "IDs", "ids", "getBpmnId", "trans", "BpmnElements", "_a", "shapeValue", "node", "type", "edgeValue", "BpmnAdapter", "__assign", "getBpmnId", "__extends", "BpmnXmlAdapter", "data", "IDs", "ids", "__read", "__extends", "view", "model", "style", "_a", "__assign", "__read", "__extends", "view", "model", "style", "_a", "__spreadArray", "__assign", "__read", "__extends", "view", "model", "style", "_a", "__spreadArray", "__assign", "__read", "__extends", "view", "model", "style", "_a", "__spreadArray", "__assign", "__read", "__extends", "view", "model", "style", "_a", "__spreadArray", "__assign", "type", "__extends", "view", "model", "style", "__assign", "ExclusiveGateway", "type", "__extends", "view", "model", "style", "__spreadArray", "__read", "__assign", "boundaryEvent", "__extends", "Control", "__assign", "type", "__read", "style", "__extends", "ControlGroup", "__assign", "style", "__extends", "EllipseResizeModel", "style", "__extends", "EllipseResizeView", "__extends", "DiamondResizeModel", "style", "__extends", "DiamondResizeView", "style", "__assign", "__extends", "HtmlResizeModel", "style", "__extends", "HtmlResizeView", "__extends", "RectResizeModel", "style", "__extends", "RectResizeView", "__extends", "GroupNodeModel", "style", "__spreadArray", "__read", "type", "__extends", "GroupNode", "style", "__assign", "DEFAULT_BOTTOM_Z_INDEX", "Group", "_a", "b", "__spreadArray", "__read", "type", "__assign", "__extends", "view", "model", "_a", "style", "__assign", "boundaryEvent", "type", "ServiceTask", "UserTask", "__extends", "model", "__assign", "view", "SequenceFlow", "BPMNElements", "__read", "StartEventConfig", "EndEventConfig", "ExclusiveGatewayConfig", "ServiceTaskConfig", "UserTaskConfig", "XML", "trans", "lfXml2Json", "type", "addSpace", "handleAttributes", "getAttributes", "tn", "toXml", "lfJson2Xml", "BpmnElements", "__values", "__read", "__spreadArray", "key", "handleAttributes", "convertLf2ProcessData", "__rest", "_a", "i", "item", "convertLf2DiagramData", "convertBpmn2LfData", "data", "getLfEdges", "getLfNodes", "type", "shapeValue", "node", "getNodeConfig", "edgeValue", "getEdgeConfig", "BPMNBaseAdapter", "__assign", "StartEventConfig", "EndEventConfig", "ExclusiveGatewayConfig", "ServiceTaskConfig", "UserTaskConfig", "__extends", "BPMNAdapter", "lfXml2Json", "lfJson2Xml", "__spreadArray", "__read", "Snapshot", "__awaiter", "_a", "_this", "__generator", "style", "type", "__assign", "__read", "TurboAdapter", "SegmentDirection", "InsertNodeInPolyline", "type", "__spreadArray", "__read", "Control", "_", "__spreadArray", "__read", "Menu", "__spreadArray", "__read", "type", "ContextMenu", "type", "__spreadArray", "__read", "DndPanel", "SelectionSelect", "_a", "MiniMap", "_", "style", "__values", "__read", "__extends", "CurvedEdge", "style", "__assign", "CurvedEdgeModel", "__extends", "NodeSelectionView", "style", "__assign", "NodeSelectionModel", "_a", "NodeSelection", "ids", "FlowPath", "type", "__spreadArray", "__read", "b", "AutoLayout", "type", "__assign", "__spreadArray", "__read", "Highlight", "__assign"]
}
