import { Component } from 'preact/compat';
import { VNode } from 'preact';
import LogicFlow from '../LogicFlow';
import { GraphModel, BaseEdgeModel, BaseNodeModel } from '../model';
export type IToolProps = {
    textEditElement?: BaseNodeModel | BaseEdgeModel;
    graphModel: GraphModel;
    logicFlow: LogicFlow;
};
type ToolConstructor = new (props: IToolProps) => Component<IToolProps>;
export declare class Tool {
    tools?: Component[];
    components?: VNode<IToolProps>[];
    toolMap: Map<string, ToolConstructor>;
    instance: LogicFlow;
    constructor(instance: LogicFlow);
    private isDisabledTool;
    registerTool(name: string, component: ToolConstructor): void;
    getTools(): ToolConstructor[];
    getInstance(): LogicFlow;
}
export default Tool;
