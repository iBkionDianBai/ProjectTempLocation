import { b as MockHttpItem, c as MockWebsocketItem, a as MockOptions } from './types-D50kW_6z.cjs';
export { d as MockRequest } from './types-D50kW_6z.cjs';
import 'node:buffer';
import 'node:http';
import 'node:stream';
import 'cookies';
import 'cors';
import 'formidable';
import 'vite';
import 'ws';
import 'co-body';

/**
 * mock config Type helper
 *
 * mock配置 类型帮助函数
 * @param config see config docs:
 * {@link https://vite-plugin-mock-dev-server.netlify.app/en/guide/mock-config en-US DOC} |
 * {@link https://vite-plugin-mock-dev-server.netlify.app/guide/mock-config zh-CN DOC}
 *
 * @example
 * Mock Http Request
 * ```ts
 * export default defineMock({
 *   url: '/api/example',
 *   method: ['GET', 'POST'],
 *   body: { a: 1 },
 * })
 * ```
 * ```ts
 * export default defineMock({
 *   url: '/api/example',
 *   method: 'GET',
 *   body: ({ query }) => ({ a: 1, b: query.b }),
 * })
 * ```
 * @example
 * Mock WebSocket
 * ```ts
 * export default defineMock({
 *   url: '/socket.io',
 *   ws: true,
 *   setup(wss) {
 *     wss.on('connection', (ws) => {
 *       ws.on('message', (rawData) => console.log(rawData))
 *       ws.send('data')
 *     })
 *   },
 * })
 * ```
 */
declare function defineMock(config: MockHttpItem): MockHttpItem;
declare function defineMock(config: MockWebsocketItem): MockWebsocketItem;
declare function defineMock(config: MockOptions): MockOptions;
/**
 * Return a custom defineMock function to support preprocessing of mock config.
 *
 * 返回一个自定义的 defineMock 函数，用于支持对 mock config 的预处理。
 * @param transformer preprocessing function
 * @example
 * ```ts
 * const definePostMock = createDefineMock((mock) => {
 *   mock.url = '/api/post/' + mock.url
 * })
 * export default definePostMock({
 *   url: 'list',
 *   body: [{ title: '1' }, { title: '2' }],
 * })
 * ```
 */
declare function createDefineMock(transformer: (mock: MockHttpItem | MockWebsocketItem) => MockHttpItem | MockWebsocketItem | void): typeof defineMock;

type MockData<T = any> = readonly [
    /**
     * getter
     */
    () => T,
    /**
     * setter
     */
    (val: T | ((val: T) => T | void)) => void
] & {
    value: T;
};
declare function defineMockData<T = any>(key: string, initialData: T): MockData<T>;

export { type MockData, MockHttpItem, MockOptions, MockWebsocketItem, createDefineMock, defineMock, defineMockData };
